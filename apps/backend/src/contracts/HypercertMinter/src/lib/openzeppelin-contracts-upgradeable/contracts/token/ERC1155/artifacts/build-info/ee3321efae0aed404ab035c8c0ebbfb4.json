{
	"id": "ee3321efae0aed404ab035c8c0ebbfb4",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC1155/ERC1155.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC1155Upgradeable.sol\";\nimport \"./IERC1155ReceiverUpgradeable.sol\";\nimport \"./extensions/IERC1155MetadataURIUpgradeable.sol\";\nimport \"../../utils/AddressUpgradeable.sol\";\nimport \"../../utils/ContextUpgradeable.sol\";\nimport \"../../utils/introspection/ERC165Upgradeable.sol\";\nimport \"../../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Implementation of the basic standard multi-token.\n * See https://eips.ethereum.org/EIPS/eip-1155\n * Originally based on code by Enjin: https://github.com/enjin/erc-1155\n *\n * _Available since v3.1._\n */\ncontract ERC1155Upgradeable is Initializable, ContextUpgradeable, ERC165Upgradeable, IERC1155Upgradeable, IERC1155MetadataURIUpgradeable {\n    using AddressUpgradeable for address;\n\n    // Mapping from token ID to account balances\n    mapping(uint256 => mapping(address => uint256)) private _balances;\n\n    // Mapping from account to operator approvals\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\n\n    // Used as the URI for all token types by relying on ID substitution, e.g. https://token-cdn-domain/{id}.json\n    string private _uri;\n\n    /**\n     * @dev See {_setURI}.\n     */\n    function __ERC1155_init(string memory uri_) internal onlyInitializing {\n        __ERC1155_init_unchained(uri_);\n    }\n\n    function __ERC1155_init_unchained(string memory uri_) internal onlyInitializing {\n        _setURI(uri_);\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165Upgradeable, IERC165Upgradeable) returns (bool) {\n        return\n            interfaceId == type(IERC1155Upgradeable).interfaceId ||\n            interfaceId == type(IERC1155MetadataURIUpgradeable).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC1155MetadataURI-uri}.\n     *\n     * This implementation returns the same URI for *all* token types. It relies\n     * on the token type ID substitution mechanism\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n     *\n     * Clients calling this function must replace the `\\{id\\}` substring with the\n     * actual token type ID.\n     */\n    function uri(uint256) public view virtual override returns (string memory) {\n        return _uri;\n    }\n\n    /**\n     * @dev See {IERC1155-balanceOf}.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {\n        require(account != address(0), \"ERC1155: address zero is not a valid owner\");\n        return _balances[id][account];\n    }\n\n    /**\n     * @dev See {IERC1155-balanceOfBatch}.\n     *\n     * Requirements:\n     *\n     * - `accounts` and `ids` must have the same length.\n     */\n    function balanceOfBatch(address[] memory accounts, uint256[] memory ids)\n        public\n        view\n        virtual\n        override\n        returns (uint256[] memory)\n    {\n        require(accounts.length == ids.length, \"ERC1155: accounts and ids length mismatch\");\n\n        uint256[] memory batchBalances = new uint256[](accounts.length);\n\n        for (uint256 i = 0; i < accounts.length; ++i) {\n            batchBalances[i] = balanceOf(accounts[i], ids[i]);\n        }\n\n        return batchBalances;\n    }\n\n    /**\n     * @dev See {IERC1155-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual override {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC1155-isApprovedForAll}.\n     */\n    function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {\n        return _operatorApprovals[account][operator];\n    }\n\n    /**\n     * @dev See {IERC1155-safeTransferFrom}.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes memory data\n    ) public virtual override {\n        require(\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\n            \"ERC1155: caller is not token owner or approved\"\n        );\n        _safeTransferFrom(from, to, id, amount, data);\n    }\n\n    /**\n     * @dev See {IERC1155-safeBatchTransferFrom}.\n     */\n    function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) public virtual override {\n        require(\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\n            \"ERC1155: caller is not token owner or approved\"\n        );\n        _safeBatchTransferFrom(from, to, ids, amounts, data);\n    }\n\n    /**\n     * @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `from` must have a balance of tokens of type `id` of at least `amount`.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function _safeTransferFrom(\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes memory data\n    ) internal virtual {\n        require(to != address(0), \"ERC1155: transfer to the zero address\");\n\n        address operator = _msgSender();\n        uint256[] memory ids = _asSingletonArray(id);\n        uint256[] memory amounts = _asSingletonArray(amount);\n\n        _beforeTokenTransfer(operator, from, to, ids, amounts, data);\n\n        uint256 fromBalance = _balances[id][from];\n        require(fromBalance >= amount, \"ERC1155: insufficient balance for transfer\");\n        unchecked {\n            _balances[id][from] = fromBalance - amount;\n        }\n        _balances[id][to] += amount;\n\n        emit TransferSingle(operator, from, to, id, amount);\n\n        _afterTokenTransfer(operator, from, to, ids, amounts, data);\n\n        _doSafeTransferAcceptanceCheck(operator, from, to, id, amount, data);\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_safeTransferFrom}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function _safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) internal virtual {\n        require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\");\n        require(to != address(0), \"ERC1155: transfer to the zero address\");\n\n        address operator = _msgSender();\n\n        _beforeTokenTransfer(operator, from, to, ids, amounts, data);\n\n        for (uint256 i = 0; i < ids.length; ++i) {\n            uint256 id = ids[i];\n            uint256 amount = amounts[i];\n\n            uint256 fromBalance = _balances[id][from];\n            require(fromBalance >= amount, \"ERC1155: insufficient balance for transfer\");\n            unchecked {\n                _balances[id][from] = fromBalance - amount;\n            }\n            _balances[id][to] += amount;\n        }\n\n        emit TransferBatch(operator, from, to, ids, amounts);\n\n        _afterTokenTransfer(operator, from, to, ids, amounts, data);\n\n        _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, amounts, data);\n    }\n\n    /**\n     * @dev Sets a new URI for all token types, by relying on the token type ID\n     * substitution mechanism\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n     *\n     * By this mechanism, any occurrence of the `\\{id\\}` substring in either the\n     * URI or any of the amounts in the JSON file at said URI will be replaced by\n     * clients with the token type ID.\n     *\n     * For example, the `https://token-cdn-domain/\\{id\\}.json` URI would be\n     * interpreted by clients as\n     * `https://token-cdn-domain/000000000000000000000000000000000000000000000000000000000004cce0.json`\n     * for token type ID 0x4cce0.\n     *\n     * See {uri}.\n     *\n     * Because these URIs cannot be meaningfully represented by the {URI} event,\n     * this function emits no events.\n     */\n    function _setURI(string memory newuri) internal virtual {\n        _uri = newuri;\n    }\n\n    /**\n     * @dev Creates `amount` tokens of token type `id`, and assigns them to `to`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function _mint(\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes memory data\n    ) internal virtual {\n        require(to != address(0), \"ERC1155: mint to the zero address\");\n\n        address operator = _msgSender();\n        uint256[] memory ids = _asSingletonArray(id);\n        uint256[] memory amounts = _asSingletonArray(amount);\n\n        _beforeTokenTransfer(operator, address(0), to, ids, amounts, data);\n\n        _balances[id][to] += amount;\n        emit TransferSingle(operator, address(0), to, id, amount);\n\n        _afterTokenTransfer(operator, address(0), to, ids, amounts, data);\n\n        _doSafeTransferAcceptanceCheck(operator, address(0), to, id, amount, data);\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_mint}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - `ids` and `amounts` must have the same length.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function _mintBatch(\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) internal virtual {\n        require(to != address(0), \"ERC1155: mint to the zero address\");\n        require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\");\n\n        address operator = _msgSender();\n\n        _beforeTokenTransfer(operator, address(0), to, ids, amounts, data);\n\n        for (uint256 i = 0; i < ids.length; i++) {\n            _balances[ids[i]][to] += amounts[i];\n        }\n\n        emit TransferBatch(operator, address(0), to, ids, amounts);\n\n        _afterTokenTransfer(operator, address(0), to, ids, amounts, data);\n\n        _doSafeBatchTransferAcceptanceCheck(operator, address(0), to, ids, amounts, data);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens of token type `id` from `from`\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `from` must have at least `amount` tokens of token type `id`.\n     */\n    function _burn(\n        address from,\n        uint256 id,\n        uint256 amount\n    ) internal virtual {\n        require(from != address(0), \"ERC1155: burn from the zero address\");\n\n        address operator = _msgSender();\n        uint256[] memory ids = _asSingletonArray(id);\n        uint256[] memory amounts = _asSingletonArray(amount);\n\n        _beforeTokenTransfer(operator, from, address(0), ids, amounts, \"\");\n\n        uint256 fromBalance = _balances[id][from];\n        require(fromBalance >= amount, \"ERC1155: burn amount exceeds balance\");\n        unchecked {\n            _balances[id][from] = fromBalance - amount;\n        }\n\n        emit TransferSingle(operator, from, address(0), id, amount);\n\n        _afterTokenTransfer(operator, from, address(0), ids, amounts, \"\");\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_burn}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - `ids` and `amounts` must have the same length.\n     */\n    function _burnBatch(\n        address from,\n        uint256[] memory ids,\n        uint256[] memory amounts\n    ) internal virtual {\n        require(from != address(0), \"ERC1155: burn from the zero address\");\n        require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\");\n\n        address operator = _msgSender();\n\n        _beforeTokenTransfer(operator, from, address(0), ids, amounts, \"\");\n\n        for (uint256 i = 0; i < ids.length; i++) {\n            uint256 id = ids[i];\n            uint256 amount = amounts[i];\n\n            uint256 fromBalance = _balances[id][from];\n            require(fromBalance >= amount, \"ERC1155: burn amount exceeds balance\");\n            unchecked {\n                _balances[id][from] = fromBalance - amount;\n            }\n        }\n\n        emit TransferBatch(operator, from, address(0), ids, amounts);\n\n        _afterTokenTransfer(operator, from, address(0), ids, amounts, \"\");\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function _setApprovalForAll(\n        address owner,\n        address operator,\n        bool approved\n    ) internal virtual {\n        require(owner != operator, \"ERC1155: setting approval status for self\");\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Hook that is called before any token transfer. This includes minting\n     * and burning, as well as batched variants.\n     *\n     * The same hook is called on both single and batched variants. For single\n     * transfers, the length of the `ids` and `amounts` arrays will be 1.\n     *\n     * Calling conditions (for each `id` and `amount` pair):\n     *\n     * - When `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * of token type `id` will be  transferred to `to`.\n     * - When `from` is zero, `amount` tokens of token type `id` will be minted\n     * for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens of token type `id`\n     * will be burned.\n     * - `from` and `to` are never both zero.\n     * - `ids` and `amounts` have the same, non-zero length.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address operator,\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any token transfer. This includes minting\n     * and burning, as well as batched variants.\n     *\n     * The same hook is called on both single and batched variants. For single\n     * transfers, the length of the `id` and `amount` arrays will be 1.\n     *\n     * Calling conditions (for each `id` and `amount` pair):\n     *\n     * - When `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * of token type `id` will be  transferred to `to`.\n     * - When `from` is zero, `amount` tokens of token type `id` will be minted\n     * for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens of token type `id`\n     * will be burned.\n     * - `from` and `to` are never both zero.\n     * - `ids` and `amounts` have the same, non-zero length.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(\n        address operator,\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) internal virtual {}\n\n    function _doSafeTransferAcceptanceCheck(\n        address operator,\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes memory data\n    ) private {\n        if (to.isContract()) {\n            try IERC1155ReceiverUpgradeable(to).onERC1155Received(operator, from, id, amount, data) returns (bytes4 response) {\n                if (response != IERC1155ReceiverUpgradeable.onERC1155Received.selector) {\n                    revert(\"ERC1155: ERC1155Receiver rejected tokens\");\n                }\n            } catch Error(string memory reason) {\n                revert(reason);\n            } catch {\n                revert(\"ERC1155: transfer to non-ERC1155Receiver implementer\");\n            }\n        }\n    }\n\n    function _doSafeBatchTransferAcceptanceCheck(\n        address operator,\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) private {\n        if (to.isContract()) {\n            try IERC1155ReceiverUpgradeable(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (\n                bytes4 response\n            ) {\n                if (response != IERC1155ReceiverUpgradeable.onERC1155BatchReceived.selector) {\n                    revert(\"ERC1155: ERC1155Receiver rejected tokens\");\n                }\n            } catch Error(string memory reason) {\n                revert(reason);\n            } catch {\n                revert(\"ERC1155: transfer to non-ERC1155Receiver implementer\");\n            }\n        }\n    }\n\n    function _asSingletonArray(uint256 element) private pure returns (uint256[] memory) {\n        uint256[] memory array = new uint256[](1);\n        array[0] = element;\n\n        return array;\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[47] private __gap;\n}\n"
			},
			"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.2;\n\nimport \"../../utils/AddressUpgradeable.sol\";\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n * case an upgrade adds a module that needs to be initialized.\n *\n * For example:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * contract MyToken is ERC20Upgradeable {\n *     function initialize() initializer public {\n *         __ERC20_init(\"MyToken\", \"MTK\");\n *     }\n * }\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n *     function initializeV2() reinitializer(2) public {\n *         __ERC20Permit_init(\"MyToken\");\n *     }\n * }\n * ```\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n *\n * [CAUTION]\n * ====\n * Avoid leaving a contract uninitialized.\n *\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * /// @custom:oz-upgrades-unsafe-allow constructor\n * constructor() {\n *     _disableInitializers();\n * }\n * ```\n * ====\n */\nabstract contract Initializable {\n    /**\n     * @dev Indicates that the contract has been initialized.\n     * @custom:oz-retyped-from bool\n     */\n    uint8 private _initialized;\n\n    /**\n     * @dev Indicates that the contract is in the process of being initialized.\n     */\n    bool private _initializing;\n\n    /**\n     * @dev Triggered when the contract has been initialized or reinitialized.\n     */\n    event Initialized(uint8 version);\n\n    /**\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n     * `onlyInitializing` functions can be used to initialize parent contracts.\n     *\n     * Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\n     * constructor.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier initializer() {\n        bool isTopLevelCall = !_initializing;\n        require(\n            (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1),\n            \"Initializable: contract is already initialized\"\n        );\n        _initialized = 1;\n        if (isTopLevelCall) {\n            _initializing = true;\n        }\n        _;\n        if (isTopLevelCall) {\n            _initializing = false;\n            emit Initialized(1);\n        }\n    }\n\n    /**\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n     * used to initialize parent contracts.\n     *\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\n     * are added through upgrades and that require initialization.\n     *\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\n     *\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n     * a contract, executing them in the right order is up to the developer or operator.\n     *\n     * WARNING: setting the version to 255 will prevent any future reinitialization.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier reinitializer(uint8 version) {\n        require(!_initializing && _initialized < version, \"Initializable: contract is already initialized\");\n        _initialized = version;\n        _initializing = true;\n        _;\n        _initializing = false;\n        emit Initialized(version);\n    }\n\n    /**\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\n     */\n    modifier onlyInitializing() {\n        require(_initializing, \"Initializable: contract is not initializing\");\n        _;\n    }\n\n    /**\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n     * through proxies.\n     *\n     * Emits an {Initialized} event the first time it is successfully executed.\n     */\n    function _disableInitializers() internal virtual {\n        require(!_initializing, \"Initializable: contract is initializing\");\n        if (_initialized != type(uint8).max) {\n            _initialized = type(uint8).max;\n            emit Initialized(type(uint8).max);\n        }\n    }\n\n    /**\n     * @dev Internal function that returns the initialized version. Returns `_initialized`\n     */\n    function _getInitializedVersion() internal view returns (uint8) {\n        return _initialized;\n    }\n\n    /**\n     * @dev Internal function that returns the initialized version. Returns `_initializing`\n     */\n    function _isInitializing() internal view returns (bool) {\n        return _initializing;\n    }\n}\n"
			},
			"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC165Upgradeable.sol\";\nimport \"../../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n *\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\n */\nabstract contract ERC165Upgradeable is Initializable, IERC165Upgradeable {\n    function __ERC165_init() internal onlyInitializing {\n    }\n\n    function __ERC165_init_unchained() internal onlyInitializing {\n    }\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IERC165Upgradeable).interfaceId;\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[50] private __gap;\n}\n"
			},
			"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\nimport \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract ContextUpgradeable is Initializable {\n    function __Context_init() internal onlyInitializing {\n    }\n\n    function __Context_init_unchained() internal onlyInitializing {\n    }\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[50] private __gap;\n}\n"
			},
			"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary AddressUpgradeable {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n     *\n     * _Available since v4.8._\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        if (success) {\n            if (returndata.length == 0) {\n                // only check isContract if the call was successful and the return data is empty\n                // otherwise we already know that it was a contract\n                require(isContract(target), \"Address: call to non-contract\");\n            }\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason or using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert(errorMessage);\n        }\n    }\n}\n"
			},
			"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/extensions/IERC1155MetadataURIUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC1155/extensions/IERC1155MetadataURI.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC1155Upgradeable.sol\";\n\n/**\n * @dev Interface of the optional ERC1155MetadataExtension interface, as defined\n * in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP].\n *\n * _Available since v3.1._\n */\ninterface IERC1155MetadataURIUpgradeable is IERC1155Upgradeable {\n    /**\n     * @dev Returns the URI for token type `id`.\n     *\n     * If the `\\{id\\}` substring is present in the URI, it must be replaced by\n     * clients with the actual token type ID.\n     */\n    function uri(uint256 id) external view returns (string memory);\n}\n"
			},
			"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/IERC1155ReceiverUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC1155/IERC1155Receiver.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165Upgradeable.sol\";\n\n/**\n * @dev _Available since v3.1._\n */\ninterface IERC1155ReceiverUpgradeable is IERC165Upgradeable {\n    /**\n     * @dev Handles the receipt of a single ERC1155 token type. This function is\n     * called at the end of a `safeTransferFrom` after the balance has been updated.\n     *\n     * NOTE: To accept the transfer, this must return\n     * `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n     * (i.e. 0xf23a6e61, or its own function selector).\n     *\n     * @param operator The address which initiated the transfer (i.e. msg.sender)\n     * @param from The address which previously owned the token\n     * @param id The ID of the token being transferred\n     * @param value The amount of tokens being transferred\n     * @param data Additional data with no specified format\n     * @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed\n     */\n    function onERC1155Received(\n        address operator,\n        address from,\n        uint256 id,\n        uint256 value,\n        bytes calldata data\n    ) external returns (bytes4);\n\n    /**\n     * @dev Handles the receipt of a multiple ERC1155 token types. This function\n     * is called at the end of a `safeBatchTransferFrom` after the balances have\n     * been updated.\n     *\n     * NOTE: To accept the transfer(s), this must return\n     * `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n     * (i.e. 0xbc197c81, or its own function selector).\n     *\n     * @param operator The address which initiated the batch transfer (i.e. msg.sender)\n     * @param from The address which previously owned the token\n     * @param ids An array containing ids of each token being transferred (order and length must match values array)\n     * @param values An array containing amounts of each token being transferred (order and length must match ids array)\n     * @param data Additional data with no specified format\n     * @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed\n     */\n    function onERC1155BatchReceived(\n        address operator,\n        address from,\n        uint256[] calldata ids,\n        uint256[] calldata values,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"
			},
			"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/IERC1155Upgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC1155/IERC1155.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165Upgradeable.sol\";\n\n/**\n * @dev Required interface of an ERC1155 compliant contract, as defined in the\n * https://eips.ethereum.org/EIPS/eip-1155[EIP].\n *\n * _Available since v3.1._\n */\ninterface IERC1155Upgradeable is IERC165Upgradeable {\n    /**\n     * @dev Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\n     */\n    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);\n\n    /**\n     * @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n     * transfers.\n     */\n    event TransferBatch(\n        address indexed operator,\n        address indexed from,\n        address indexed to,\n        uint256[] ids,\n        uint256[] values\n    );\n\n    /**\n     * @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n     * `approved`.\n     */\n    event ApprovalForAll(address indexed account, address indexed operator, bool approved);\n\n    /**\n     * @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n     *\n     * If an {URI} event was emitted for `id`, the standard\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n     * returned by {IERC1155MetadataURI-uri}.\n     */\n    event URI(string value, uint256 indexed id);\n\n    /**\n     * @dev Returns the amount of tokens of token type `id` owned by `account`.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function balanceOf(address account, uint256 id) external view returns (uint256);\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n     *\n     * Requirements:\n     *\n     * - `accounts` and `ids` must have the same length.\n     */\n    function balanceOfBatch(address[] calldata accounts, uint256[] calldata ids)\n        external\n        view\n        returns (uint256[] memory);\n\n    /**\n     * @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n     *\n     * Emits an {ApprovalForAll} event.\n     *\n     * Requirements:\n     *\n     * - `operator` cannot be the caller.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n     *\n     * See {setApprovalForAll}.\n     */\n    function isApprovedForAll(address account, address operator) external view returns (bool);\n\n    /**\n     * @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n     * - `from` must have a balance of tokens of type `id` of at least `amount`.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes calldata data\n    ) external;\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - `ids` and `amounts` must have the same length.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] calldata ids,\n        uint256[] calldata amounts,\n        bytes calldata data\n    ) external;\n}\n"
			},
			"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/IERC165Upgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165Upgradeable {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol": {
				"Initializable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "version",
									"type": "uint8"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"custom:oz-upgrades-unsafe-allow": "constructor constructor() {     _disableInitializers(); } ``` ====",
						"details": "This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ``` contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\"MyToken\", \"MTK\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\"MyToken\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```",
						"events": {
							"Initialized(uint8)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"_initialized": {
								"custom:oz-retyped-from": "bool",
								"details": "Indicates that the contract has been initialized."
							},
							"_initializing": {
								"details": "Indicates that the contract is in the process of being initialized."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ``` contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"_initialized\":{\"custom:oz-retyped-from\":\"bool\",\"details\":\"Indicates that the contract has been initialized.\"},\"_initializing\":{\"details\":\"Indicates that the contract is in the process of being initialized.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xedc5eaa54866c6d0e8960d9fe8ea6f9052ba28686907f6886f83dfba41fa1549\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0b296244e62d13e87d8272c574fb58c22af02b262d74d7a8f642753522351bb0\",\"dweb:/ipfs/Qmcd3MfBWRE8EQt67AqgGGHviNum5aQ7JE7manH5nNtx4o\"]},\"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x0a3b4afc301241e2629ad192fa02e0f8626e3cf38ab6f45342bfd7afbde16ee0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b189423f1102ff4487e9c59a65ec400b98cc4aeef478dac8272b482e9f5ad7de\",\"dweb:/ipfs/QmdpYHrzD8wPe5DMuEiWkXiVLsTkqD7C4tbBjWwkBQwJi2\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 6,
								"contract": "HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:Initializable",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_uint8"
							},
							{
								"astId": 9,
								"contract": "HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:Initializable",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol": {
				"ERC1155Upgradeable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "version",
									"type": "uint8"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "uri",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the basic standard multi-token. See https://eips.ethereum.org/EIPS/eip-1155 Originally based on code by Enjin: https://github.com/enjin/erc-1155 _Available since v3.1._",
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC1155-isApprovedForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "See {IERC1155-safeBatchTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "See {IERC1155-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC1155-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"uri(uint256)": {
								"details": "See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\{id\\}` substring with the actual token type ID."
							}
						},
						"stateVariables": {
							"__gap": {
								"details": "This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":682:18002  contract ERC1155Upgradeable is Initializable, ContextUpgradeable, ERC165Upgradeable, IERC1155Upgradeable, IERC1155MetadataURIUpgradeable {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":682:18002  contract ERC1155Upgradeable is Initializable, ContextUpgradeable, ERC165Upgradeable, IERC1155Upgradeable, IERC1155MetadataURIUpgradeable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x4e1273f4\n      gt\n      tag_11\n      jumpi\n      dup1\n      0x4e1273f4\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xf242432a\n      eq\n      tag_10\n      jumpi\n      jump(tag_2)\n    tag_11:\n      dup1\n      0xfdd58e\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x01ffc9a7\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x0e89341c\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x2eb2c2d6\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":2593:2820  function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {... */\n    tag_3:\n      tag_12\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_13\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_13:\n      tag_15\n      jump\t// in\n    tag_12:\n      mload(0x40)\n      tag_16\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":1600:1949  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165Upgradeable, IERC165Upgradeable) returns (bool) {... */\n    tag_4:\n      tag_18\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_19\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_19:\n      tag_21\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      tag_22\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":2348:2451  function uri(uint256) public view virtual override returns (string memory) {... */\n    tag_5:\n      tag_24\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_25\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      tag_27\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      tag_28\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":4472:4898  function safeBatchTransferFrom(... */\n    tag_6:\n      tag_30\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_31\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n      tag_33\n      jump\t// in\n    tag_30:\n      stop\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":2977:3485  function balanceOfBatch(address[] memory accounts, uint256[] memory ids)... */\n    tag_7:\n      tag_34\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_35\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_35:\n      tag_37\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      tag_38\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":3553:3706  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_8:\n      tag_40\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_41\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_41:\n      tag_43\n      jump\t// in\n    tag_40:\n      stop\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":3773:3939  function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {... */\n    tag_9:\n      tag_44\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_45\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_45:\n      tag_47\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      tag_48\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":4006:4400  function safeTransferFrom(... */\n    tag_10:\n      tag_49\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_50\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_50:\n      tag_52\n      jump\t// in\n    tag_49:\n      stop\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":2593:2820  function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {... */\n    tag_15:\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":2679:2686  uint256 */\n      0x00\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":2725:2726  0 */\n      dup1\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":2706:2727  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":2706:2713  account */\n      dup4\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":2706:2727  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":2698:2774  require(account != address(0), \"ERC1155: address zero is not a valid owner\") */\n      tag_54\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_55\n      swap1\n      tag_56\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_54:\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":2791:2800  _balances */\n      0x65\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":2791:2804  _balances[id] */\n      0x00\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":2801:2803  id */\n      dup4\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":2791:2804  _balances[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":2791:2813  _balances[id][account] */\n      0x00\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":2805:2812  account */\n      dup5\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":2791:2813  _balances[id][account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":2784:2813  return _balances[id][account] */\n      swap1\n      pop\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":2593:2820  function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":1600:1949  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165Upgradeable, IERC165Upgradeable) returns (bool) {... */\n    tag_21:\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":1724:1728  bool */\n      0x00\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":1774:1811  type(IERC1155Upgradeable).interfaceId */\n      0xd9b67a2600000000000000000000000000000000000000000000000000000000\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":1759:1811  interfaceId == type(IERC1155Upgradeable).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":1759:1770  interfaceId */\n      dup3\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":1759:1811  interfaceId == type(IERC1155Upgradeable).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":1759:1890  interfaceId == type(IERC1155Upgradeable).interfaceId ||... */\n      dup1\n      tag_58\n      jumpi\n      pop\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":1842:1890  type(IERC1155MetadataURIUpgradeable).interfaceId */\n      0x0e89341c00000000000000000000000000000000000000000000000000000000\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":1827:1890  interfaceId == type(IERC1155MetadataURIUpgradeable).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":1827:1838  interfaceId */\n      dup3\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":1827:1890  interfaceId == type(IERC1155MetadataURIUpgradeable).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":1759:1890  interfaceId == type(IERC1155Upgradeable).interfaceId ||... */\n    tag_58:\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":1759:1942  interfaceId == type(IERC1155Upgradeable).interfaceId ||... */\n      dup1\n      tag_59\n      jumpi\n      pop\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":1906:1942  super.supportsInterface(interfaceId) */\n      tag_60\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":1930:1941  interfaceId */\n      dup3\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":1906:1929  super.supportsInterface */\n      tag_61\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":1906:1942  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_60:\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":1759:1942  interfaceId == type(IERC1155Upgradeable).interfaceId ||... */\n    tag_59:\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":1740:1942  return... */\n      swap1\n      pop\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":1600:1949  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165Upgradeable, IERC165Upgradeable) returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":2348:2451  function uri(uint256) public view virtual override returns (string memory) {... */\n    tag_27:\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":2408:2421  string memory */\n      0x60\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":2440:2444  _uri */\n      0x67\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":2433:2444  return _uri */\n      dup1\n      sload\n      tag_63\n      swap1\n      tag_64\n      jump\t// in\n    tag_63:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_65\n      swap1\n      tag_64\n      jump\t// in\n    tag_65:\n      dup1\n      iszero\n      tag_66\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_67\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_66)\n    tag_67:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_68:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_68\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_66:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":2348:2451  function uri(uint256) public view virtual override returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":4472:4898  function safeBatchTransferFrom(... */\n    tag_33:\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":4705:4717  _msgSender() */\n      tag_70\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":4705:4715  _msgSender */\n      tag_71\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":4705:4717  _msgSender() */\n      jump\t// in\n    tag_70:\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":4697:4717  from == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":4697:4701  from */\n      dup6\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":4697:4717  from == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":4697:4757  from == _msgSender() || isApprovedForAll(from, _msgSender()) */\n      dup1\n      tag_72\n      jumpi\n      pop\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":4721:4757  isApprovedForAll(from, _msgSender()) */\n      tag_73\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":4738:4742  from */\n      dup6\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":4744:4756  _msgSender() */\n      tag_74\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":4744:4754  _msgSender */\n      tag_71\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":4744:4756  _msgSender() */\n      jump\t// in\n    tag_74:\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":4721:4737  isApprovedForAll */\n      tag_47\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":4721:4757  isApprovedForAll(from, _msgSender()) */\n      jump\t// in\n    tag_73:\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":4697:4757  from == _msgSender() || isApprovedForAll(from, _msgSender()) */\n    tag_72:\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":4676:4829  require(... */\n      tag_75\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_76\n      swap1\n      tag_77\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_75:\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":4839:4891  _safeBatchTransferFrom(from, to, ids, amounts, data) */\n      tag_78\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":4862:4866  from */\n      dup6\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":4868:4870  to */\n      dup6\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":4872:4875  ids */\n      dup6\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":4877:4884  amounts */\n      dup6\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":4886:4890  data */\n      dup6\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":4839:4861  _safeBatchTransferFrom */\n      tag_79\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":4839:4891  _safeBatchTransferFrom(from, to, ids, amounts, data) */\n      jump\t// in\n    tag_78:\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":4472:4898  function safeBatchTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":2977:3485  function balanceOfBatch(address[] memory accounts, uint256[] memory ids)... */\n    tag_37:\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":3128:3144  uint256[] memory */\n      0x60\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":3187:3190  ids */\n      dup2\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":3187:3197  ids.length */\n      mload\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":3168:3176  accounts */\n      dup4\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":3168:3183  accounts.length */\n      mload\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":3168:3197  accounts.length == ids.length */\n      eq\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":3160:3243  require(accounts.length == ids.length, \"ERC1155: accounts and ids length mismatch\") */\n      tag_81\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_82\n      swap1\n      tag_83\n      jump\t// in\n    tag_82:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_81:\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":3254:3284  uint256[] memory batchBalances */\n      0x00\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":3301:3309  accounts */\n      dup4\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":3301:3316  accounts.length */\n      mload\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":3287:3317  new uint256[](accounts.length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_84\n      jumpi\n      tag_85\n      tag_86\n      jump\t// in\n    tag_85:\n    tag_84:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_87\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_87:\n      pop\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":3254:3317  uint256[] memory batchBalances = new uint256[](accounts.length) */\n      swap1\n      pop\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":3333:3342  uint256 i */\n      0x00\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":3328:3448  for (uint256 i = 0; i < accounts.length; ++i) {... */\n    tag_88:\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":3352:3360  accounts */\n      dup5\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":3352:3367  accounts.length */\n      mload\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":3348:3349  i */\n      dup2\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":3348:3367  i < accounts.length */\n      lt\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":3328:3448  for (uint256 i = 0; i < accounts.length; ++i) {... */\n      iszero\n      tag_89\n      jumpi\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":3407:3437  balanceOf(accounts[i], ids[i]) */\n      tag_91\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":3417:3425  accounts */\n      dup6\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":3426:3427  i */\n      dup3\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":3417:3428  accounts[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_92\n      jumpi\n      tag_93\n      tag_94\n      jump\t// in\n    tag_93:\n    tag_92:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":3430:3433  ids */\n      dup6\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":3434:3435  i */\n      dup4\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":3430:3436  ids[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_95\n      jumpi\n      tag_96\n      tag_94\n      jump\t// in\n    tag_96:\n    tag_95:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":3407:3416  balanceOf */\n      tag_15\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":3407:3437  balanceOf(accounts[i], ids[i]) */\n      jump\t// in\n    tag_91:\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":3388:3401  batchBalances */\n      dup3\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":3402:3403  i */\n      dup3\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":3388:3404  batchBalances[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_97\n      jumpi\n      tag_98\n      tag_94\n      jump\t// in\n    tag_98:\n    tag_97:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":3388:3437  batchBalances[i] = balanceOf(accounts[i], ids[i]) */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":3369:3372  ++i */\n      dup1\n      tag_99\n      swap1\n      tag_100\n      jump\t// in\n    tag_99:\n      swap1\n      pop\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":3328:3448  for (uint256 i = 0; i < accounts.length; ++i) {... */\n      jump(tag_88)\n    tag_89:\n      pop\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":3465:3478  batchBalances */\n      dup1\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":3458:3478  return batchBalances */\n      swap2\n      pop\n      pop\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":2977:3485  function balanceOfBatch(address[] memory accounts, uint256[] memory ids)... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":3553:3706  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_43:\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":3647:3699  _setApprovalForAll(_msgSender(), operator, approved) */\n      tag_102\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":3666:3678  _msgSender() */\n      tag_103\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":3666:3676  _msgSender */\n      tag_71\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":3666:3678  _msgSender() */\n      jump\t// in\n    tag_103:\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":3680:3688  operator */\n      dup4\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":3690:3698  approved */\n      dup4\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":3647:3665  _setApprovalForAll */\n      tag_104\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":3647:3699  _setApprovalForAll(_msgSender(), operator, approved) */\n      jump\t// in\n    tag_102:\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":3553:3706  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":3773:3939  function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {... */\n    tag_47:\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":3872:3876  bool */\n      0x00\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":3895:3913  _operatorApprovals */\n      0x66\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":3895:3922  _operatorApprovals[account] */\n      0x00\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":3914:3921  account */\n      dup5\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":3895:3922  _operatorApprovals[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":3895:3932  _operatorApprovals[account][operator] */\n      0x00\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":3923:3931  operator */\n      dup4\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":3895:3932  _operatorApprovals[account][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":3888:3932  return _operatorApprovals[account][operator] */\n      swap1\n      pop\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":3773:3939  function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":4006:4400  function safeTransferFrom(... */\n    tag_52:\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":4214:4226  _msgSender() */\n      tag_107\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":4214:4224  _msgSender */\n      tag_71\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":4214:4226  _msgSender() */\n      jump\t// in\n    tag_107:\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":4206:4226  from == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":4206:4210  from */\n      dup6\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":4206:4226  from == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":4206:4266  from == _msgSender() || isApprovedForAll(from, _msgSender()) */\n      dup1\n      tag_108\n      jumpi\n      pop\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":4230:4266  isApprovedForAll(from, _msgSender()) */\n      tag_109\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":4247:4251  from */\n      dup6\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":4253:4265  _msgSender() */\n      tag_110\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":4253:4263  _msgSender */\n      tag_71\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":4253:4265  _msgSender() */\n      jump\t// in\n    tag_110:\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":4230:4246  isApprovedForAll */\n      tag_47\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":4230:4266  isApprovedForAll(from, _msgSender()) */\n      jump\t// in\n    tag_109:\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":4206:4266  from == _msgSender() || isApprovedForAll(from, _msgSender()) */\n    tag_108:\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":4185:4338  require(... */\n      tag_111\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_112\n      swap1\n      tag_77\n      jump\t// in\n    tag_112:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_111:\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":4348:4393  _safeTransferFrom(from, to, id, amount, data) */\n      tag_113\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":4366:4370  from */\n      dup6\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":4372:4374  to */\n      dup6\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":4376:4378  id */\n      dup6\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":4380:4386  amount */\n      dup6\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":4388:4392  data */\n      dup6\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":4348:4365  _safeTransferFrom */\n      tag_114\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":4348:4393  _safeTransferFrom(from, to, id, amount, data) */\n      jump\t// in\n    tag_113:\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":4006:4400  function safeTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol\":1060:1226  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_61:\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol\":1145:1149  bool */\n      0x00\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol\":1183:1219  type(IERC165Upgradeable).interfaceId */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol\":1168:1219  interfaceId == type(IERC165Upgradeable).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol\":1168:1179  interfaceId */\n      dup3\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol\":1168:1219  interfaceId == type(IERC165Upgradeable).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol\":1161:1219  return interfaceId == type(IERC165Upgradeable).interfaceId */\n      swap1\n      pop\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol\":1060:1226  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol\":850:946  function _msgSender() internal view virtual returns (address) {... */\n    tag_71:\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol\":903:910  address */\n      0x00\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol\":929:939  msg.sender */\n      caller\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol\":922:939  return msg.sender */\n      swap1\n      pop\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol\":850:946  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":6641:7756  function _safeBatchTransferFrom(... */\n    tag_79:\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":6861:6868  amounts */\n      dup2\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":6861:6875  amounts.length */\n      mload\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":6847:6850  ids */\n      dup4\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":6847:6857  ids.length */\n      mload\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":6847:6875  ids.length == amounts.length */\n      eq\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":6839:6920  require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\") */\n      tag_118\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_119\n      swap1\n      tag_120\n      jump\t// in\n    tag_119:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_118:\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":6952:6953  0 */\n      0x00\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":6938:6954  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":6938:6940  to */\n      dup5\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":6938:6954  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":6930:6996  require(to != address(0), \"ERC1155: transfer to the zero address\") */\n      tag_121\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_122\n      swap1\n      tag_123\n      jump\t// in\n    tag_122:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_121:\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":7007:7023  address operator */\n      0x00\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":7026:7038  _msgSender() */\n      tag_124\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":7026:7036  _msgSender */\n      tag_71\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":7026:7038  _msgSender() */\n      jump\t// in\n    tag_124:\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":7007:7038  address operator = _msgSender() */\n      swap1\n      pop\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":7049:7109  _beforeTokenTransfer(operator, from, to, ids, amounts, data) */\n      tag_125\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":7070:7078  operator */\n      dup2\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":7080:7084  from */\n      dup8\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":7086:7088  to */\n      dup8\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":7090:7093  ids */\n      dup8\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":7095:7102  amounts */\n      dup8\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":7104:7108  data */\n      dup8\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":7049:7069  _beforeTokenTransfer */\n      tag_126\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":7049:7109  _beforeTokenTransfer(operator, from, to, ids, amounts, data) */\n      jump\t// in\n    tag_125:\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":7125:7134  uint256 i */\n      0x00\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":7120:7531  for (uint256 i = 0; i < ids.length; ++i) {... */\n    tag_127:\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":7144:7147  ids */\n      dup5\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":7144:7154  ids.length */\n      mload\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":7140:7141  i */\n      dup2\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":7140:7154  i < ids.length */\n      lt\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":7120:7531  for (uint256 i = 0; i < ids.length; ++i) {... */\n      iszero\n      tag_128\n      jumpi\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":7175:7185  uint256 id */\n      0x00\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":7188:7191  ids */\n      dup6\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":7192:7193  i */\n      dup3\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":7188:7194  ids[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_130\n      jumpi\n      tag_131\n      tag_94\n      jump\t// in\n    tag_131:\n    tag_130:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":7175:7194  uint256 id = ids[i] */\n      swap1\n      pop\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":7208:7222  uint256 amount */\n      0x00\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":7225:7232  amounts */\n      dup6\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":7233:7234  i */\n      dup4\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":7225:7235  amounts[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_132\n      jumpi\n      tag_133\n      tag_94\n      jump\t// in\n    tag_133:\n    tag_132:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":7208:7235  uint256 amount = amounts[i] */\n      swap1\n      pop\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":7250:7269  uint256 fromBalance */\n      0x00\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":7272:7281  _balances */\n      0x65\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":7272:7285  _balances[id] */\n      0x00\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":7282:7284  id */\n      dup5\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":7272:7285  _balances[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":7272:7291  _balances[id][from] */\n      0x00\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":7286:7290  from */\n      dup12\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":7272:7291  _balances[id][from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":7250:7291  uint256 fromBalance = _balances[id][from] */\n      swap1\n      pop\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":7328:7334  amount */\n      dup2\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":7313:7324  fromBalance */\n      dup2\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":7313:7334  fromBalance >= amount */\n      lt\n      iszero\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":7305:7381  require(fromBalance >= amount, \"ERC1155: insufficient balance for transfer\") */\n      tag_134\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_135\n      swap1\n      tag_136\n      jump\t// in\n    tag_135:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_134:\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":7459:7465  amount */\n      dup2\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":7445:7456  fromBalance */\n      dup2\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":7445:7465  fromBalance - amount */\n      sub\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":7423:7432  _balances */\n      0x65\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":7423:7436  _balances[id] */\n      0x00\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":7433:7435  id */\n      dup6\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":7423:7436  _balances[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":7423:7442  _balances[id][from] */\n      0x00\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":7437:7441  from */\n      dup13\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":7423:7442  _balances[id][from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":7423:7465  _balances[id][from] = fromBalance - amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":7514:7520  amount */\n      dup2\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":7493:7502  _balances */\n      0x65\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":7493:7506  _balances[id] */\n      0x00\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":7503:7505  id */\n      dup6\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":7493:7506  _balances[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":7493:7510  _balances[id][to] */\n      0x00\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":7507:7509  to */\n      dup12\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":7493:7510  _balances[id][to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":7493:7520  _balances[id][to] += amount */\n      dup3\n      dup3\n      sload\n      tag_137\n      swap2\n      swap1\n      tag_138\n      jump\t// in\n    tag_137:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":7161:7531  {... */\n      pop\n      pop\n      pop\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":7156:7159  ++i */\n      dup1\n      tag_139\n      swap1\n      tag_100\n      jump\t// in\n    tag_139:\n      swap1\n      pop\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":7120:7531  for (uint256 i = 0; i < ids.length; ++i) {... */\n      jump(tag_127)\n    tag_128:\n      pop\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":7576:7578  to */\n      dup5\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":7546:7593  TransferBatch(operator, from, to, ids, amounts) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":7570:7574  from */\n      dup7\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":7546:7593  TransferBatch(operator, from, to, ids, amounts) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":7560:7568  operator */\n      dup3\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":7546:7593  TransferBatch(operator, from, to, ids, amounts) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":7580:7583  ids */\n      dup8\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":7585:7592  amounts */\n      dup8\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":7546:7593  TransferBatch(operator, from, to, ids, amounts) */\n      mload(0x40)\n      tag_140\n      swap3\n      swap2\n      swap1\n      tag_141\n      jump\t// in\n    tag_140:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":7604:7663  _afterTokenTransfer(operator, from, to, ids, amounts, data) */\n      tag_142\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":7624:7632  operator */\n      dup2\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":7634:7638  from */\n      dup8\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":7640:7642  to */\n      dup8\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":7644:7647  ids */\n      dup8\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":7649:7656  amounts */\n      dup8\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":7658:7662  data */\n      dup8\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":7604:7623  _afterTokenTransfer */\n      tag_143\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":7604:7663  _afterTokenTransfer(operator, from, to, ids, amounts, data) */\n      jump\t// in\n    tag_142:\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":7674:7749  _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, amounts, data) */\n      tag_144\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":7710:7718  operator */\n      dup2\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":7720:7724  from */\n      dup8\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":7726:7728  to */\n      dup8\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":7730:7733  ids */\n      dup8\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":7735:7742  amounts */\n      dup8\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":7744:7748  data */\n      dup8\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":7674:7709  _doSafeBatchTransferAcceptanceCheck */\n      tag_145\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":7674:7749  _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, amounts, data) */\n      jump\t// in\n    tag_144:\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":6829:7756  {... */\n      pop\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":6641:7756  function _safeBatchTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":13318:13641  function _setApprovalForAll(... */\n    tag_104:\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":13468:13476  operator */\n      dup2\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":13459:13476  owner != operator */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":13459:13464  owner */\n      dup4\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":13459:13476  owner != operator */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":13451:13522  require(owner != operator, \"ERC1155: setting approval status for self\") */\n      tag_147\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_148\n      swap1\n      tag_149\n      jump\t// in\n    tag_148:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_147:\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":13570:13578  approved */\n      dup1\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":13532:13550  _operatorApprovals */\n      0x66\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":13532:13557  _operatorApprovals[owner] */\n      0x00\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":13551:13556  owner */\n      dup6\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":13532:13557  _operatorApprovals[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":13532:13567  _operatorApprovals[owner][operator] */\n      0x00\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":13558:13566  operator */\n      dup5\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":13532:13567  _operatorApprovals[owner][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":13532:13578  _operatorApprovals[owner][operator] = approved */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":13615:13623  operator */\n      dup2\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":13593:13634  ApprovalForAll(owner, operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":13608:13613  owner */\n      dup4\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":13593:13634  ApprovalForAll(owner, operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":13625:13633  approved */\n      dup4\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":13593:13634  ApprovalForAll(owner, operator, approved) */\n      mload(0x40)\n      tag_150\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_150:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":13318:13641  function _setApprovalForAll(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":5348:6295  function _safeTransferFrom(... */\n    tag_114:\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":5543:5544  0 */\n      0x00\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":5529:5545  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":5529:5531  to */\n      dup5\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":5529:5545  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":5521:5587  require(to != address(0), \"ERC1155: transfer to the zero address\") */\n      tag_152\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_153\n      swap1\n      tag_123\n      jump\t// in\n    tag_153:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_152:\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":5598:5614  address operator */\n      0x00\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":5617:5629  _msgSender() */\n      tag_154\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":5617:5627  _msgSender */\n      tag_71\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":5617:5629  _msgSender() */\n      jump\t// in\n    tag_154:\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":5598:5629  address operator = _msgSender() */\n      swap1\n      pop\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":5639:5659  uint256[] memory ids */\n      0x00\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":5662:5683  _asSingletonArray(id) */\n      tag_155\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":5680:5682  id */\n      dup6\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":5662:5679  _asSingletonArray */\n      tag_156\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":5662:5683  _asSingletonArray(id) */\n      jump\t// in\n    tag_155:\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":5639:5683  uint256[] memory ids = _asSingletonArray(id) */\n      swap1\n      pop\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":5693:5717  uint256[] memory amounts */\n      0x00\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":5720:5745  _asSingletonArray(amount) */\n      tag_157\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":5738:5744  amount */\n      dup6\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":5720:5737  _asSingletonArray */\n      tag_156\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":5720:5745  _asSingletonArray(amount) */\n      jump\t// in\n    tag_157:\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":5693:5745  uint256[] memory amounts = _asSingletonArray(amount) */\n      swap1\n      pop\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":5756:5816  _beforeTokenTransfer(operator, from, to, ids, amounts, data) */\n      tag_158\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":5777:5785  operator */\n      dup4\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":5787:5791  from */\n      dup10\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":5793:5795  to */\n      dup10\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":5797:5800  ids */\n      dup6\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":5802:5809  amounts */\n      dup6\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":5811:5815  data */\n      dup10\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":5756:5776  _beforeTokenTransfer */\n      tag_126\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":5756:5816  _beforeTokenTransfer(operator, from, to, ids, amounts, data) */\n      jump\t// in\n    tag_158:\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":5827:5846  uint256 fromBalance */\n      0x00\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":5849:5858  _balances */\n      0x65\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":5849:5862  _balances[id] */\n      0x00\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":5859:5861  id */\n      dup9\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":5849:5862  _balances[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":5849:5868  _balances[id][from] */\n      0x00\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":5863:5867  from */\n      dup11\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":5849:5868  _balances[id][from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":5827:5868  uint256 fromBalance = _balances[id][from] */\n      swap1\n      pop\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":5901:5907  amount */\n      dup6\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":5886:5897  fromBalance */\n      dup2\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":5886:5907  fromBalance >= amount */\n      lt\n      iszero\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":5878:5954  require(fromBalance >= amount, \"ERC1155: insufficient balance for transfer\") */\n      tag_159\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_160\n      swap1\n      tag_136\n      jump\t// in\n    tag_160:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_159:\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":6024:6030  amount */\n      dup6\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":6010:6021  fromBalance */\n      dup2\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":6010:6030  fromBalance - amount */\n      sub\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":5988:5997  _balances */\n      0x65\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":5988:6001  _balances[id] */\n      0x00\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":5998:6000  id */\n      dup10\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":5988:6001  _balances[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":5988:6007  _balances[id][from] */\n      0x00\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":6002:6006  from */\n      dup12\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":5988:6007  _balances[id][from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":5988:6030  _balances[id][from] = fromBalance - amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":6071:6077  amount */\n      dup6\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":6050:6059  _balances */\n      0x65\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":6050:6063  _balances[id] */\n      0x00\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":6060:6062  id */\n      dup10\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":6050:6063  _balances[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":6050:6067  _balances[id][to] */\n      0x00\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":6064:6066  to */\n      dup11\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":6050:6067  _balances[id][to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":6050:6077  _balances[id][to] += amount */\n      dup3\n      dup3\n      sload\n      tag_161\n      swap2\n      swap1\n      tag_138\n      jump\t// in\n    tag_161:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":6124:6126  to */\n      dup8\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":6093:6139  TransferSingle(operator, from, to, id, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":6118:6122  from */\n      dup10\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":6093:6139  TransferSingle(operator, from, to, id, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":6108:6116  operator */\n      dup6\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":6093:6139  TransferSingle(operator, from, to, id, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":6128:6130  id */\n      dup11\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":6132:6138  amount */\n      dup11\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":6093:6139  TransferSingle(operator, from, to, id, amount) */\n      mload(0x40)\n      tag_162\n      swap3\n      swap2\n      swap1\n      tag_163\n      jump\t// in\n    tag_162:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":6150:6209  _afterTokenTransfer(operator, from, to, ids, amounts, data) */\n      tag_164\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":6170:6178  operator */\n      dup5\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":6180:6184  from */\n      dup11\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":6186:6188  to */\n      dup11\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":6190:6193  ids */\n      dup7\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":6195:6202  amounts */\n      dup7\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":6204:6208  data */\n      dup11\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":6150:6169  _afterTokenTransfer */\n      tag_143\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":6150:6209  _afterTokenTransfer(operator, from, to, ids, amounts, data) */\n      jump\t// in\n    tag_164:\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":6220:6288  _doSafeTransferAcceptanceCheck(operator, from, to, id, amount, data) */\n      tag_165\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":6251:6259  operator */\n      dup5\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":6261:6265  from */\n      dup11\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":6267:6269  to */\n      dup11\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":6271:6273  id */\n      dup11\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":6275:6281  amount */\n      dup11\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":6283:6287  data */\n      dup11\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":6220:6250  _doSafeTransferAcceptanceCheck */\n      tag_166\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":6220:6288  _doSafeTransferAcceptanceCheck(operator, from, to, id, amount, data) */\n      jump\t// in\n    tag_165:\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":5511:6295  {... */\n      pop\n      pop\n      pop\n      pop\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":5348:6295  function _safeTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":14577:14791  function _beforeTokenTransfer(... */\n    tag_126:\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":15724:15937  function _afterTokenTransfer(... */\n    tag_143:\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":16696:17510  function _doSafeBatchTransferAcceptanceCheck(... */\n    tag_145:\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":16928:16943  to.isContract() */\n      tag_170\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":16928:16930  to */\n      dup5\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":16928:16941  to.isContract */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_171\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":16928:16943  to.isContract() */\n      jump\t// in\n    tag_170:\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":16924:17504  if (to.isContract()) {... */\n      iszero\n      tag_172\n      jumpi\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":16991:16993  to */\n      dup4\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":16963:17017  IERC1155ReceiverUpgradeable(to).onERC1155BatchReceived */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xbc197c81\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":17018:17026  operator */\n      dup8\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":17028:17032  from */\n      dup8\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":17034:17037  ids */\n      dup7\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":17039:17046  amounts */\n      dup7\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":17048:17052  data */\n      dup7\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":16963:17053  IERC1155ReceiverUpgradeable(to).onERC1155BatchReceived(operator, from, ids, amounts, data) */\n      mload(0x40)\n      dup7\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_173\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_174\n      jump\t// in\n    tag_173:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_175\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_175:\n      pop\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_176\n      jumpi\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_177\n      swap2\n      swap1\n      tag_178\n      jump\t// in\n    tag_177:\n      0x01\n    tag_176:\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":16959:17494  try IERC1155ReceiverUpgradeable(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (... */\n      tag_179\n      jumpi\n      tag_183\n      tag_184\n      jump\t// in\n    tag_183:\n      dup1\n      0x08c379a0\n      eq\n      iszero\n      tag_182\n      jumpi\n      pop\n      tag_185\n      tag_186\n      jump\t// in\n    tag_185:\n      dup1\n      tag_187\n      jumpi\n      pop\n      jump(tag_181)\n    tag_187:\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":17370:17376  reason */\n      dup1\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":17363:17377  revert(reason) */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_188\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_188:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":16959:17494  try IERC1155ReceiverUpgradeable(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (... */\n    tag_182:\n      pop\n    tag_181:\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":17417:17479  revert(\"ERC1155: transfer to non-ERC1155Receiver implementer\") */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_189\n      swap1\n      tag_190\n      jump\t// in\n    tag_189:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":16959:17494  try IERC1155ReceiverUpgradeable(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (... */\n    tag_179:\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":17144:17203  IERC1155ReceiverUpgradeable.onERC1155BatchReceived.selector */\n      shl(0xe0, 0xbc197c81)\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":17132:17203  response != IERC1155ReceiverUpgradeable.onERC1155BatchReceived.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":17132:17140  response */\n      dup2\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":17132:17203  response != IERC1155ReceiverUpgradeable.onERC1155BatchReceived.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":17128:17296  if (response != IERC1155ReceiverUpgradeable.onERC1155BatchReceived.selector) {... */\n      tag_192\n      jumpi\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":17227:17277  revert(\"ERC1155: ERC1155Receiver rejected tokens\") */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_193\n      swap1\n      tag_194\n      jump\t// in\n    tag_193:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":17128:17296  if (response != IERC1155ReceiverUpgradeable.onERC1155BatchReceived.selector) {... */\n    tag_192:\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":17054:17310  returns (... */\n      pop\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":16924:17504  if (to.isContract()) {... */\n    tag_172:\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":16696:17510  function _doSafeBatchTransferAcceptanceCheck(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":17516:17709  function _asSingletonArray(uint256 element) private pure returns (uint256[] memory) {... */\n    tag_156:\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":17582:17598  uint256[] memory */\n      0x60\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":17610:17632  uint256[] memory array */\n      0x00\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":17649:17650  1 */\n      0x01\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":17635:17651  new uint256[](1) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_196\n      jumpi\n      tag_197\n      tag_86\n      jump\t// in\n    tag_197:\n    tag_196:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_198\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_198:\n      pop\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":17610:17651  uint256[] memory array = new uint256[](1) */\n      swap1\n      pop\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":17672:17679  element */\n      dup3\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":17661:17666  array */\n      dup2\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":17667:17668  0 */\n      0x00\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":17661:17669  array[0] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_199\n      jumpi\n      tag_200\n      tag_94\n      jump\t// in\n    tag_200:\n    tag_199:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":17661:17679  array[0] = element */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":17697:17702  array */\n      dup1\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":17690:17702  return array */\n      swap2\n      pop\n      pop\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":17516:17709  function _asSingletonArray(uint256 element) private pure returns (uint256[] memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":15943:16690  function _doSafeTransferAcceptanceCheck(... */\n    tag_166:\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":16150:16165  to.isContract() */\n      tag_202\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":16150:16152  to */\n      dup5\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":16150:16163  to.isContract */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_171\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":16150:16165  to.isContract() */\n      jump\t// in\n    tag_202:\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":16146:16684  if (to.isContract()) {... */\n      iszero\n      tag_203\n      jumpi\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":16213:16215  to */\n      dup4\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":16185:16234  IERC1155ReceiverUpgradeable(to).onERC1155Received */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xf23a6e61\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":16235:16243  operator */\n      dup8\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":16245:16249  from */\n      dup8\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":16251:16253  id */\n      dup7\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":16255:16261  amount */\n      dup7\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":16263:16267  data */\n      dup7\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":16185:16268  IERC1155ReceiverUpgradeable(to).onERC1155Received(operator, from, id, amount, data) */\n      mload(0x40)\n      dup7\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_204\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_205\n      jump\t// in\n    tag_204:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_206\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_206:\n      pop\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_207\n      jumpi\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_208\n      swap2\n      swap1\n      tag_178\n      jump\t// in\n    tag_208:\n      0x01\n    tag_207:\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":16181:16674  try IERC1155ReceiverUpgradeable(to).onERC1155Received(operator, from, id, amount, data) returns (bytes4 response) {... */\n      tag_209\n      jumpi\n      tag_213\n      tag_184\n      jump\t// in\n    tag_213:\n      dup1\n      0x08c379a0\n      eq\n      iszero\n      tag_212\n      jumpi\n      pop\n      tag_214\n      tag_186\n      jump\t// in\n    tag_214:\n      dup1\n      tag_215\n      jumpi\n      pop\n      jump(tag_211)\n    tag_215:\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":16550:16556  reason */\n      dup1\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":16543:16557  revert(reason) */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_216\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_216:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":16181:16674  try IERC1155ReceiverUpgradeable(to).onERC1155Received(operator, from, id, amount, data) returns (bytes4 response) {... */\n    tag_212:\n      pop\n    tag_211:\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":16597:16659  revert(\"ERC1155: transfer to non-ERC1155Receiver implementer\") */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_217\n      swap1\n      tag_190\n      jump\t// in\n    tag_217:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":16181:16674  try IERC1155ReceiverUpgradeable(to).onERC1155Received(operator, from, id, amount, data) returns (bytes4 response) {... */\n    tag_209:\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":16329:16383  IERC1155ReceiverUpgradeable.onERC1155Received.selector */\n      shl(0xe0, 0xf23a6e61)\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":16317:16383  response != IERC1155ReceiverUpgradeable.onERC1155Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":16317:16325  response */\n      dup2\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":16317:16383  response != IERC1155ReceiverUpgradeable.onERC1155Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":16313:16476  if (response != IERC1155ReceiverUpgradeable.onERC1155Received.selector) {... */\n      tag_219\n      jumpi\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":16407:16457  revert(\"ERC1155: ERC1155Receiver rejected tokens\") */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_220\n      swap1\n      tag_194\n      jump\t// in\n    tag_220:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":16313:16476  if (response != IERC1155ReceiverUpgradeable.onERC1155Received.selector) {... */\n    tag_219:\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":16269:16490  returns (bytes4 response) {... */\n      pop\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":16146:16684  if (to.isContract()) {... */\n    tag_203:\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":15943:16690  function _doSafeTransferAcceptanceCheck(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol\":1186:1506  function isContract(address account) internal view returns (bool) {... */\n    tag_171:\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol\":1246:1250  bool */\n      0x00\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol\":1498:1499  0 */\n      dup1\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol\":1476:1483  account */\n      dup3\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol\":1476:1495  account.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol\":1476:1499  account.code.length > 0 */\n      gt\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol\":1469:1499  return account.code.length > 0 */\n      swap1\n      pop\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol\":1186:1506  function isContract(address account) internal view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24:746   */\n    tag_223:\n        /* \"#utility.yul\":120:125   */\n      0x00\n        /* \"#utility.yul\":145:226   */\n      tag_225\n        /* \"#utility.yul\":161:225   */\n      tag_226\n        /* \"#utility.yul\":218:224   */\n      dup5\n        /* \"#utility.yul\":161:225   */\n      tag_227\n      jump\t// in\n    tag_226:\n        /* \"#utility.yul\":145:226   */\n      tag_228\n      jump\t// in\n    tag_225:\n        /* \"#utility.yul\":136:226   */\n      swap1\n      pop\n        /* \"#utility.yul\":246:251   */\n      dup1\n        /* \"#utility.yul\":275:281   */\n      dup4\n        /* \"#utility.yul\":268:273   */\n      dup3\n        /* \"#utility.yul\":261:282   */\n      mstore\n        /* \"#utility.yul\":309:313   */\n      0x20\n        /* \"#utility.yul\":302:307   */\n      dup3\n        /* \"#utility.yul\":298:314   */\n      add\n        /* \"#utility.yul\":291:314   */\n      swap1\n      pop\n        /* \"#utility.yul\":335:341   */\n      dup3\n        /* \"#utility.yul\":385:388   */\n      dup6\n        /* \"#utility.yul\":377:381   */\n      0x20\n        /* \"#utility.yul\":369:375   */\n      dup7\n        /* \"#utility.yul\":365:382   */\n      mul\n        /* \"#utility.yul\":360:363   */\n      dup3\n        /* \"#utility.yul\":356:383   */\n      add\n        /* \"#utility.yul\":353:389   */\n      gt\n        /* \"#utility.yul\":350:493   */\n      iszero\n      tag_229\n      jumpi\n        /* \"#utility.yul\":404:483   */\n      tag_230\n      tag_231\n      jump\t// in\n    tag_230:\n        /* \"#utility.yul\":350:493   */\n    tag_229:\n        /* \"#utility.yul\":517:518   */\n      0x00\n        /* \"#utility.yul\":502:740   */\n    tag_232:\n        /* \"#utility.yul\":527:533   */\n      dup6\n        /* \"#utility.yul\":524:525   */\n      dup2\n        /* \"#utility.yul\":521:534   */\n      lt\n        /* \"#utility.yul\":502:740   */\n      iszero\n      tag_234\n      jumpi\n        /* \"#utility.yul\":595:598   */\n      dup2\n        /* \"#utility.yul\":624:661   */\n      tag_235\n        /* \"#utility.yul\":657:660   */\n      dup9\n        /* \"#utility.yul\":645:655   */\n      dup3\n        /* \"#utility.yul\":624:661   */\n      tag_236\n      jump\t// in\n    tag_235:\n        /* \"#utility.yul\":619:622   */\n      dup5\n        /* \"#utility.yul\":612:662   */\n      mstore\n        /* \"#utility.yul\":691:695   */\n      0x20\n        /* \"#utility.yul\":686:689   */\n      dup5\n        /* \"#utility.yul\":682:696   */\n      add\n        /* \"#utility.yul\":675:696   */\n      swap4\n      pop\n        /* \"#utility.yul\":725:729   */\n      0x20\n        /* \"#utility.yul\":720:723   */\n      dup4\n        /* \"#utility.yul\":716:730   */\n      add\n        /* \"#utility.yul\":709:730   */\n      swap3\n      pop\n        /* \"#utility.yul\":562:740   */\n      pop\n        /* \"#utility.yul\":549:550   */\n      0x01\n        /* \"#utility.yul\":546:547   */\n      dup2\n        /* \"#utility.yul\":542:551   */\n      add\n        /* \"#utility.yul\":537:551   */\n      swap1\n      pop\n        /* \"#utility.yul\":502:740   */\n      jump(tag_232)\n    tag_234:\n        /* \"#utility.yul\":506:520   */\n      pop\n        /* \"#utility.yul\":126:746   */\n      pop\n      pop\n        /* \"#utility.yul\":24:746   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":769:1491   */\n    tag_237:\n        /* \"#utility.yul\":865:870   */\n      0x00\n        /* \"#utility.yul\":890:971   */\n      tag_239\n        /* \"#utility.yul\":906:970   */\n      tag_240\n        /* \"#utility.yul\":963:969   */\n      dup5\n        /* \"#utility.yul\":906:970   */\n      tag_241\n      jump\t// in\n    tag_240:\n        /* \"#utility.yul\":890:971   */\n      tag_228\n      jump\t// in\n    tag_239:\n        /* \"#utility.yul\":881:971   */\n      swap1\n      pop\n        /* \"#utility.yul\":991:996   */\n      dup1\n        /* \"#utility.yul\":1020:1026   */\n      dup4\n        /* \"#utility.yul\":1013:1018   */\n      dup3\n        /* \"#utility.yul\":1006:1027   */\n      mstore\n        /* \"#utility.yul\":1054:1058   */\n      0x20\n        /* \"#utility.yul\":1047:1052   */\n      dup3\n        /* \"#utility.yul\":1043:1059   */\n      add\n        /* \"#utility.yul\":1036:1059   */\n      swap1\n      pop\n        /* \"#utility.yul\":1080:1086   */\n      dup3\n        /* \"#utility.yul\":1130:1133   */\n      dup6\n        /* \"#utility.yul\":1122:1126   */\n      0x20\n        /* \"#utility.yul\":1114:1120   */\n      dup7\n        /* \"#utility.yul\":1110:1127   */\n      mul\n        /* \"#utility.yul\":1105:1108   */\n      dup3\n        /* \"#utility.yul\":1101:1128   */\n      add\n        /* \"#utility.yul\":1098:1134   */\n      gt\n        /* \"#utility.yul\":1095:1238   */\n      iszero\n      tag_242\n      jumpi\n        /* \"#utility.yul\":1149:1228   */\n      tag_243\n      tag_231\n      jump\t// in\n    tag_243:\n        /* \"#utility.yul\":1095:1238   */\n    tag_242:\n        /* \"#utility.yul\":1262:1263   */\n      0x00\n        /* \"#utility.yul\":1247:1485   */\n    tag_244:\n        /* \"#utility.yul\":1272:1278   */\n      dup6\n        /* \"#utility.yul\":1269:1270   */\n      dup2\n        /* \"#utility.yul\":1266:1279   */\n      lt\n        /* \"#utility.yul\":1247:1485   */\n      iszero\n      tag_246\n      jumpi\n        /* \"#utility.yul\":1340:1343   */\n      dup2\n        /* \"#utility.yul\":1369:1406   */\n      tag_247\n        /* \"#utility.yul\":1402:1405   */\n      dup9\n        /* \"#utility.yul\":1390:1400   */\n      dup3\n        /* \"#utility.yul\":1369:1406   */\n      tag_248\n      jump\t// in\n    tag_247:\n        /* \"#utility.yul\":1364:1367   */\n      dup5\n        /* \"#utility.yul\":1357:1407   */\n      mstore\n        /* \"#utility.yul\":1436:1440   */\n      0x20\n        /* \"#utility.yul\":1431:1434   */\n      dup5\n        /* \"#utility.yul\":1427:1441   */\n      add\n        /* \"#utility.yul\":1420:1441   */\n      swap4\n      pop\n        /* \"#utility.yul\":1470:1474   */\n      0x20\n        /* \"#utility.yul\":1465:1468   */\n      dup4\n        /* \"#utility.yul\":1461:1475   */\n      add\n        /* \"#utility.yul\":1454:1475   */\n      swap3\n      pop\n        /* \"#utility.yul\":1307:1485   */\n      pop\n        /* \"#utility.yul\":1294:1295   */\n      0x01\n        /* \"#utility.yul\":1291:1292   */\n      dup2\n        /* \"#utility.yul\":1287:1296   */\n      add\n        /* \"#utility.yul\":1282:1296   */\n      swap1\n      pop\n        /* \"#utility.yul\":1247:1485   */\n      jump(tag_244)\n    tag_246:\n        /* \"#utility.yul\":1251:1265   */\n      pop\n        /* \"#utility.yul\":871:1491   */\n      pop\n      pop\n        /* \"#utility.yul\":769:1491   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1497:1907   */\n    tag_249:\n        /* \"#utility.yul\":1574:1579   */\n      0x00\n        /* \"#utility.yul\":1599:1664   */\n      tag_251\n        /* \"#utility.yul\":1615:1663   */\n      tag_252\n        /* \"#utility.yul\":1656:1662   */\n      dup5\n        /* \"#utility.yul\":1615:1663   */\n      tag_253\n      jump\t// in\n    tag_252:\n        /* \"#utility.yul\":1599:1664   */\n      tag_228\n      jump\t// in\n    tag_251:\n        /* \"#utility.yul\":1590:1664   */\n      swap1\n      pop\n        /* \"#utility.yul\":1687:1693   */\n      dup3\n        /* \"#utility.yul\":1680:1685   */\n      dup2\n        /* \"#utility.yul\":1673:1694   */\n      mstore\n        /* \"#utility.yul\":1725:1729   */\n      0x20\n        /* \"#utility.yul\":1718:1723   */\n      dup2\n        /* \"#utility.yul\":1714:1730   */\n      add\n        /* \"#utility.yul\":1763:1766   */\n      dup5\n        /* \"#utility.yul\":1754:1760   */\n      dup5\n        /* \"#utility.yul\":1749:1752   */\n      dup5\n        /* \"#utility.yul\":1745:1761   */\n      add\n        /* \"#utility.yul\":1742:1767   */\n      gt\n        /* \"#utility.yul\":1739:1851   */\n      iszero\n      tag_254\n      jumpi\n        /* \"#utility.yul\":1770:1849   */\n      tag_255\n      tag_256\n      jump\t// in\n    tag_255:\n        /* \"#utility.yul\":1739:1851   */\n    tag_254:\n        /* \"#utility.yul\":1860:1901   */\n      tag_257\n        /* \"#utility.yul\":1894:1900   */\n      dup5\n        /* \"#utility.yul\":1889:1892   */\n      dup3\n        /* \"#utility.yul\":1884:1887   */\n      dup6\n        /* \"#utility.yul\":1860:1901   */\n      tag_258\n      jump\t// in\n    tag_257:\n        /* \"#utility.yul\":1580:1907   */\n      pop\n        /* \"#utility.yul\":1497:1907   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1913:2052   */\n    tag_236:\n        /* \"#utility.yul\":1959:1964   */\n      0x00\n        /* \"#utility.yul\":1997:2003   */\n      dup2\n        /* \"#utility.yul\":1984:2004   */\n      calldataload\n        /* \"#utility.yul\":1975:2004   */\n      swap1\n      pop\n        /* \"#utility.yul\":2013:2046   */\n      tag_260\n        /* \"#utility.yul\":2040:2045   */\n      dup2\n        /* \"#utility.yul\":2013:2046   */\n      tag_261\n      jump\t// in\n    tag_260:\n        /* \"#utility.yul\":1913:2052   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2075:2445   */\n    tag_262:\n        /* \"#utility.yul\":2146:2151   */\n      0x00\n        /* \"#utility.yul\":2195:2198   */\n      dup3\n        /* \"#utility.yul\":2188:2192   */\n      0x1f\n        /* \"#utility.yul\":2180:2186   */\n      dup4\n        /* \"#utility.yul\":2176:2193   */\n      add\n        /* \"#utility.yul\":2172:2199   */\n      slt\n        /* \"#utility.yul\":2162:2284   */\n      tag_264\n      jumpi\n        /* \"#utility.yul\":2203:2282   */\n      tag_265\n      tag_266\n      jump\t// in\n    tag_265:\n        /* \"#utility.yul\":2162:2284   */\n    tag_264:\n        /* \"#utility.yul\":2320:2326   */\n      dup2\n        /* \"#utility.yul\":2307:2327   */\n      calldataload\n        /* \"#utility.yul\":2345:2439   */\n      tag_267\n        /* \"#utility.yul\":2435:2438   */\n      dup5\n        /* \"#utility.yul\":2427:2433   */\n      dup3\n        /* \"#utility.yul\":2420:2424   */\n      0x20\n        /* \"#utility.yul\":2412:2418   */\n      dup7\n        /* \"#utility.yul\":2408:2425   */\n      add\n        /* \"#utility.yul\":2345:2439   */\n      tag_223\n      jump\t// in\n    tag_267:\n        /* \"#utility.yul\":2336:2439   */\n      swap2\n      pop\n        /* \"#utility.yul\":2152:2445   */\n      pop\n        /* \"#utility.yul\":2075:2445   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2468:2838   */\n    tag_268:\n        /* \"#utility.yul\":2539:2544   */\n      0x00\n        /* \"#utility.yul\":2588:2591   */\n      dup3\n        /* \"#utility.yul\":2581:2585   */\n      0x1f\n        /* \"#utility.yul\":2573:2579   */\n      dup4\n        /* \"#utility.yul\":2569:2586   */\n      add\n        /* \"#utility.yul\":2565:2592   */\n      slt\n        /* \"#utility.yul\":2555:2677   */\n      tag_270\n      jumpi\n        /* \"#utility.yul\":2596:2675   */\n      tag_271\n      tag_266\n      jump\t// in\n    tag_271:\n        /* \"#utility.yul\":2555:2677   */\n    tag_270:\n        /* \"#utility.yul\":2713:2719   */\n      dup2\n        /* \"#utility.yul\":2700:2720   */\n      calldataload\n        /* \"#utility.yul\":2738:2832   */\n      tag_272\n        /* \"#utility.yul\":2828:2831   */\n      dup5\n        /* \"#utility.yul\":2820:2826   */\n      dup3\n        /* \"#utility.yul\":2813:2817   */\n      0x20\n        /* \"#utility.yul\":2805:2811   */\n      dup7\n        /* \"#utility.yul\":2801:2818   */\n      add\n        /* \"#utility.yul\":2738:2832   */\n      tag_237\n      jump\t// in\n    tag_272:\n        /* \"#utility.yul\":2729:2832   */\n      swap2\n      pop\n        /* \"#utility.yul\":2545:2838   */\n      pop\n        /* \"#utility.yul\":2468:2838   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2844:2977   */\n    tag_273:\n        /* \"#utility.yul\":2887:2892   */\n      0x00\n        /* \"#utility.yul\":2925:2931   */\n      dup2\n        /* \"#utility.yul\":2912:2932   */\n      calldataload\n        /* \"#utility.yul\":2903:2932   */\n      swap1\n      pop\n        /* \"#utility.yul\":2941:2971   */\n      tag_275\n        /* \"#utility.yul\":2965:2970   */\n      dup2\n        /* \"#utility.yul\":2941:2971   */\n      tag_276\n      jump\t// in\n    tag_275:\n        /* \"#utility.yul\":2844:2977   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2983:3120   */\n    tag_277:\n        /* \"#utility.yul\":3028:3033   */\n      0x00\n        /* \"#utility.yul\":3066:3072   */\n      dup2\n        /* \"#utility.yul\":3053:3073   */\n      calldataload\n        /* \"#utility.yul\":3044:3073   */\n      swap1\n      pop\n        /* \"#utility.yul\":3082:3114   */\n      tag_279\n        /* \"#utility.yul\":3108:3113   */\n      dup2\n        /* \"#utility.yul\":3082:3114   */\n      tag_280\n      jump\t// in\n    tag_279:\n        /* \"#utility.yul\":2983:3120   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3126:3267   */\n    tag_281:\n        /* \"#utility.yul\":3182:3187   */\n      0x00\n        /* \"#utility.yul\":3213:3219   */\n      dup2\n        /* \"#utility.yul\":3207:3220   */\n      mload\n        /* \"#utility.yul\":3198:3220   */\n      swap1\n      pop\n        /* \"#utility.yul\":3229:3261   */\n      tag_283\n        /* \"#utility.yul\":3255:3260   */\n      dup2\n        /* \"#utility.yul\":3229:3261   */\n      tag_280\n      jump\t// in\n    tag_283:\n        /* \"#utility.yul\":3126:3267   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3286:3624   */\n    tag_284:\n        /* \"#utility.yul\":3341:3346   */\n      0x00\n        /* \"#utility.yul\":3390:3393   */\n      dup3\n        /* \"#utility.yul\":3383:3387   */\n      0x1f\n        /* \"#utility.yul\":3375:3381   */\n      dup4\n        /* \"#utility.yul\":3371:3388   */\n      add\n        /* \"#utility.yul\":3367:3394   */\n      slt\n        /* \"#utility.yul\":3357:3479   */\n      tag_286\n      jumpi\n        /* \"#utility.yul\":3398:3477   */\n      tag_287\n      tag_266\n      jump\t// in\n    tag_287:\n        /* \"#utility.yul\":3357:3479   */\n    tag_286:\n        /* \"#utility.yul\":3515:3521   */\n      dup2\n        /* \"#utility.yul\":3502:3522   */\n      calldataload\n        /* \"#utility.yul\":3540:3618   */\n      tag_288\n        /* \"#utility.yul\":3614:3617   */\n      dup5\n        /* \"#utility.yul\":3606:3612   */\n      dup3\n        /* \"#utility.yul\":3599:3603   */\n      0x20\n        /* \"#utility.yul\":3591:3597   */\n      dup7\n        /* \"#utility.yul\":3587:3604   */\n      add\n        /* \"#utility.yul\":3540:3618   */\n      tag_249\n      jump\t// in\n    tag_288:\n        /* \"#utility.yul\":3531:3618   */\n      swap2\n      pop\n        /* \"#utility.yul\":3347:3624   */\n      pop\n        /* \"#utility.yul\":3286:3624   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3630:3769   */\n    tag_248:\n        /* \"#utility.yul\":3676:3681   */\n      0x00\n        /* \"#utility.yul\":3714:3720   */\n      dup2\n        /* \"#utility.yul\":3701:3721   */\n      calldataload\n        /* \"#utility.yul\":3692:3721   */\n      swap1\n      pop\n        /* \"#utility.yul\":3730:3763   */\n      tag_290\n        /* \"#utility.yul\":3757:3762   */\n      dup2\n        /* \"#utility.yul\":3730:3763   */\n      tag_291\n      jump\t// in\n    tag_290:\n        /* \"#utility.yul\":3630:3769   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3775:4249   */\n    tag_46:\n        /* \"#utility.yul\":3843:3849   */\n      0x00\n        /* \"#utility.yul\":3851:3857   */\n      dup1\n        /* \"#utility.yul\":3900:3902   */\n      0x40\n        /* \"#utility.yul\":3888:3897   */\n      dup4\n        /* \"#utility.yul\":3879:3886   */\n      dup6\n        /* \"#utility.yul\":3875:3898   */\n      sub\n        /* \"#utility.yul\":3871:3903   */\n      slt\n        /* \"#utility.yul\":3868:3987   */\n      iszero\n      tag_293\n      jumpi\n        /* \"#utility.yul\":3906:3985   */\n      tag_294\n      tag_295\n      jump\t// in\n    tag_294:\n        /* \"#utility.yul\":3868:3987   */\n    tag_293:\n        /* \"#utility.yul\":4026:4027   */\n      0x00\n        /* \"#utility.yul\":4051:4104   */\n      tag_296\n        /* \"#utility.yul\":4096:4103   */\n      dup6\n        /* \"#utility.yul\":4087:4093   */\n      dup3\n        /* \"#utility.yul\":4076:4085   */\n      dup7\n        /* \"#utility.yul\":4072:4094   */\n      add\n        /* \"#utility.yul\":4051:4104   */\n      tag_236\n      jump\t// in\n    tag_296:\n        /* \"#utility.yul\":4041:4104   */\n      swap3\n      pop\n        /* \"#utility.yul\":3997:4114   */\n      pop\n        /* \"#utility.yul\":4153:4155   */\n      0x20\n        /* \"#utility.yul\":4179:4232   */\n      tag_297\n        /* \"#utility.yul\":4224:4231   */\n      dup6\n        /* \"#utility.yul\":4215:4221   */\n      dup3\n        /* \"#utility.yul\":4204:4213   */\n      dup7\n        /* \"#utility.yul\":4200:4222   */\n      add\n        /* \"#utility.yul\":4179:4232   */\n      tag_236\n      jump\t// in\n    tag_297:\n        /* \"#utility.yul\":4169:4232   */\n      swap2\n      pop\n        /* \"#utility.yul\":4124:4242   */\n      pop\n        /* \"#utility.yul\":3775:4249   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4255:5764   */\n    tag_32:\n        /* \"#utility.yul\":4409:4415   */\n      0x00\n        /* \"#utility.yul\":4417:4423   */\n      dup1\n        /* \"#utility.yul\":4425:4431   */\n      0x00\n        /* \"#utility.yul\":4433:4439   */\n      dup1\n        /* \"#utility.yul\":4441:4447   */\n      0x00\n        /* \"#utility.yul\":4490:4493   */\n      0xa0\n        /* \"#utility.yul\":4478:4487   */\n      dup7\n        /* \"#utility.yul\":4469:4476   */\n      dup9\n        /* \"#utility.yul\":4465:4488   */\n      sub\n        /* \"#utility.yul\":4461:4494   */\n      slt\n        /* \"#utility.yul\":4458:4578   */\n      iszero\n      tag_299\n      jumpi\n        /* \"#utility.yul\":4497:4576   */\n      tag_300\n      tag_295\n      jump\t// in\n    tag_300:\n        /* \"#utility.yul\":4458:4578   */\n    tag_299:\n        /* \"#utility.yul\":4617:4618   */\n      0x00\n        /* \"#utility.yul\":4642:4695   */\n      tag_301\n        /* \"#utility.yul\":4687:4694   */\n      dup9\n        /* \"#utility.yul\":4678:4684   */\n      dup3\n        /* \"#utility.yul\":4667:4676   */\n      dup10\n        /* \"#utility.yul\":4663:4685   */\n      add\n        /* \"#utility.yul\":4642:4695   */\n      tag_236\n      jump\t// in\n    tag_301:\n        /* \"#utility.yul\":4632:4695   */\n      swap6\n      pop\n        /* \"#utility.yul\":4588:4705   */\n      pop\n        /* \"#utility.yul\":4744:4746   */\n      0x20\n        /* \"#utility.yul\":4770:4823   */\n      tag_302\n        /* \"#utility.yul\":4815:4822   */\n      dup9\n        /* \"#utility.yul\":4806:4812   */\n      dup3\n        /* \"#utility.yul\":4795:4804   */\n      dup10\n        /* \"#utility.yul\":4791:4813   */\n      add\n        /* \"#utility.yul\":4770:4823   */\n      tag_236\n      jump\t// in\n    tag_302:\n        /* \"#utility.yul\":4760:4823   */\n      swap5\n      pop\n        /* \"#utility.yul\":4715:4833   */\n      pop\n        /* \"#utility.yul\":4900:4902   */\n      0x40\n        /* \"#utility.yul\":4889:4898   */\n      dup7\n        /* \"#utility.yul\":4885:4903   */\n      add\n        /* \"#utility.yul\":4872:4904   */\n      calldataload\n        /* \"#utility.yul\":4931:4949   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4923:4929   */\n      dup2\n        /* \"#utility.yul\":4920:4950   */\n      gt\n        /* \"#utility.yul\":4917:5034   */\n      iszero\n      tag_303\n      jumpi\n        /* \"#utility.yul\":4953:5032   */\n      tag_304\n      tag_305\n      jump\t// in\n    tag_304:\n        /* \"#utility.yul\":4917:5034   */\n    tag_303:\n        /* \"#utility.yul\":5058:5136   */\n      tag_306\n        /* \"#utility.yul\":5128:5135   */\n      dup9\n        /* \"#utility.yul\":5119:5125   */\n      dup3\n        /* \"#utility.yul\":5108:5117   */\n      dup10\n        /* \"#utility.yul\":5104:5126   */\n      add\n        /* \"#utility.yul\":5058:5136   */\n      tag_268\n      jump\t// in\n    tag_306:\n        /* \"#utility.yul\":5048:5136   */\n      swap4\n      pop\n        /* \"#utility.yul\":4843:5146   */\n      pop\n        /* \"#utility.yul\":5213:5215   */\n      0x60\n        /* \"#utility.yul\":5202:5211   */\n      dup7\n        /* \"#utility.yul\":5198:5216   */\n      add\n        /* \"#utility.yul\":5185:5217   */\n      calldataload\n        /* \"#utility.yul\":5244:5262   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5236:5242   */\n      dup2\n        /* \"#utility.yul\":5233:5263   */\n      gt\n        /* \"#utility.yul\":5230:5347   */\n      iszero\n      tag_307\n      jumpi\n        /* \"#utility.yul\":5266:5345   */\n      tag_308\n      tag_305\n      jump\t// in\n    tag_308:\n        /* \"#utility.yul\":5230:5347   */\n    tag_307:\n        /* \"#utility.yul\":5371:5449   */\n      tag_309\n        /* \"#utility.yul\":5441:5448   */\n      dup9\n        /* \"#utility.yul\":5432:5438   */\n      dup3\n        /* \"#utility.yul\":5421:5430   */\n      dup10\n        /* \"#utility.yul\":5417:5439   */\n      add\n        /* \"#utility.yul\":5371:5449   */\n      tag_268\n      jump\t// in\n    tag_309:\n        /* \"#utility.yul\":5361:5449   */\n      swap3\n      pop\n        /* \"#utility.yul\":5156:5459   */\n      pop\n        /* \"#utility.yul\":5526:5529   */\n      0x80\n        /* \"#utility.yul\":5515:5524   */\n      dup7\n        /* \"#utility.yul\":5511:5530   */\n      add\n        /* \"#utility.yul\":5498:5531   */\n      calldataload\n        /* \"#utility.yul\":5558:5576   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5550:5556   */\n      dup2\n        /* \"#utility.yul\":5547:5577   */\n      gt\n        /* \"#utility.yul\":5544:5661   */\n      iszero\n      tag_310\n      jumpi\n        /* \"#utility.yul\":5580:5659   */\n      tag_311\n      tag_305\n      jump\t// in\n    tag_311:\n        /* \"#utility.yul\":5544:5661   */\n    tag_310:\n        /* \"#utility.yul\":5685:5747   */\n      tag_312\n        /* \"#utility.yul\":5739:5746   */\n      dup9\n        /* \"#utility.yul\":5730:5736   */\n      dup3\n        /* \"#utility.yul\":5719:5728   */\n      dup10\n        /* \"#utility.yul\":5715:5737   */\n      add\n        /* \"#utility.yul\":5685:5747   */\n      tag_284\n      jump\t// in\n    tag_312:\n        /* \"#utility.yul\":5675:5747   */\n      swap2\n      pop\n        /* \"#utility.yul\":5469:5757   */\n      pop\n        /* \"#utility.yul\":4255:5764   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5770:6859   */\n    tag_51:\n        /* \"#utility.yul\":5874:5880   */\n      0x00\n        /* \"#utility.yul\":5882:5888   */\n      dup1\n        /* \"#utility.yul\":5890:5896   */\n      0x00\n        /* \"#utility.yul\":5898:5904   */\n      dup1\n        /* \"#utility.yul\":5906:5912   */\n      0x00\n        /* \"#utility.yul\":5955:5958   */\n      0xa0\n        /* \"#utility.yul\":5943:5952   */\n      dup7\n        /* \"#utility.yul\":5934:5941   */\n      dup9\n        /* \"#utility.yul\":5930:5953   */\n      sub\n        /* \"#utility.yul\":5926:5959   */\n      slt\n        /* \"#utility.yul\":5923:6043   */\n      iszero\n      tag_314\n      jumpi\n        /* \"#utility.yul\":5962:6041   */\n      tag_315\n      tag_295\n      jump\t// in\n    tag_315:\n        /* \"#utility.yul\":5923:6043   */\n    tag_314:\n        /* \"#utility.yul\":6082:6083   */\n      0x00\n        /* \"#utility.yul\":6107:6160   */\n      tag_316\n        /* \"#utility.yul\":6152:6159   */\n      dup9\n        /* \"#utility.yul\":6143:6149   */\n      dup3\n        /* \"#utility.yul\":6132:6141   */\n      dup10\n        /* \"#utility.yul\":6128:6150   */\n      add\n        /* \"#utility.yul\":6107:6160   */\n      tag_236\n      jump\t// in\n    tag_316:\n        /* \"#utility.yul\":6097:6160   */\n      swap6\n      pop\n        /* \"#utility.yul\":6053:6170   */\n      pop\n        /* \"#utility.yul\":6209:6211   */\n      0x20\n        /* \"#utility.yul\":6235:6288   */\n      tag_317\n        /* \"#utility.yul\":6280:6287   */\n      dup9\n        /* \"#utility.yul\":6271:6277   */\n      dup3\n        /* \"#utility.yul\":6260:6269   */\n      dup10\n        /* \"#utility.yul\":6256:6278   */\n      add\n        /* \"#utility.yul\":6235:6288   */\n      tag_236\n      jump\t// in\n    tag_317:\n        /* \"#utility.yul\":6225:6288   */\n      swap5\n      pop\n        /* \"#utility.yul\":6180:6298   */\n      pop\n        /* \"#utility.yul\":6337:6339   */\n      0x40\n        /* \"#utility.yul\":6363:6416   */\n      tag_318\n        /* \"#utility.yul\":6408:6415   */\n      dup9\n        /* \"#utility.yul\":6399:6405   */\n      dup3\n        /* \"#utility.yul\":6388:6397   */\n      dup10\n        /* \"#utility.yul\":6384:6406   */\n      add\n        /* \"#utility.yul\":6363:6416   */\n      tag_248\n      jump\t// in\n    tag_318:\n        /* \"#utility.yul\":6353:6416   */\n      swap4\n      pop\n        /* \"#utility.yul\":6308:6426   */\n      pop\n        /* \"#utility.yul\":6465:6467   */\n      0x60\n        /* \"#utility.yul\":6491:6544   */\n      tag_319\n        /* \"#utility.yul\":6536:6543   */\n      dup9\n        /* \"#utility.yul\":6527:6533   */\n      dup3\n        /* \"#utility.yul\":6516:6525   */\n      dup10\n        /* \"#utility.yul\":6512:6534   */\n      add\n        /* \"#utility.yul\":6491:6544   */\n      tag_248\n      jump\t// in\n    tag_319:\n        /* \"#utility.yul\":6481:6544   */\n      swap3\n      pop\n        /* \"#utility.yul\":6436:6554   */\n      pop\n        /* \"#utility.yul\":6621:6624   */\n      0x80\n        /* \"#utility.yul\":6610:6619   */\n      dup7\n        /* \"#utility.yul\":6606:6625   */\n      add\n        /* \"#utility.yul\":6593:6626   */\n      calldataload\n        /* \"#utility.yul\":6653:6671   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":6645:6651   */\n      dup2\n        /* \"#utility.yul\":6642:6672   */\n      gt\n        /* \"#utility.yul\":6639:6756   */\n      iszero\n      tag_320\n      jumpi\n        /* \"#utility.yul\":6675:6754   */\n      tag_321\n      tag_305\n      jump\t// in\n    tag_321:\n        /* \"#utility.yul\":6639:6756   */\n    tag_320:\n        /* \"#utility.yul\":6780:6842   */\n      tag_322\n        /* \"#utility.yul\":6834:6841   */\n      dup9\n        /* \"#utility.yul\":6825:6831   */\n      dup3\n        /* \"#utility.yul\":6814:6823   */\n      dup10\n        /* \"#utility.yul\":6810:6832   */\n      add\n        /* \"#utility.yul\":6780:6842   */\n      tag_284\n      jump\t// in\n    tag_322:\n        /* \"#utility.yul\":6770:6842   */\n      swap2\n      pop\n        /* \"#utility.yul\":6564:6852   */\n      pop\n        /* \"#utility.yul\":5770:6859   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6865:7333   */\n    tag_42:\n        /* \"#utility.yul\":6930:6936   */\n      0x00\n        /* \"#utility.yul\":6938:6944   */\n      dup1\n        /* \"#utility.yul\":6987:6989   */\n      0x40\n        /* \"#utility.yul\":6975:6984   */\n      dup4\n        /* \"#utility.yul\":6966:6973   */\n      dup6\n        /* \"#utility.yul\":6962:6985   */\n      sub\n        /* \"#utility.yul\":6958:6990   */\n      slt\n        /* \"#utility.yul\":6955:7074   */\n      iszero\n      tag_324\n      jumpi\n        /* \"#utility.yul\":6993:7072   */\n      tag_325\n      tag_295\n      jump\t// in\n    tag_325:\n        /* \"#utility.yul\":6955:7074   */\n    tag_324:\n        /* \"#utility.yul\":7113:7114   */\n      0x00\n        /* \"#utility.yul\":7138:7191   */\n      tag_326\n        /* \"#utility.yul\":7183:7190   */\n      dup6\n        /* \"#utility.yul\":7174:7180   */\n      dup3\n        /* \"#utility.yul\":7163:7172   */\n      dup7\n        /* \"#utility.yul\":7159:7181   */\n      add\n        /* \"#utility.yul\":7138:7191   */\n      tag_236\n      jump\t// in\n    tag_326:\n        /* \"#utility.yul\":7128:7191   */\n      swap3\n      pop\n        /* \"#utility.yul\":7084:7201   */\n      pop\n        /* \"#utility.yul\":7240:7242   */\n      0x20\n        /* \"#utility.yul\":7266:7316   */\n      tag_327\n        /* \"#utility.yul\":7308:7315   */\n      dup6\n        /* \"#utility.yul\":7299:7305   */\n      dup3\n        /* \"#utility.yul\":7288:7297   */\n      dup7\n        /* \"#utility.yul\":7284:7306   */\n      add\n        /* \"#utility.yul\":7266:7316   */\n      tag_273\n      jump\t// in\n    tag_327:\n        /* \"#utility.yul\":7256:7316   */\n      swap2\n      pop\n        /* \"#utility.yul\":7211:7326   */\n      pop\n        /* \"#utility.yul\":6865:7333   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7339:7813   */\n    tag_14:\n        /* \"#utility.yul\":7407:7413   */\n      0x00\n        /* \"#utility.yul\":7415:7421   */\n      dup1\n        /* \"#utility.yul\":7464:7466   */\n      0x40\n        /* \"#utility.yul\":7452:7461   */\n      dup4\n        /* \"#utility.yul\":7443:7450   */\n      dup6\n        /* \"#utility.yul\":7439:7462   */\n      sub\n        /* \"#utility.yul\":7435:7467   */\n      slt\n        /* \"#utility.yul\":7432:7551   */\n      iszero\n      tag_329\n      jumpi\n        /* \"#utility.yul\":7470:7549   */\n      tag_330\n      tag_295\n      jump\t// in\n    tag_330:\n        /* \"#utility.yul\":7432:7551   */\n    tag_329:\n        /* \"#utility.yul\":7590:7591   */\n      0x00\n        /* \"#utility.yul\":7615:7668   */\n      tag_331\n        /* \"#utility.yul\":7660:7667   */\n      dup6\n        /* \"#utility.yul\":7651:7657   */\n      dup3\n        /* \"#utility.yul\":7640:7649   */\n      dup7\n        /* \"#utility.yul\":7636:7658   */\n      add\n        /* \"#utility.yul\":7615:7668   */\n      tag_236\n      jump\t// in\n    tag_331:\n        /* \"#utility.yul\":7605:7668   */\n      swap3\n      pop\n        /* \"#utility.yul\":7561:7678   */\n      pop\n        /* \"#utility.yul\":7717:7719   */\n      0x20\n        /* \"#utility.yul\":7743:7796   */\n      tag_332\n        /* \"#utility.yul\":7788:7795   */\n      dup6\n        /* \"#utility.yul\":7779:7785   */\n      dup3\n        /* \"#utility.yul\":7768:7777   */\n      dup7\n        /* \"#utility.yul\":7764:7786   */\n      add\n        /* \"#utility.yul\":7743:7796   */\n      tag_248\n      jump\t// in\n    tag_332:\n        /* \"#utility.yul\":7733:7796   */\n      swap2\n      pop\n        /* \"#utility.yul\":7688:7806   */\n      pop\n        /* \"#utility.yul\":7339:7813   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7819:8713   */\n    tag_36:\n        /* \"#utility.yul\":7937:7943   */\n      0x00\n        /* \"#utility.yul\":7945:7951   */\n      dup1\n        /* \"#utility.yul\":7994:7996   */\n      0x40\n        /* \"#utility.yul\":7982:7991   */\n      dup4\n        /* \"#utility.yul\":7973:7980   */\n      dup6\n        /* \"#utility.yul\":7969:7992   */\n      sub\n        /* \"#utility.yul\":7965:7997   */\n      slt\n        /* \"#utility.yul\":7962:8081   */\n      iszero\n      tag_334\n      jumpi\n        /* \"#utility.yul\":8000:8079   */\n      tag_335\n      tag_295\n      jump\t// in\n    tag_335:\n        /* \"#utility.yul\":7962:8081   */\n    tag_334:\n        /* \"#utility.yul\":8148:8149   */\n      0x00\n        /* \"#utility.yul\":8137:8146   */\n      dup4\n        /* \"#utility.yul\":8133:8150   */\n      add\n        /* \"#utility.yul\":8120:8151   */\n      calldataload\n        /* \"#utility.yul\":8178:8196   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":8170:8176   */\n      dup2\n        /* \"#utility.yul\":8167:8197   */\n      gt\n        /* \"#utility.yul\":8164:8281   */\n      iszero\n      tag_336\n      jumpi\n        /* \"#utility.yul\":8200:8279   */\n      tag_337\n      tag_305\n      jump\t// in\n    tag_337:\n        /* \"#utility.yul\":8164:8281   */\n    tag_336:\n        /* \"#utility.yul\":8305:8383   */\n      tag_338\n        /* \"#utility.yul\":8375:8382   */\n      dup6\n        /* \"#utility.yul\":8366:8372   */\n      dup3\n        /* \"#utility.yul\":8355:8364   */\n      dup7\n        /* \"#utility.yul\":8351:8373   */\n      add\n        /* \"#utility.yul\":8305:8383   */\n      tag_262\n      jump\t// in\n    tag_338:\n        /* \"#utility.yul\":8295:8383   */\n      swap3\n      pop\n        /* \"#utility.yul\":8091:8393   */\n      pop\n        /* \"#utility.yul\":8460:8462   */\n      0x20\n        /* \"#utility.yul\":8449:8458   */\n      dup4\n        /* \"#utility.yul\":8445:8463   */\n      add\n        /* \"#utility.yul\":8432:8464   */\n      calldataload\n        /* \"#utility.yul\":8491:8509   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":8483:8489   */\n      dup2\n        /* \"#utility.yul\":8480:8510   */\n      gt\n        /* \"#utility.yul\":8477:8594   */\n      iszero\n      tag_339\n      jumpi\n        /* \"#utility.yul\":8513:8592   */\n      tag_340\n      tag_305\n      jump\t// in\n    tag_340:\n        /* \"#utility.yul\":8477:8594   */\n    tag_339:\n        /* \"#utility.yul\":8618:8696   */\n      tag_341\n        /* \"#utility.yul\":8688:8695   */\n      dup6\n        /* \"#utility.yul\":8679:8685   */\n      dup3\n        /* \"#utility.yul\":8668:8677   */\n      dup7\n        /* \"#utility.yul\":8664:8686   */\n      add\n        /* \"#utility.yul\":8618:8696   */\n      tag_268\n      jump\t// in\n    tag_341:\n        /* \"#utility.yul\":8608:8696   */\n      swap2\n      pop\n        /* \"#utility.yul\":8403:8706   */\n      pop\n        /* \"#utility.yul\":7819:8713   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8719:9046   */\n    tag_20:\n        /* \"#utility.yul\":8777:8783   */\n      0x00\n        /* \"#utility.yul\":8826:8828   */\n      0x20\n        /* \"#utility.yul\":8814:8823   */\n      dup3\n        /* \"#utility.yul\":8805:8812   */\n      dup5\n        /* \"#utility.yul\":8801:8824   */\n      sub\n        /* \"#utility.yul\":8797:8829   */\n      slt\n        /* \"#utility.yul\":8794:8913   */\n      iszero\n      tag_343\n      jumpi\n        /* \"#utility.yul\":8832:8911   */\n      tag_344\n      tag_295\n      jump\t// in\n    tag_344:\n        /* \"#utility.yul\":8794:8913   */\n    tag_343:\n        /* \"#utility.yul\":8952:8953   */\n      0x00\n        /* \"#utility.yul\":8977:9029   */\n      tag_345\n        /* \"#utility.yul\":9021:9028   */\n      dup5\n        /* \"#utility.yul\":9012:9018   */\n      dup3\n        /* \"#utility.yul\":9001:9010   */\n      dup6\n        /* \"#utility.yul\":8997:9019   */\n      add\n        /* \"#utility.yul\":8977:9029   */\n      tag_277\n      jump\t// in\n    tag_345:\n        /* \"#utility.yul\":8967:9029   */\n      swap2\n      pop\n        /* \"#utility.yul\":8923:9039   */\n      pop\n        /* \"#utility.yul\":8719:9046   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9052:9401   */\n    tag_178:\n        /* \"#utility.yul\":9121:9127   */\n      0x00\n        /* \"#utility.yul\":9170:9172   */\n      0x20\n        /* \"#utility.yul\":9158:9167   */\n      dup3\n        /* \"#utility.yul\":9149:9156   */\n      dup5\n        /* \"#utility.yul\":9145:9168   */\n      sub\n        /* \"#utility.yul\":9141:9173   */\n      slt\n        /* \"#utility.yul\":9138:9257   */\n      iszero\n      tag_347\n      jumpi\n        /* \"#utility.yul\":9176:9255   */\n      tag_348\n      tag_295\n      jump\t// in\n    tag_348:\n        /* \"#utility.yul\":9138:9257   */\n    tag_347:\n        /* \"#utility.yul\":9296:9297   */\n      0x00\n        /* \"#utility.yul\":9321:9384   */\n      tag_349\n        /* \"#utility.yul\":9376:9383   */\n      dup5\n        /* \"#utility.yul\":9367:9373   */\n      dup3\n        /* \"#utility.yul\":9356:9365   */\n      dup6\n        /* \"#utility.yul\":9352:9374   */\n      add\n        /* \"#utility.yul\":9321:9384   */\n      tag_281\n      jump\t// in\n    tag_349:\n        /* \"#utility.yul\":9311:9384   */\n      swap2\n      pop\n        /* \"#utility.yul\":9267:9394   */\n      pop\n        /* \"#utility.yul\":9052:9401   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9407:9736   */\n    tag_26:\n        /* \"#utility.yul\":9466:9472   */\n      0x00\n        /* \"#utility.yul\":9515:9517   */\n      0x20\n        /* \"#utility.yul\":9503:9512   */\n      dup3\n        /* \"#utility.yul\":9494:9501   */\n      dup5\n        /* \"#utility.yul\":9490:9513   */\n      sub\n        /* \"#utility.yul\":9486:9518   */\n      slt\n        /* \"#utility.yul\":9483:9602   */\n      iszero\n      tag_351\n      jumpi\n        /* \"#utility.yul\":9521:9600   */\n      tag_352\n      tag_295\n      jump\t// in\n    tag_352:\n        /* \"#utility.yul\":9483:9602   */\n    tag_351:\n        /* \"#utility.yul\":9641:9642   */\n      0x00\n        /* \"#utility.yul\":9666:9719   */\n      tag_353\n        /* \"#utility.yul\":9711:9718   */\n      dup5\n        /* \"#utility.yul\":9702:9708   */\n      dup3\n        /* \"#utility.yul\":9691:9700   */\n      dup6\n        /* \"#utility.yul\":9687:9709   */\n      add\n        /* \"#utility.yul\":9666:9719   */\n      tag_248\n      jump\t// in\n    tag_353:\n        /* \"#utility.yul\":9656:9719   */\n      swap2\n      pop\n        /* \"#utility.yul\":9612:9729   */\n      pop\n        /* \"#utility.yul\":9407:9736   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9742:9921   */\n    tag_354:\n        /* \"#utility.yul\":9811:9821   */\n      0x00\n        /* \"#utility.yul\":9832:9878   */\n      tag_356\n        /* \"#utility.yul\":9874:9877   */\n      dup4\n        /* \"#utility.yul\":9866:9872   */\n      dup4\n        /* \"#utility.yul\":9832:9878   */\n      tag_357\n      jump\t// in\n    tag_356:\n        /* \"#utility.yul\":9910:9914   */\n      0x20\n        /* \"#utility.yul\":9905:9908   */\n      dup4\n        /* \"#utility.yul\":9901:9915   */\n      add\n        /* \"#utility.yul\":9887:9915   */\n      swap1\n      pop\n        /* \"#utility.yul\":9742:9921   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9927:10045   */\n    tag_358:\n        /* \"#utility.yul\":10014:10038   */\n      tag_360\n        /* \"#utility.yul\":10032:10037   */\n      dup2\n        /* \"#utility.yul\":10014:10038   */\n      tag_361\n      jump\t// in\n    tag_360:\n        /* \"#utility.yul\":10009:10012   */\n      dup3\n        /* \"#utility.yul\":10002:10039   */\n      mstore\n        /* \"#utility.yul\":9927:10045   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10081:10813   */\n    tag_362:\n        /* \"#utility.yul\":10200:10203   */\n      0x00\n        /* \"#utility.yul\":10229:10283   */\n      tag_364\n        /* \"#utility.yul\":10277:10282   */\n      dup3\n        /* \"#utility.yul\":10229:10283   */\n      tag_365\n      jump\t// in\n    tag_364:\n        /* \"#utility.yul\":10299:10385   */\n      tag_366\n        /* \"#utility.yul\":10378:10384   */\n      dup2\n        /* \"#utility.yul\":10373:10376   */\n      dup6\n        /* \"#utility.yul\":10299:10385   */\n      tag_367\n      jump\t// in\n    tag_366:\n        /* \"#utility.yul\":10292:10385   */\n      swap4\n      pop\n        /* \"#utility.yul\":10409:10465   */\n      tag_368\n        /* \"#utility.yul\":10459:10464   */\n      dup4\n        /* \"#utility.yul\":10409:10465   */\n      tag_369\n      jump\t// in\n    tag_368:\n        /* \"#utility.yul\":10488:10495   */\n      dup1\n        /* \"#utility.yul\":10519:10520   */\n      0x00\n        /* \"#utility.yul\":10504:10788   */\n    tag_370:\n        /* \"#utility.yul\":10529:10535   */\n      dup4\n        /* \"#utility.yul\":10526:10527   */\n      dup2\n        /* \"#utility.yul\":10523:10536   */\n      lt\n        /* \"#utility.yul\":10504:10788   */\n      iszero\n      tag_372\n      jumpi\n        /* \"#utility.yul\":10605:10611   */\n      dup2\n        /* \"#utility.yul\":10599:10612   */\n      mload\n        /* \"#utility.yul\":10632:10695   */\n      tag_373\n        /* \"#utility.yul\":10691:10694   */\n      dup9\n        /* \"#utility.yul\":10676:10689   */\n      dup3\n        /* \"#utility.yul\":10632:10695   */\n      tag_354\n      jump\t// in\n    tag_373:\n        /* \"#utility.yul\":10625:10695   */\n      swap8\n      pop\n        /* \"#utility.yul\":10718:10778   */\n      tag_374\n        /* \"#utility.yul\":10771:10777   */\n      dup4\n        /* \"#utility.yul\":10718:10778   */\n      tag_375\n      jump\t// in\n    tag_374:\n        /* \"#utility.yul\":10708:10778   */\n      swap3\n      pop\n        /* \"#utility.yul\":10564:10788   */\n      pop\n        /* \"#utility.yul\":10551:10552   */\n      0x01\n        /* \"#utility.yul\":10548:10549   */\n      dup2\n        /* \"#utility.yul\":10544:10553   */\n      add\n        /* \"#utility.yul\":10539:10553   */\n      swap1\n      pop\n        /* \"#utility.yul\":10504:10788   */\n      jump(tag_370)\n    tag_372:\n        /* \"#utility.yul\":10508:10522   */\n      pop\n        /* \"#utility.yul\":10804:10807   */\n      dup6\n        /* \"#utility.yul\":10797:10807   */\n      swap4\n      pop\n        /* \"#utility.yul\":10205:10813   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":10081:10813   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10819:10928   */\n    tag_376:\n        /* \"#utility.yul\":10900:10921   */\n      tag_378\n        /* \"#utility.yul\":10915:10920   */\n      dup2\n        /* \"#utility.yul\":10900:10921   */\n      tag_379\n      jump\t// in\n    tag_378:\n        /* \"#utility.yul\":10895:10898   */\n      dup3\n        /* \"#utility.yul\":10888:10922   */\n      mstore\n        /* \"#utility.yul\":10819:10928   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10934:11294   */\n    tag_380:\n        /* \"#utility.yul\":11020:11023   */\n      0x00\n        /* \"#utility.yul\":11048:11086   */\n      tag_382\n        /* \"#utility.yul\":11080:11085   */\n      dup3\n        /* \"#utility.yul\":11048:11086   */\n      tag_383\n      jump\t// in\n    tag_382:\n        /* \"#utility.yul\":11102:11172   */\n      tag_384\n        /* \"#utility.yul\":11165:11171   */\n      dup2\n        /* \"#utility.yul\":11160:11163   */\n      dup6\n        /* \"#utility.yul\":11102:11172   */\n      tag_385\n      jump\t// in\n    tag_384:\n        /* \"#utility.yul\":11095:11172   */\n      swap4\n      pop\n        /* \"#utility.yul\":11181:11233   */\n      tag_386\n        /* \"#utility.yul\":11226:11232   */\n      dup2\n        /* \"#utility.yul\":11221:11224   */\n      dup6\n        /* \"#utility.yul\":11214:11218   */\n      0x20\n        /* \"#utility.yul\":11207:11212   */\n      dup7\n        /* \"#utility.yul\":11203:11219   */\n      add\n        /* \"#utility.yul\":11181:11233   */\n      tag_387\n      jump\t// in\n    tag_386:\n        /* \"#utility.yul\":11258:11287   */\n      tag_388\n        /* \"#utility.yul\":11280:11286   */\n      dup2\n        /* \"#utility.yul\":11258:11287   */\n      tag_389\n      jump\t// in\n    tag_388:\n        /* \"#utility.yul\":11253:11256   */\n      dup5\n        /* \"#utility.yul\":11249:11288   */\n      add\n        /* \"#utility.yul\":11242:11288   */\n      swap2\n      pop\n        /* \"#utility.yul\":11024:11294   */\n      pop\n        /* \"#utility.yul\":10934:11294   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11300:11664   */\n    tag_390:\n        /* \"#utility.yul\":11388:11391   */\n      0x00\n        /* \"#utility.yul\":11416:11455   */\n      tag_392\n        /* \"#utility.yul\":11449:11454   */\n      dup3\n        /* \"#utility.yul\":11416:11455   */\n      tag_393\n      jump\t// in\n    tag_392:\n        /* \"#utility.yul\":11471:11542   */\n      tag_394\n        /* \"#utility.yul\":11535:11541   */\n      dup2\n        /* \"#utility.yul\":11530:11533   */\n      dup6\n        /* \"#utility.yul\":11471:11542   */\n      tag_395\n      jump\t// in\n    tag_394:\n        /* \"#utility.yul\":11464:11542   */\n      swap4\n      pop\n        /* \"#utility.yul\":11551:11603   */\n      tag_396\n        /* \"#utility.yul\":11596:11602   */\n      dup2\n        /* \"#utility.yul\":11591:11594   */\n      dup6\n        /* \"#utility.yul\":11584:11588   */\n      0x20\n        /* \"#utility.yul\":11577:11582   */\n      dup7\n        /* \"#utility.yul\":11573:11589   */\n      add\n        /* \"#utility.yul\":11551:11603   */\n      tag_387\n      jump\t// in\n    tag_396:\n        /* \"#utility.yul\":11628:11657   */\n      tag_397\n        /* \"#utility.yul\":11650:11656   */\n      dup2\n        /* \"#utility.yul\":11628:11657   */\n      tag_389\n      jump\t// in\n    tag_397:\n        /* \"#utility.yul\":11623:11626   */\n      dup5\n        /* \"#utility.yul\":11619:11658   */\n      add\n        /* \"#utility.yul\":11612:11658   */\n      swap2\n      pop\n        /* \"#utility.yul\":11392:11664   */\n      pop\n        /* \"#utility.yul\":11300:11664   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11670:12036   */\n    tag_398:\n        /* \"#utility.yul\":11812:11815   */\n      0x00\n        /* \"#utility.yul\":11833:11900   */\n      tag_400\n        /* \"#utility.yul\":11897:11899   */\n      0x28\n        /* \"#utility.yul\":11892:11895   */\n      dup4\n        /* \"#utility.yul\":11833:11900   */\n      tag_395\n      jump\t// in\n    tag_400:\n        /* \"#utility.yul\":11826:11900   */\n      swap2\n      pop\n        /* \"#utility.yul\":11909:12002   */\n      tag_401\n        /* \"#utility.yul\":11998:12001   */\n      dup3\n        /* \"#utility.yul\":11909:12002   */\n      tag_402\n      jump\t// in\n    tag_401:\n        /* \"#utility.yul\":12027:12029   */\n      0x40\n        /* \"#utility.yul\":12022:12025   */\n      dup3\n        /* \"#utility.yul\":12018:12030   */\n      add\n        /* \"#utility.yul\":12011:12030   */\n      swap1\n      pop\n        /* \"#utility.yul\":11670:12036   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12042:12408   */\n    tag_403:\n        /* \"#utility.yul\":12184:12187   */\n      0x00\n        /* \"#utility.yul\":12205:12272   */\n      tag_405\n        /* \"#utility.yul\":12269:12271   */\n      0x2a\n        /* \"#utility.yul\":12264:12267   */\n      dup4\n        /* \"#utility.yul\":12205:12272   */\n      tag_395\n      jump\t// in\n    tag_405:\n        /* \"#utility.yul\":12198:12272   */\n      swap2\n      pop\n        /* \"#utility.yul\":12281:12374   */\n      tag_406\n        /* \"#utility.yul\":12370:12373   */\n      dup3\n        /* \"#utility.yul\":12281:12374   */\n      tag_407\n      jump\t// in\n    tag_406:\n        /* \"#utility.yul\":12399:12401   */\n      0x40\n        /* \"#utility.yul\":12394:12397   */\n      dup3\n        /* \"#utility.yul\":12390:12402   */\n      add\n        /* \"#utility.yul\":12383:12402   */\n      swap1\n      pop\n        /* \"#utility.yul\":12042:12408   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12414:12780   */\n    tag_408:\n        /* \"#utility.yul\":12556:12559   */\n      0x00\n        /* \"#utility.yul\":12577:12644   */\n      tag_410\n        /* \"#utility.yul\":12641:12643   */\n      0x2e\n        /* \"#utility.yul\":12636:12639   */\n      dup4\n        /* \"#utility.yul\":12577:12644   */\n      tag_395\n      jump\t// in\n    tag_410:\n        /* \"#utility.yul\":12570:12644   */\n      swap2\n      pop\n        /* \"#utility.yul\":12653:12746   */\n      tag_411\n        /* \"#utility.yul\":12742:12745   */\n      dup3\n        /* \"#utility.yul\":12653:12746   */\n      tag_412\n      jump\t// in\n    tag_411:\n        /* \"#utility.yul\":12771:12773   */\n      0x40\n        /* \"#utility.yul\":12766:12769   */\n      dup3\n        /* \"#utility.yul\":12762:12774   */\n      add\n        /* \"#utility.yul\":12755:12774   */\n      swap1\n      pop\n        /* \"#utility.yul\":12414:12780   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12786:13152   */\n    tag_413:\n        /* \"#utility.yul\":12928:12931   */\n      0x00\n        /* \"#utility.yul\":12949:13016   */\n      tag_415\n        /* \"#utility.yul\":13013:13015   */\n      0x25\n        /* \"#utility.yul\":13008:13011   */\n      dup4\n        /* \"#utility.yul\":12949:13016   */\n      tag_395\n      jump\t// in\n    tag_415:\n        /* \"#utility.yul\":12942:13016   */\n      swap2\n      pop\n        /* \"#utility.yul\":13025:13118   */\n      tag_416\n        /* \"#utility.yul\":13114:13117   */\n      dup3\n        /* \"#utility.yul\":13025:13118   */\n      tag_417\n      jump\t// in\n    tag_416:\n        /* \"#utility.yul\":13143:13145   */\n      0x40\n        /* \"#utility.yul\":13138:13141   */\n      dup3\n        /* \"#utility.yul\":13134:13146   */\n      add\n        /* \"#utility.yul\":13127:13146   */\n      swap1\n      pop\n        /* \"#utility.yul\":12786:13152   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13158:13524   */\n    tag_418:\n        /* \"#utility.yul\":13300:13303   */\n      0x00\n        /* \"#utility.yul\":13321:13388   */\n      tag_420\n        /* \"#utility.yul\":13385:13387   */\n      0x2a\n        /* \"#utility.yul\":13380:13383   */\n      dup4\n        /* \"#utility.yul\":13321:13388   */\n      tag_395\n      jump\t// in\n    tag_420:\n        /* \"#utility.yul\":13314:13388   */\n      swap2\n      pop\n        /* \"#utility.yul\":13397:13490   */\n      tag_421\n        /* \"#utility.yul\":13486:13489   */\n      dup3\n        /* \"#utility.yul\":13397:13490   */\n      tag_422\n      jump\t// in\n    tag_421:\n        /* \"#utility.yul\":13515:13517   */\n      0x40\n        /* \"#utility.yul\":13510:13513   */\n      dup3\n        /* \"#utility.yul\":13506:13518   */\n      add\n        /* \"#utility.yul\":13499:13518   */\n      swap1\n      pop\n        /* \"#utility.yul\":13158:13524   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13530:13896   */\n    tag_423:\n        /* \"#utility.yul\":13672:13675   */\n      0x00\n        /* \"#utility.yul\":13693:13760   */\n      tag_425\n        /* \"#utility.yul\":13757:13759   */\n      0x29\n        /* \"#utility.yul\":13752:13755   */\n      dup4\n        /* \"#utility.yul\":13693:13760   */\n      tag_395\n      jump\t// in\n    tag_425:\n        /* \"#utility.yul\":13686:13760   */\n      swap2\n      pop\n        /* \"#utility.yul\":13769:13862   */\n      tag_426\n        /* \"#utility.yul\":13858:13861   */\n      dup3\n        /* \"#utility.yul\":13769:13862   */\n      tag_427\n      jump\t// in\n    tag_426:\n        /* \"#utility.yul\":13887:13889   */\n      0x40\n        /* \"#utility.yul\":13882:13885   */\n      dup3\n        /* \"#utility.yul\":13878:13890   */\n      add\n        /* \"#utility.yul\":13871:13890   */\n      swap1\n      pop\n        /* \"#utility.yul\":13530:13896   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13902:14268   */\n    tag_428:\n        /* \"#utility.yul\":14044:14047   */\n      0x00\n        /* \"#utility.yul\":14065:14132   */\n      tag_430\n        /* \"#utility.yul\":14129:14131   */\n      0x29\n        /* \"#utility.yul\":14124:14127   */\n      dup4\n        /* \"#utility.yul\":14065:14132   */\n      tag_395\n      jump\t// in\n    tag_430:\n        /* \"#utility.yul\":14058:14132   */\n      swap2\n      pop\n        /* \"#utility.yul\":14141:14234   */\n      tag_431\n        /* \"#utility.yul\":14230:14233   */\n      dup3\n        /* \"#utility.yul\":14141:14234   */\n      tag_432\n      jump\t// in\n    tag_431:\n        /* \"#utility.yul\":14259:14261   */\n      0x40\n        /* \"#utility.yul\":14254:14257   */\n      dup3\n        /* \"#utility.yul\":14250:14262   */\n      add\n        /* \"#utility.yul\":14243:14262   */\n      swap1\n      pop\n        /* \"#utility.yul\":13902:14268   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14274:14640   */\n    tag_433:\n        /* \"#utility.yul\":14416:14419   */\n      0x00\n        /* \"#utility.yul\":14437:14504   */\n      tag_435\n        /* \"#utility.yul\":14501:14503   */\n      0x28\n        /* \"#utility.yul\":14496:14499   */\n      dup4\n        /* \"#utility.yul\":14437:14504   */\n      tag_395\n      jump\t// in\n    tag_435:\n        /* \"#utility.yul\":14430:14504   */\n      swap2\n      pop\n        /* \"#utility.yul\":14513:14606   */\n      tag_436\n        /* \"#utility.yul\":14602:14605   */\n      dup3\n        /* \"#utility.yul\":14513:14606   */\n      tag_437\n      jump\t// in\n    tag_436:\n        /* \"#utility.yul\":14631:14633   */\n      0x40\n        /* \"#utility.yul\":14626:14629   */\n      dup3\n        /* \"#utility.yul\":14622:14634   */\n      add\n        /* \"#utility.yul\":14615:14634   */\n      swap1\n      pop\n        /* \"#utility.yul\":14274:14640   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14646:15012   */\n    tag_438:\n        /* \"#utility.yul\":14788:14791   */\n      0x00\n        /* \"#utility.yul\":14809:14876   */\n      tag_440\n        /* \"#utility.yul\":14873:14875   */\n      0x34\n        /* \"#utility.yul\":14868:14871   */\n      dup4\n        /* \"#utility.yul\":14809:14876   */\n      tag_395\n      jump\t// in\n    tag_440:\n        /* \"#utility.yul\":14802:14876   */\n      swap2\n      pop\n        /* \"#utility.yul\":14885:14978   */\n      tag_441\n        /* \"#utility.yul\":14974:14977   */\n      dup3\n        /* \"#utility.yul\":14885:14978   */\n      tag_442\n      jump\t// in\n    tag_441:\n        /* \"#utility.yul\":15003:15005   */\n      0x40\n        /* \"#utility.yul\":14998:15001   */\n      dup3\n        /* \"#utility.yul\":14994:15006   */\n      add\n        /* \"#utility.yul\":14987:15006   */\n      swap1\n      pop\n        /* \"#utility.yul\":14646:15012   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15018:15126   */\n    tag_357:\n        /* \"#utility.yul\":15095:15119   */\n      tag_444\n        /* \"#utility.yul\":15113:15118   */\n      dup2\n        /* \"#utility.yul\":15095:15119   */\n      tag_445\n      jump\t// in\n    tag_444:\n        /* \"#utility.yul\":15090:15093   */\n      dup3\n        /* \"#utility.yul\":15083:15120   */\n      mstore\n        /* \"#utility.yul\":15018:15126   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15132:15250   */\n    tag_446:\n        /* \"#utility.yul\":15219:15243   */\n      tag_448\n        /* \"#utility.yul\":15237:15242   */\n      dup2\n        /* \"#utility.yul\":15219:15243   */\n      tag_445\n      jump\t// in\n    tag_448:\n        /* \"#utility.yul\":15214:15217   */\n      dup3\n        /* \"#utility.yul\":15207:15244   */\n      mstore\n        /* \"#utility.yul\":15132:15250   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15256:16309   */\n    tag_174:\n        /* \"#utility.yul\":15579:15583   */\n      0x00\n        /* \"#utility.yul\":15617:15620   */\n      0xa0\n        /* \"#utility.yul\":15606:15615   */\n      dup3\n        /* \"#utility.yul\":15602:15621   */\n      add\n        /* \"#utility.yul\":15594:15621   */\n      swap1\n      pop\n        /* \"#utility.yul\":15631:15702   */\n      tag_450\n        /* \"#utility.yul\":15699:15700   */\n      0x00\n        /* \"#utility.yul\":15688:15697   */\n      dup4\n        /* \"#utility.yul\":15684:15701   */\n      add\n        /* \"#utility.yul\":15675:15681   */\n      dup9\n        /* \"#utility.yul\":15631:15702   */\n      tag_358\n      jump\t// in\n    tag_450:\n        /* \"#utility.yul\":15712:15784   */\n      tag_451\n        /* \"#utility.yul\":15780:15782   */\n      0x20\n        /* \"#utility.yul\":15769:15778   */\n      dup4\n        /* \"#utility.yul\":15765:15783   */\n      add\n        /* \"#utility.yul\":15756:15762   */\n      dup8\n        /* \"#utility.yul\":15712:15784   */\n      tag_358\n      jump\t// in\n    tag_451:\n        /* \"#utility.yul\":15831:15840   */\n      dup2\n        /* \"#utility.yul\":15825:15829   */\n      dup2\n        /* \"#utility.yul\":15821:15841   */\n      sub\n        /* \"#utility.yul\":15816:15818   */\n      0x40\n        /* \"#utility.yul\":15805:15814   */\n      dup4\n        /* \"#utility.yul\":15801:15819   */\n      add\n        /* \"#utility.yul\":15794:15842   */\n      mstore\n        /* \"#utility.yul\":15859:15967   */\n      tag_452\n        /* \"#utility.yul\":15962:15966   */\n      dup2\n        /* \"#utility.yul\":15953:15959   */\n      dup7\n        /* \"#utility.yul\":15859:15967   */\n      tag_362\n      jump\t// in\n    tag_452:\n        /* \"#utility.yul\":15851:15967   */\n      swap1\n      pop\n        /* \"#utility.yul\":16014:16023   */\n      dup2\n        /* \"#utility.yul\":16008:16012   */\n      dup2\n        /* \"#utility.yul\":16004:16024   */\n      sub\n        /* \"#utility.yul\":15999:16001   */\n      0x60\n        /* \"#utility.yul\":15988:15997   */\n      dup4\n        /* \"#utility.yul\":15984:16002   */\n      add\n        /* \"#utility.yul\":15977:16025   */\n      mstore\n        /* \"#utility.yul\":16042:16150   */\n      tag_453\n        /* \"#utility.yul\":16145:16149   */\n      dup2\n        /* \"#utility.yul\":16136:16142   */\n      dup6\n        /* \"#utility.yul\":16042:16150   */\n      tag_362\n      jump\t// in\n    tag_453:\n        /* \"#utility.yul\":16034:16150   */\n      swap1\n      pop\n        /* \"#utility.yul\":16198:16207   */\n      dup2\n        /* \"#utility.yul\":16192:16196   */\n      dup2\n        /* \"#utility.yul\":16188:16208   */\n      sub\n        /* \"#utility.yul\":16182:16185   */\n      0x80\n        /* \"#utility.yul\":16171:16180   */\n      dup4\n        /* \"#utility.yul\":16167:16186   */\n      add\n        /* \"#utility.yul\":16160:16209   */\n      mstore\n        /* \"#utility.yul\":16226:16302   */\n      tag_454\n        /* \"#utility.yul\":16297:16301   */\n      dup2\n        /* \"#utility.yul\":16288:16294   */\n      dup5\n        /* \"#utility.yul\":16226:16302   */\n      tag_380\n      jump\t// in\n    tag_454:\n        /* \"#utility.yul\":16218:16302   */\n      swap1\n      pop\n        /* \"#utility.yul\":15256:16309   */\n      swap7\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16315:17066   */\n    tag_205:\n        /* \"#utility.yul\":16538:16542   */\n      0x00\n        /* \"#utility.yul\":16576:16579   */\n      0xa0\n        /* \"#utility.yul\":16565:16574   */\n      dup3\n        /* \"#utility.yul\":16561:16580   */\n      add\n        /* \"#utility.yul\":16553:16580   */\n      swap1\n      pop\n        /* \"#utility.yul\":16590:16661   */\n      tag_456\n        /* \"#utility.yul\":16658:16659   */\n      0x00\n        /* \"#utility.yul\":16647:16656   */\n      dup4\n        /* \"#utility.yul\":16643:16660   */\n      add\n        /* \"#utility.yul\":16634:16640   */\n      dup9\n        /* \"#utility.yul\":16590:16661   */\n      tag_358\n      jump\t// in\n    tag_456:\n        /* \"#utility.yul\":16671:16743   */\n      tag_457\n        /* \"#utility.yul\":16739:16741   */\n      0x20\n        /* \"#utility.yul\":16728:16737   */\n      dup4\n        /* \"#utility.yul\":16724:16742   */\n      add\n        /* \"#utility.yul\":16715:16721   */\n      dup8\n        /* \"#utility.yul\":16671:16743   */\n      tag_358\n      jump\t// in\n    tag_457:\n        /* \"#utility.yul\":16753:16825   */\n      tag_458\n        /* \"#utility.yul\":16821:16823   */\n      0x40\n        /* \"#utility.yul\":16810:16819   */\n      dup4\n        /* \"#utility.yul\":16806:16824   */\n      add\n        /* \"#utility.yul\":16797:16803   */\n      dup7\n        /* \"#utility.yul\":16753:16825   */\n      tag_446\n      jump\t// in\n    tag_458:\n        /* \"#utility.yul\":16835:16907   */\n      tag_459\n        /* \"#utility.yul\":16903:16905   */\n      0x60\n        /* \"#utility.yul\":16892:16901   */\n      dup4\n        /* \"#utility.yul\":16888:16906   */\n      add\n        /* \"#utility.yul\":16879:16885   */\n      dup6\n        /* \"#utility.yul\":16835:16907   */\n      tag_446\n      jump\t// in\n    tag_459:\n        /* \"#utility.yul\":16955:16964   */\n      dup2\n        /* \"#utility.yul\":16949:16953   */\n      dup2\n        /* \"#utility.yul\":16945:16965   */\n      sub\n        /* \"#utility.yul\":16939:16942   */\n      0x80\n        /* \"#utility.yul\":16928:16937   */\n      dup4\n        /* \"#utility.yul\":16924:16943   */\n      add\n        /* \"#utility.yul\":16917:16966   */\n      mstore\n        /* \"#utility.yul\":16983:17059   */\n      tag_460\n        /* \"#utility.yul\":17054:17058   */\n      dup2\n        /* \"#utility.yul\":17045:17051   */\n      dup5\n        /* \"#utility.yul\":16983:17059   */\n      tag_380\n      jump\t// in\n    tag_460:\n        /* \"#utility.yul\":16975:17059   */\n      swap1\n      pop\n        /* \"#utility.yul\":16315:17066   */\n      swap7\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17072:17445   */\n    tag_39:\n        /* \"#utility.yul\":17215:17219   */\n      0x00\n        /* \"#utility.yul\":17253:17255   */\n      0x20\n        /* \"#utility.yul\":17242:17251   */\n      dup3\n        /* \"#utility.yul\":17238:17256   */\n      add\n        /* \"#utility.yul\":17230:17256   */\n      swap1\n      pop\n        /* \"#utility.yul\":17302:17311   */\n      dup2\n        /* \"#utility.yul\":17296:17300   */\n      dup2\n        /* \"#utility.yul\":17292:17312   */\n      sub\n        /* \"#utility.yul\":17288:17289   */\n      0x00\n        /* \"#utility.yul\":17277:17286   */\n      dup4\n        /* \"#utility.yul\":17273:17290   */\n      add\n        /* \"#utility.yul\":17266:17313   */\n      mstore\n        /* \"#utility.yul\":17330:17438   */\n      tag_462\n        /* \"#utility.yul\":17433:17437   */\n      dup2\n        /* \"#utility.yul\":17424:17430   */\n      dup5\n        /* \"#utility.yul\":17330:17438   */\n      tag_362\n      jump\t// in\n    tag_462:\n        /* \"#utility.yul\":17322:17438   */\n      swap1\n      pop\n        /* \"#utility.yul\":17072:17445   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17451:18085   */\n    tag_141:\n        /* \"#utility.yul\":17672:17676   */\n      0x00\n        /* \"#utility.yul\":17710:17712   */\n      0x40\n        /* \"#utility.yul\":17699:17708   */\n      dup3\n        /* \"#utility.yul\":17695:17713   */\n      add\n        /* \"#utility.yul\":17687:17713   */\n      swap1\n      pop\n        /* \"#utility.yul\":17759:17768   */\n      dup2\n        /* \"#utility.yul\":17753:17757   */\n      dup2\n        /* \"#utility.yul\":17749:17769   */\n      sub\n        /* \"#utility.yul\":17745:17746   */\n      0x00\n        /* \"#utility.yul\":17734:17743   */\n      dup4\n        /* \"#utility.yul\":17730:17747   */\n      add\n        /* \"#utility.yul\":17723:17770   */\n      mstore\n        /* \"#utility.yul\":17787:17895   */\n      tag_464\n        /* \"#utility.yul\":17890:17894   */\n      dup2\n        /* \"#utility.yul\":17881:17887   */\n      dup6\n        /* \"#utility.yul\":17787:17895   */\n      tag_362\n      jump\t// in\n    tag_464:\n        /* \"#utility.yul\":17779:17895   */\n      swap1\n      pop\n        /* \"#utility.yul\":17942:17951   */\n      dup2\n        /* \"#utility.yul\":17936:17940   */\n      dup2\n        /* \"#utility.yul\":17932:17952   */\n      sub\n        /* \"#utility.yul\":17927:17929   */\n      0x20\n        /* \"#utility.yul\":17916:17925   */\n      dup4\n        /* \"#utility.yul\":17912:17930   */\n      add\n        /* \"#utility.yul\":17905:17953   */\n      mstore\n        /* \"#utility.yul\":17970:18078   */\n      tag_465\n        /* \"#utility.yul\":18073:18077   */\n      dup2\n        /* \"#utility.yul\":18064:18070   */\n      dup5\n        /* \"#utility.yul\":17970:18078   */\n      tag_362\n      jump\t// in\n    tag_465:\n        /* \"#utility.yul\":17962:18078   */\n      swap1\n      pop\n        /* \"#utility.yul\":17451:18085   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18091:18301   */\n    tag_23:\n        /* \"#utility.yul\":18178:18182   */\n      0x00\n        /* \"#utility.yul\":18216:18218   */\n      0x20\n        /* \"#utility.yul\":18205:18214   */\n      dup3\n        /* \"#utility.yul\":18201:18219   */\n      add\n        /* \"#utility.yul\":18193:18219   */\n      swap1\n      pop\n        /* \"#utility.yul\":18229:18294   */\n      tag_467\n        /* \"#utility.yul\":18291:18292   */\n      0x00\n        /* \"#utility.yul\":18280:18289   */\n      dup4\n        /* \"#utility.yul\":18276:18293   */\n      add\n        /* \"#utility.yul\":18267:18273   */\n      dup5\n        /* \"#utility.yul\":18229:18294   */\n      tag_376\n      jump\t// in\n    tag_467:\n        /* \"#utility.yul\":18091:18301   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18307:18620   */\n    tag_29:\n        /* \"#utility.yul\":18420:18424   */\n      0x00\n        /* \"#utility.yul\":18458:18460   */\n      0x20\n        /* \"#utility.yul\":18447:18456   */\n      dup3\n        /* \"#utility.yul\":18443:18461   */\n      add\n        /* \"#utility.yul\":18435:18461   */\n      swap1\n      pop\n        /* \"#utility.yul\":18507:18516   */\n      dup2\n        /* \"#utility.yul\":18501:18505   */\n      dup2\n        /* \"#utility.yul\":18497:18517   */\n      sub\n        /* \"#utility.yul\":18493:18494   */\n      0x00\n        /* \"#utility.yul\":18482:18491   */\n      dup4\n        /* \"#utility.yul\":18478:18495   */\n      add\n        /* \"#utility.yul\":18471:18518   */\n      mstore\n        /* \"#utility.yul\":18535:18613   */\n      tag_469\n        /* \"#utility.yul\":18608:18612   */\n      dup2\n        /* \"#utility.yul\":18599:18605   */\n      dup5\n        /* \"#utility.yul\":18535:18613   */\n      tag_390\n      jump\t// in\n    tag_469:\n        /* \"#utility.yul\":18527:18613   */\n      swap1\n      pop\n        /* \"#utility.yul\":18307:18620   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18626:19045   */\n    tag_194:\n        /* \"#utility.yul\":18792:18796   */\n      0x00\n        /* \"#utility.yul\":18830:18832   */\n      0x20\n        /* \"#utility.yul\":18819:18828   */\n      dup3\n        /* \"#utility.yul\":18815:18833   */\n      add\n        /* \"#utility.yul\":18807:18833   */\n      swap1\n      pop\n        /* \"#utility.yul\":18879:18888   */\n      dup2\n        /* \"#utility.yul\":18873:18877   */\n      dup2\n        /* \"#utility.yul\":18869:18889   */\n      sub\n        /* \"#utility.yul\":18865:18866   */\n      0x00\n        /* \"#utility.yul\":18854:18863   */\n      dup4\n        /* \"#utility.yul\":18850:18867   */\n      add\n        /* \"#utility.yul\":18843:18890   */\n      mstore\n        /* \"#utility.yul\":18907:19038   */\n      tag_471\n        /* \"#utility.yul\":19033:19037   */\n      dup2\n        /* \"#utility.yul\":18907:19038   */\n      tag_398\n      jump\t// in\n    tag_471:\n        /* \"#utility.yul\":18899:19038   */\n      swap1\n      pop\n        /* \"#utility.yul\":18626:19045   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19051:19470   */\n    tag_56:\n        /* \"#utility.yul\":19217:19221   */\n      0x00\n        /* \"#utility.yul\":19255:19257   */\n      0x20\n        /* \"#utility.yul\":19244:19253   */\n      dup3\n        /* \"#utility.yul\":19240:19258   */\n      add\n        /* \"#utility.yul\":19232:19258   */\n      swap1\n      pop\n        /* \"#utility.yul\":19304:19313   */\n      dup2\n        /* \"#utility.yul\":19298:19302   */\n      dup2\n        /* \"#utility.yul\":19294:19314   */\n      sub\n        /* \"#utility.yul\":19290:19291   */\n      0x00\n        /* \"#utility.yul\":19279:19288   */\n      dup4\n        /* \"#utility.yul\":19275:19292   */\n      add\n        /* \"#utility.yul\":19268:19315   */\n      mstore\n        /* \"#utility.yul\":19332:19463   */\n      tag_473\n        /* \"#utility.yul\":19458:19462   */\n      dup2\n        /* \"#utility.yul\":19332:19463   */\n      tag_403\n      jump\t// in\n    tag_473:\n        /* \"#utility.yul\":19324:19463   */\n      swap1\n      pop\n        /* \"#utility.yul\":19051:19470   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19476:19895   */\n    tag_77:\n        /* \"#utility.yul\":19642:19646   */\n      0x00\n        /* \"#utility.yul\":19680:19682   */\n      0x20\n        /* \"#utility.yul\":19669:19678   */\n      dup3\n        /* \"#utility.yul\":19665:19683   */\n      add\n        /* \"#utility.yul\":19657:19683   */\n      swap1\n      pop\n        /* \"#utility.yul\":19729:19738   */\n      dup2\n        /* \"#utility.yul\":19723:19727   */\n      dup2\n        /* \"#utility.yul\":19719:19739   */\n      sub\n        /* \"#utility.yul\":19715:19716   */\n      0x00\n        /* \"#utility.yul\":19704:19713   */\n      dup4\n        /* \"#utility.yul\":19700:19717   */\n      add\n        /* \"#utility.yul\":19693:19740   */\n      mstore\n        /* \"#utility.yul\":19757:19888   */\n      tag_475\n        /* \"#utility.yul\":19883:19887   */\n      dup2\n        /* \"#utility.yul\":19757:19888   */\n      tag_408\n      jump\t// in\n    tag_475:\n        /* \"#utility.yul\":19749:19888   */\n      swap1\n      pop\n        /* \"#utility.yul\":19476:19895   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19901:20320   */\n    tag_123:\n        /* \"#utility.yul\":20067:20071   */\n      0x00\n        /* \"#utility.yul\":20105:20107   */\n      0x20\n        /* \"#utility.yul\":20094:20103   */\n      dup3\n        /* \"#utility.yul\":20090:20108   */\n      add\n        /* \"#utility.yul\":20082:20108   */\n      swap1\n      pop\n        /* \"#utility.yul\":20154:20163   */\n      dup2\n        /* \"#utility.yul\":20148:20152   */\n      dup2\n        /* \"#utility.yul\":20144:20164   */\n      sub\n        /* \"#utility.yul\":20140:20141   */\n      0x00\n        /* \"#utility.yul\":20129:20138   */\n      dup4\n        /* \"#utility.yul\":20125:20142   */\n      add\n        /* \"#utility.yul\":20118:20165   */\n      mstore\n        /* \"#utility.yul\":20182:20313   */\n      tag_477\n        /* \"#utility.yul\":20308:20312   */\n      dup2\n        /* \"#utility.yul\":20182:20313   */\n      tag_413\n      jump\t// in\n    tag_477:\n        /* \"#utility.yul\":20174:20313   */\n      swap1\n      pop\n        /* \"#utility.yul\":19901:20320   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20326:20745   */\n    tag_136:\n        /* \"#utility.yul\":20492:20496   */\n      0x00\n        /* \"#utility.yul\":20530:20532   */\n      0x20\n        /* \"#utility.yul\":20519:20528   */\n      dup3\n        /* \"#utility.yul\":20515:20533   */\n      add\n        /* \"#utility.yul\":20507:20533   */\n      swap1\n      pop\n        /* \"#utility.yul\":20579:20588   */\n      dup2\n        /* \"#utility.yul\":20573:20577   */\n      dup2\n        /* \"#utility.yul\":20569:20589   */\n      sub\n        /* \"#utility.yul\":20565:20566   */\n      0x00\n        /* \"#utility.yul\":20554:20563   */\n      dup4\n        /* \"#utility.yul\":20550:20567   */\n      add\n        /* \"#utility.yul\":20543:20590   */\n      mstore\n        /* \"#utility.yul\":20607:20738   */\n      tag_479\n        /* \"#utility.yul\":20733:20737   */\n      dup2\n        /* \"#utility.yul\":20607:20738   */\n      tag_418\n      jump\t// in\n    tag_479:\n        /* \"#utility.yul\":20599:20738   */\n      swap1\n      pop\n        /* \"#utility.yul\":20326:20745   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20751:21170   */\n    tag_149:\n        /* \"#utility.yul\":20917:20921   */\n      0x00\n        /* \"#utility.yul\":20955:20957   */\n      0x20\n        /* \"#utility.yul\":20944:20953   */\n      dup3\n        /* \"#utility.yul\":20940:20958   */\n      add\n        /* \"#utility.yul\":20932:20958   */\n      swap1\n      pop\n        /* \"#utility.yul\":21004:21013   */\n      dup2\n        /* \"#utility.yul\":20998:21002   */\n      dup2\n        /* \"#utility.yul\":20994:21014   */\n      sub\n        /* \"#utility.yul\":20990:20991   */\n      0x00\n        /* \"#utility.yul\":20979:20988   */\n      dup4\n        /* \"#utility.yul\":20975:20992   */\n      add\n        /* \"#utility.yul\":20968:21015   */\n      mstore\n        /* \"#utility.yul\":21032:21163   */\n      tag_481\n        /* \"#utility.yul\":21158:21162   */\n      dup2\n        /* \"#utility.yul\":21032:21163   */\n      tag_423\n      jump\t// in\n    tag_481:\n        /* \"#utility.yul\":21024:21163   */\n      swap1\n      pop\n        /* \"#utility.yul\":20751:21170   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21176:21595   */\n    tag_83:\n        /* \"#utility.yul\":21342:21346   */\n      0x00\n        /* \"#utility.yul\":21380:21382   */\n      0x20\n        /* \"#utility.yul\":21369:21378   */\n      dup3\n        /* \"#utility.yul\":21365:21383   */\n      add\n        /* \"#utility.yul\":21357:21383   */\n      swap1\n      pop\n        /* \"#utility.yul\":21429:21438   */\n      dup2\n        /* \"#utility.yul\":21423:21427   */\n      dup2\n        /* \"#utility.yul\":21419:21439   */\n      sub\n        /* \"#utility.yul\":21415:21416   */\n      0x00\n        /* \"#utility.yul\":21404:21413   */\n      dup4\n        /* \"#utility.yul\":21400:21417   */\n      add\n        /* \"#utility.yul\":21393:21440   */\n      mstore\n        /* \"#utility.yul\":21457:21588   */\n      tag_483\n        /* \"#utility.yul\":21583:21587   */\n      dup2\n        /* \"#utility.yul\":21457:21588   */\n      tag_428\n      jump\t// in\n    tag_483:\n        /* \"#utility.yul\":21449:21588   */\n      swap1\n      pop\n        /* \"#utility.yul\":21176:21595   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21601:22020   */\n    tag_120:\n        /* \"#utility.yul\":21767:21771   */\n      0x00\n        /* \"#utility.yul\":21805:21807   */\n      0x20\n        /* \"#utility.yul\":21794:21803   */\n      dup3\n        /* \"#utility.yul\":21790:21808   */\n      add\n        /* \"#utility.yul\":21782:21808   */\n      swap1\n      pop\n        /* \"#utility.yul\":21854:21863   */\n      dup2\n        /* \"#utility.yul\":21848:21852   */\n      dup2\n        /* \"#utility.yul\":21844:21864   */\n      sub\n        /* \"#utility.yul\":21840:21841   */\n      0x00\n        /* \"#utility.yul\":21829:21838   */\n      dup4\n        /* \"#utility.yul\":21825:21842   */\n      add\n        /* \"#utility.yul\":21818:21865   */\n      mstore\n        /* \"#utility.yul\":21882:22013   */\n      tag_485\n        /* \"#utility.yul\":22008:22012   */\n      dup2\n        /* \"#utility.yul\":21882:22013   */\n      tag_433\n      jump\t// in\n    tag_485:\n        /* \"#utility.yul\":21874:22013   */\n      swap1\n      pop\n        /* \"#utility.yul\":21601:22020   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22026:22445   */\n    tag_190:\n        /* \"#utility.yul\":22192:22196   */\n      0x00\n        /* \"#utility.yul\":22230:22232   */\n      0x20\n        /* \"#utility.yul\":22219:22228   */\n      dup3\n        /* \"#utility.yul\":22215:22233   */\n      add\n        /* \"#utility.yul\":22207:22233   */\n      swap1\n      pop\n        /* \"#utility.yul\":22279:22288   */\n      dup2\n        /* \"#utility.yul\":22273:22277   */\n      dup2\n        /* \"#utility.yul\":22269:22289   */\n      sub\n        /* \"#utility.yul\":22265:22266   */\n      0x00\n        /* \"#utility.yul\":22254:22263   */\n      dup4\n        /* \"#utility.yul\":22250:22267   */\n      add\n        /* \"#utility.yul\":22243:22290   */\n      mstore\n        /* \"#utility.yul\":22307:22438   */\n      tag_487\n        /* \"#utility.yul\":22433:22437   */\n      dup2\n        /* \"#utility.yul\":22307:22438   */\n      tag_438\n      jump\t// in\n    tag_487:\n        /* \"#utility.yul\":22299:22438   */\n      swap1\n      pop\n        /* \"#utility.yul\":22026:22445   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22451:22673   */\n    tag_17:\n        /* \"#utility.yul\":22544:22548   */\n      0x00\n        /* \"#utility.yul\":22582:22584   */\n      0x20\n        /* \"#utility.yul\":22571:22580   */\n      dup3\n        /* \"#utility.yul\":22567:22585   */\n      add\n        /* \"#utility.yul\":22559:22585   */\n      swap1\n      pop\n        /* \"#utility.yul\":22595:22666   */\n      tag_489\n        /* \"#utility.yul\":22663:22664   */\n      0x00\n        /* \"#utility.yul\":22652:22661   */\n      dup4\n        /* \"#utility.yul\":22648:22665   */\n      add\n        /* \"#utility.yul\":22639:22645   */\n      dup5\n        /* \"#utility.yul\":22595:22666   */\n      tag_446\n      jump\t// in\n    tag_489:\n        /* \"#utility.yul\":22451:22673   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22679:23011   */\n    tag_163:\n        /* \"#utility.yul\":22800:22804   */\n      0x00\n        /* \"#utility.yul\":22838:22840   */\n      0x40\n        /* \"#utility.yul\":22827:22836   */\n      dup3\n        /* \"#utility.yul\":22823:22841   */\n      add\n        /* \"#utility.yul\":22815:22841   */\n      swap1\n      pop\n        /* \"#utility.yul\":22851:22922   */\n      tag_491\n        /* \"#utility.yul\":22919:22920   */\n      0x00\n        /* \"#utility.yul\":22908:22917   */\n      dup4\n        /* \"#utility.yul\":22904:22921   */\n      add\n        /* \"#utility.yul\":22895:22901   */\n      dup6\n        /* \"#utility.yul\":22851:22922   */\n      tag_446\n      jump\t// in\n    tag_491:\n        /* \"#utility.yul\":22932:23004   */\n      tag_492\n        /* \"#utility.yul\":23000:23002   */\n      0x20\n        /* \"#utility.yul\":22989:22998   */\n      dup4\n        /* \"#utility.yul\":22985:23003   */\n      add\n        /* \"#utility.yul\":22976:22982   */\n      dup5\n        /* \"#utility.yul\":22932:23004   */\n      tag_446\n      jump\t// in\n    tag_492:\n        /* \"#utility.yul\":22679:23011   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23017:23146   */\n    tag_228:\n        /* \"#utility.yul\":23051:23057   */\n      0x00\n        /* \"#utility.yul\":23078:23098   */\n      tag_494\n      tag_495\n      jump\t// in\n    tag_494:\n        /* \"#utility.yul\":23068:23098   */\n      swap1\n      pop\n        /* \"#utility.yul\":23107:23140   */\n      tag_496\n        /* \"#utility.yul\":23135:23139   */\n      dup3\n        /* \"#utility.yul\":23127:23133   */\n      dup3\n        /* \"#utility.yul\":23107:23140   */\n      tag_497\n      jump\t// in\n    tag_496:\n        /* \"#utility.yul\":23017:23146   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23152:23227   */\n    tag_495:\n        /* \"#utility.yul\":23185:23191   */\n      0x00\n        /* \"#utility.yul\":23218:23220   */\n      0x40\n        /* \"#utility.yul\":23212:23221   */\n      mload\n        /* \"#utility.yul\":23202:23221   */\n      swap1\n      pop\n        /* \"#utility.yul\":23152:23227   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":23233:23544   */\n    tag_227:\n        /* \"#utility.yul\":23310:23314   */\n      0x00\n        /* \"#utility.yul\":23400:23418   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":23392:23398   */\n      dup3\n        /* \"#utility.yul\":23389:23419   */\n      gt\n        /* \"#utility.yul\":23386:23442   */\n      iszero\n      tag_500\n      jumpi\n        /* \"#utility.yul\":23422:23440   */\n      tag_501\n      tag_86\n      jump\t// in\n    tag_501:\n        /* \"#utility.yul\":23386:23442   */\n    tag_500:\n        /* \"#utility.yul\":23472:23476   */\n      0x20\n        /* \"#utility.yul\":23464:23470   */\n      dup3\n        /* \"#utility.yul\":23460:23477   */\n      mul\n        /* \"#utility.yul\":23452:23477   */\n      swap1\n      pop\n        /* \"#utility.yul\":23532:23536   */\n      0x20\n        /* \"#utility.yul\":23526:23530   */\n      dup2\n        /* \"#utility.yul\":23522:23537   */\n      add\n        /* \"#utility.yul\":23514:23537   */\n      swap1\n      pop\n        /* \"#utility.yul\":23233:23544   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23550:23861   */\n    tag_241:\n        /* \"#utility.yul\":23627:23631   */\n      0x00\n        /* \"#utility.yul\":23717:23735   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":23709:23715   */\n      dup3\n        /* \"#utility.yul\":23706:23736   */\n      gt\n        /* \"#utility.yul\":23703:23759   */\n      iszero\n      tag_503\n      jumpi\n        /* \"#utility.yul\":23739:23757   */\n      tag_504\n      tag_86\n      jump\t// in\n    tag_504:\n        /* \"#utility.yul\":23703:23759   */\n    tag_503:\n        /* \"#utility.yul\":23789:23793   */\n      0x20\n        /* \"#utility.yul\":23781:23787   */\n      dup3\n        /* \"#utility.yul\":23777:23794   */\n      mul\n        /* \"#utility.yul\":23769:23794   */\n      swap1\n      pop\n        /* \"#utility.yul\":23849:23853   */\n      0x20\n        /* \"#utility.yul\":23843:23847   */\n      dup2\n        /* \"#utility.yul\":23839:23854   */\n      add\n        /* \"#utility.yul\":23831:23854   */\n      swap1\n      pop\n        /* \"#utility.yul\":23550:23861   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23867:24174   */\n    tag_253:\n        /* \"#utility.yul\":23928:23932   */\n      0x00\n        /* \"#utility.yul\":24018:24036   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":24010:24016   */\n      dup3\n        /* \"#utility.yul\":24007:24037   */\n      gt\n        /* \"#utility.yul\":24004:24060   */\n      iszero\n      tag_506\n      jumpi\n        /* \"#utility.yul\":24040:24058   */\n      tag_507\n      tag_86\n      jump\t// in\n    tag_507:\n        /* \"#utility.yul\":24004:24060   */\n    tag_506:\n        /* \"#utility.yul\":24078:24107   */\n      tag_508\n        /* \"#utility.yul\":24100:24106   */\n      dup3\n        /* \"#utility.yul\":24078:24107   */\n      tag_389\n      jump\t// in\n    tag_508:\n        /* \"#utility.yul\":24070:24107   */\n      swap1\n      pop\n        /* \"#utility.yul\":24162:24166   */\n      0x20\n        /* \"#utility.yul\":24156:24160   */\n      dup2\n        /* \"#utility.yul\":24152:24167   */\n      add\n        /* \"#utility.yul\":24144:24167   */\n      swap1\n      pop\n        /* \"#utility.yul\":23867:24174   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24180:24312   */\n    tag_369:\n        /* \"#utility.yul\":24247:24251   */\n      0x00\n        /* \"#utility.yul\":24270:24273   */\n      dup2\n        /* \"#utility.yul\":24262:24273   */\n      swap1\n      pop\n        /* \"#utility.yul\":24300:24304   */\n      0x20\n        /* \"#utility.yul\":24295:24298   */\n      dup3\n        /* \"#utility.yul\":24291:24305   */\n      add\n        /* \"#utility.yul\":24283:24305   */\n      swap1\n      pop\n        /* \"#utility.yul\":24180:24312   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24318:24432   */\n    tag_365:\n        /* \"#utility.yul\":24385:24391   */\n      0x00\n        /* \"#utility.yul\":24419:24424   */\n      dup2\n        /* \"#utility.yul\":24413:24425   */\n      mload\n        /* \"#utility.yul\":24403:24425   */\n      swap1\n      pop\n        /* \"#utility.yul\":24318:24432   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24438:24536   */\n    tag_383:\n        /* \"#utility.yul\":24489:24495   */\n      0x00\n        /* \"#utility.yul\":24523:24528   */\n      dup2\n        /* \"#utility.yul\":24517:24529   */\n      mload\n        /* \"#utility.yul\":24507:24529   */\n      swap1\n      pop\n        /* \"#utility.yul\":24438:24536   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24542:24641   */\n    tag_393:\n        /* \"#utility.yul\":24594:24600   */\n      0x00\n        /* \"#utility.yul\":24628:24633   */\n      dup2\n        /* \"#utility.yul\":24622:24634   */\n      mload\n        /* \"#utility.yul\":24612:24634   */\n      swap1\n      pop\n        /* \"#utility.yul\":24542:24641   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24647:24760   */\n    tag_375:\n        /* \"#utility.yul\":24717:24721   */\n      0x00\n        /* \"#utility.yul\":24749:24753   */\n      0x20\n        /* \"#utility.yul\":24744:24747   */\n      dup3\n        /* \"#utility.yul\":24740:24754   */\n      add\n        /* \"#utility.yul\":24732:24754   */\n      swap1\n      pop\n        /* \"#utility.yul\":24647:24760   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24766:24950   */\n    tag_367:\n        /* \"#utility.yul\":24865:24876   */\n      0x00\n        /* \"#utility.yul\":24899:24905   */\n      dup3\n        /* \"#utility.yul\":24894:24897   */\n      dup3\n        /* \"#utility.yul\":24887:24906   */\n      mstore\n        /* \"#utility.yul\":24939:24943   */\n      0x20\n        /* \"#utility.yul\":24934:24937   */\n      dup3\n        /* \"#utility.yul\":24930:24944   */\n      add\n        /* \"#utility.yul\":24915:24944   */\n      swap1\n      pop\n        /* \"#utility.yul\":24766:24950   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24956:25124   */\n    tag_385:\n        /* \"#utility.yul\":25039:25050   */\n      0x00\n        /* \"#utility.yul\":25073:25079   */\n      dup3\n        /* \"#utility.yul\":25068:25071   */\n      dup3\n        /* \"#utility.yul\":25061:25080   */\n      mstore\n        /* \"#utility.yul\":25113:25117   */\n      0x20\n        /* \"#utility.yul\":25108:25111   */\n      dup3\n        /* \"#utility.yul\":25104:25118   */\n      add\n        /* \"#utility.yul\":25089:25118   */\n      swap1\n      pop\n        /* \"#utility.yul\":24956:25124   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25130:25299   */\n    tag_395:\n        /* \"#utility.yul\":25214:25225   */\n      0x00\n        /* \"#utility.yul\":25248:25254   */\n      dup3\n        /* \"#utility.yul\":25243:25246   */\n      dup3\n        /* \"#utility.yul\":25236:25255   */\n      mstore\n        /* \"#utility.yul\":25288:25292   */\n      0x20\n        /* \"#utility.yul\":25283:25286   */\n      dup3\n        /* \"#utility.yul\":25279:25293   */\n      add\n        /* \"#utility.yul\":25264:25293   */\n      swap1\n      pop\n        /* \"#utility.yul\":25130:25299   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25305:25610   */\n    tag_138:\n        /* \"#utility.yul\":25345:25348   */\n      0x00\n        /* \"#utility.yul\":25364:25384   */\n      tag_518\n        /* \"#utility.yul\":25382:25383   */\n      dup3\n        /* \"#utility.yul\":25364:25384   */\n      tag_445\n      jump\t// in\n    tag_518:\n        /* \"#utility.yul\":25359:25384   */\n      swap2\n      pop\n        /* \"#utility.yul\":25398:25418   */\n      tag_519\n        /* \"#utility.yul\":25416:25417   */\n      dup4\n        /* \"#utility.yul\":25398:25418   */\n      tag_445\n      jump\t// in\n    tag_519:\n        /* \"#utility.yul\":25393:25418   */\n      swap3\n      pop\n        /* \"#utility.yul\":25552:25553   */\n      dup3\n        /* \"#utility.yul\":25484:25550   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":25480:25554   */\n      sub\n        /* \"#utility.yul\":25477:25478   */\n      dup3\n        /* \"#utility.yul\":25474:25555   */\n      gt\n        /* \"#utility.yul\":25471:25578   */\n      iszero\n      tag_520\n      jumpi\n        /* \"#utility.yul\":25558:25576   */\n      tag_521\n      tag_522\n      jump\t// in\n    tag_521:\n        /* \"#utility.yul\":25471:25578   */\n    tag_520:\n        /* \"#utility.yul\":25602:25603   */\n      dup3\n        /* \"#utility.yul\":25599:25600   */\n      dup3\n        /* \"#utility.yul\":25595:25604   */\n      add\n        /* \"#utility.yul\":25588:25604   */\n      swap1\n      pop\n        /* \"#utility.yul\":25305:25610   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25616:25712   */\n    tag_361:\n        /* \"#utility.yul\":25653:25660   */\n      0x00\n        /* \"#utility.yul\":25682:25706   */\n      tag_524\n        /* \"#utility.yul\":25700:25705   */\n      dup3\n        /* \"#utility.yul\":25682:25706   */\n      tag_525\n      jump\t// in\n    tag_524:\n        /* \"#utility.yul\":25671:25706   */\n      swap1\n      pop\n        /* \"#utility.yul\":25616:25712   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25718:25808   */\n    tag_379:\n        /* \"#utility.yul\":25752:25759   */\n      0x00\n        /* \"#utility.yul\":25795:25800   */\n      dup2\n        /* \"#utility.yul\":25788:25801   */\n      iszero\n        /* \"#utility.yul\":25781:25802   */\n      iszero\n        /* \"#utility.yul\":25770:25802   */\n      swap1\n      pop\n        /* \"#utility.yul\":25718:25808   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25814:25963   */\n    tag_527:\n        /* \"#utility.yul\":25850:25857   */\n      0x00\n        /* \"#utility.yul\":25890:25956   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":25883:25888   */\n      dup3\n        /* \"#utility.yul\":25879:25957   */\n      and\n        /* \"#utility.yul\":25868:25957   */\n      swap1\n      pop\n        /* \"#utility.yul\":25814:25963   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25969:26095   */\n    tag_525:\n        /* \"#utility.yul\":26006:26013   */\n      0x00\n        /* \"#utility.yul\":26046:26088   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":26039:26044   */\n      dup3\n        /* \"#utility.yul\":26035:26089   */\n      and\n        /* \"#utility.yul\":26024:26089   */\n      swap1\n      pop\n        /* \"#utility.yul\":25969:26095   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26101:26178   */\n    tag_445:\n        /* \"#utility.yul\":26138:26145   */\n      0x00\n        /* \"#utility.yul\":26167:26172   */\n      dup2\n        /* \"#utility.yul\":26156:26172   */\n      swap1\n      pop\n        /* \"#utility.yul\":26101:26178   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26184:26338   */\n    tag_258:\n        /* \"#utility.yul\":26268:26274   */\n      dup3\n        /* \"#utility.yul\":26263:26266   */\n      dup2\n        /* \"#utility.yul\":26258:26261   */\n      dup4\n        /* \"#utility.yul\":26245:26275   */\n      calldatacopy\n        /* \"#utility.yul\":26330:26331   */\n      0x00\n        /* \"#utility.yul\":26321:26327   */\n      dup4\n        /* \"#utility.yul\":26316:26319   */\n      dup4\n        /* \"#utility.yul\":26312:26328   */\n      add\n        /* \"#utility.yul\":26305:26332   */\n      mstore\n        /* \"#utility.yul\":26184:26338   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26344:26651   */\n    tag_387:\n        /* \"#utility.yul\":26412:26413   */\n      0x00\n        /* \"#utility.yul\":26422:26535   */\n    tag_533:\n        /* \"#utility.yul\":26436:26442   */\n      dup4\n        /* \"#utility.yul\":26433:26434   */\n      dup2\n        /* \"#utility.yul\":26430:26443   */\n      lt\n        /* \"#utility.yul\":26422:26535   */\n      iszero\n      tag_535\n      jumpi\n        /* \"#utility.yul\":26521:26522   */\n      dup1\n        /* \"#utility.yul\":26516:26519   */\n      dup3\n        /* \"#utility.yul\":26512:26523   */\n      add\n        /* \"#utility.yul\":26506:26524   */\n      mload\n        /* \"#utility.yul\":26502:26503   */\n      dup2\n        /* \"#utility.yul\":26497:26500   */\n      dup5\n        /* \"#utility.yul\":26493:26504   */\n      add\n        /* \"#utility.yul\":26486:26525   */\n      mstore\n        /* \"#utility.yul\":26458:26460   */\n      0x20\n        /* \"#utility.yul\":26455:26456   */\n      dup2\n        /* \"#utility.yul\":26451:26461   */\n      add\n        /* \"#utility.yul\":26446:26461   */\n      swap1\n      pop\n        /* \"#utility.yul\":26422:26535   */\n      jump(tag_533)\n    tag_535:\n        /* \"#utility.yul\":26553:26559   */\n      dup4\n        /* \"#utility.yul\":26550:26551   */\n      dup2\n        /* \"#utility.yul\":26547:26560   */\n      gt\n        /* \"#utility.yul\":26544:26645   */\n      iszero\n      tag_536\n      jumpi\n        /* \"#utility.yul\":26633:26634   */\n      0x00\n        /* \"#utility.yul\":26624:26630   */\n      dup5\n        /* \"#utility.yul\":26619:26622   */\n      dup5\n        /* \"#utility.yul\":26615:26631   */\n      add\n        /* \"#utility.yul\":26608:26635   */\n      mstore\n        /* \"#utility.yul\":26544:26645   */\n    tag_536:\n        /* \"#utility.yul\":26393:26651   */\n      pop\n        /* \"#utility.yul\":26344:26651   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26657:26977   */\n    tag_64:\n        /* \"#utility.yul\":26701:26707   */\n      0x00\n        /* \"#utility.yul\":26738:26739   */\n      0x02\n        /* \"#utility.yul\":26732:26736   */\n      dup3\n        /* \"#utility.yul\":26728:26740   */\n      div\n        /* \"#utility.yul\":26718:26740   */\n      swap1\n      pop\n        /* \"#utility.yul\":26785:26786   */\n      0x01\n        /* \"#utility.yul\":26779:26783   */\n      dup3\n        /* \"#utility.yul\":26775:26787   */\n      and\n        /* \"#utility.yul\":26806:26824   */\n      dup1\n        /* \"#utility.yul\":26796:26877   */\n      tag_538\n      jumpi\n        /* \"#utility.yul\":26862:26866   */\n      0x7f\n        /* \"#utility.yul\":26854:26860   */\n      dup3\n        /* \"#utility.yul\":26850:26867   */\n      and\n        /* \"#utility.yul\":26840:26867   */\n      swap2\n      pop\n        /* \"#utility.yul\":26796:26877   */\n    tag_538:\n        /* \"#utility.yul\":26924:26926   */\n      0x20\n        /* \"#utility.yul\":26916:26922   */\n      dup3\n        /* \"#utility.yul\":26913:26927   */\n      lt\n        /* \"#utility.yul\":26893:26911   */\n      dup2\n        /* \"#utility.yul\":26890:26928   */\n      eq\n        /* \"#utility.yul\":26887:26971   */\n      iszero\n      tag_539\n      jumpi\n        /* \"#utility.yul\":26943:26961   */\n      tag_540\n      tag_541\n      jump\t// in\n    tag_540:\n        /* \"#utility.yul\":26887:26971   */\n    tag_539:\n        /* \"#utility.yul\":26708:26977   */\n      pop\n        /* \"#utility.yul\":26657:26977   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26983:27264   */\n    tag_497:\n        /* \"#utility.yul\":27066:27093   */\n      tag_543\n        /* \"#utility.yul\":27088:27092   */\n      dup3\n        /* \"#utility.yul\":27066:27093   */\n      tag_389\n      jump\t// in\n    tag_543:\n        /* \"#utility.yul\":27058:27064   */\n      dup2\n        /* \"#utility.yul\":27054:27094   */\n      add\n        /* \"#utility.yul\":27196:27202   */\n      dup2\n        /* \"#utility.yul\":27184:27194   */\n      dup2\n        /* \"#utility.yul\":27181:27203   */\n      lt\n        /* \"#utility.yul\":27160:27178   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":27148:27158   */\n      dup3\n        /* \"#utility.yul\":27145:27179   */\n      gt\n        /* \"#utility.yul\":27142:27204   */\n      or\n        /* \"#utility.yul\":27139:27227   */\n      iszero\n      tag_544\n      jumpi\n        /* \"#utility.yul\":27207:27225   */\n      tag_545\n      tag_86\n      jump\t// in\n    tag_545:\n        /* \"#utility.yul\":27139:27227   */\n    tag_544:\n        /* \"#utility.yul\":27247:27257   */\n      dup1\n        /* \"#utility.yul\":27243:27245   */\n      0x40\n        /* \"#utility.yul\":27236:27258   */\n      mstore\n        /* \"#utility.yul\":27026:27264   */\n      pop\n        /* \"#utility.yul\":26983:27264   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27270:27503   */\n    tag_100:\n        /* \"#utility.yul\":27309:27312   */\n      0x00\n        /* \"#utility.yul\":27332:27356   */\n      tag_547\n        /* \"#utility.yul\":27350:27355   */\n      dup3\n        /* \"#utility.yul\":27332:27356   */\n      tag_445\n      jump\t// in\n    tag_547:\n        /* \"#utility.yul\":27323:27356   */\n      swap2\n      pop\n        /* \"#utility.yul\":27378:27444   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":27371:27376   */\n      dup3\n        /* \"#utility.yul\":27368:27445   */\n      eq\n        /* \"#utility.yul\":27365:27468   */\n      iszero\n      tag_548\n      jumpi\n        /* \"#utility.yul\":27448:27466   */\n      tag_549\n      tag_522\n      jump\t// in\n    tag_549:\n        /* \"#utility.yul\":27365:27468   */\n    tag_548:\n        /* \"#utility.yul\":27495:27496   */\n      0x01\n        /* \"#utility.yul\":27488:27493   */\n      dup3\n        /* \"#utility.yul\":27484:27497   */\n      add\n        /* \"#utility.yul\":27477:27497   */\n      swap1\n      pop\n        /* \"#utility.yul\":27270:27503   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27509:27689   */\n    tag_522:\n        /* \"#utility.yul\":27557:27634   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":27554:27555   */\n      0x00\n        /* \"#utility.yul\":27547:27635   */\n      mstore\n        /* \"#utility.yul\":27654:27658   */\n      0x11\n        /* \"#utility.yul\":27651:27652   */\n      0x04\n        /* \"#utility.yul\":27644:27659   */\n      mstore\n        /* \"#utility.yul\":27678:27682   */\n      0x24\n        /* \"#utility.yul\":27675:27676   */\n      0x00\n        /* \"#utility.yul\":27668:27683   */\n      revert\n        /* \"#utility.yul\":27695:27875   */\n    tag_541:\n        /* \"#utility.yul\":27743:27820   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":27740:27741   */\n      0x00\n        /* \"#utility.yul\":27733:27821   */\n      mstore\n        /* \"#utility.yul\":27840:27844   */\n      0x22\n        /* \"#utility.yul\":27837:27838   */\n      0x04\n        /* \"#utility.yul\":27830:27845   */\n      mstore\n        /* \"#utility.yul\":27864:27868   */\n      0x24\n        /* \"#utility.yul\":27861:27862   */\n      0x00\n        /* \"#utility.yul\":27854:27869   */\n      revert\n        /* \"#utility.yul\":27881:28061   */\n    tag_94:\n        /* \"#utility.yul\":27929:28006   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":27926:27927   */\n      0x00\n        /* \"#utility.yul\":27919:28007   */\n      mstore\n        /* \"#utility.yul\":28026:28030   */\n      0x32\n        /* \"#utility.yul\":28023:28024   */\n      0x04\n        /* \"#utility.yul\":28016:28031   */\n      mstore\n        /* \"#utility.yul\":28050:28054   */\n      0x24\n        /* \"#utility.yul\":28047:28048   */\n      0x00\n        /* \"#utility.yul\":28040:28055   */\n      revert\n        /* \"#utility.yul\":28067:28247   */\n    tag_86:\n        /* \"#utility.yul\":28115:28192   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":28112:28113   */\n      0x00\n        /* \"#utility.yul\":28105:28193   */\n      mstore\n        /* \"#utility.yul\":28212:28216   */\n      0x41\n        /* \"#utility.yul\":28209:28210   */\n      0x04\n        /* \"#utility.yul\":28202:28217   */\n      mstore\n        /* \"#utility.yul\":28236:28240   */\n      0x24\n        /* \"#utility.yul\":28233:28234   */\n      0x00\n        /* \"#utility.yul\":28226:28241   */\n      revert\n        /* \"#utility.yul\":28253:28436   */\n    tag_184:\n        /* \"#utility.yul\":28288:28291   */\n      0x00\n        /* \"#utility.yul\":28326:28327   */\n      0x03\n        /* \"#utility.yul\":28308:28324   */\n      returndatasize\n        /* \"#utility.yul\":28305:28328   */\n      gt\n        /* \"#utility.yul\":28302:28430   */\n      iszero\n      tag_555\n      jumpi\n        /* \"#utility.yul\":28364:28365   */\n      0x04\n        /* \"#utility.yul\":28361:28362   */\n      0x00\n        /* \"#utility.yul\":28358:28359   */\n      dup1\n        /* \"#utility.yul\":28343:28366   */\n      returndatacopy\n        /* \"#utility.yul\":28386:28420   */\n      tag_556\n        /* \"#utility.yul\":28417:28418   */\n      0x00\n        /* \"#utility.yul\":28411:28419   */\n      mload\n        /* \"#utility.yul\":28386:28420   */\n      tag_557\n      jump\t// in\n    tag_556:\n        /* \"#utility.yul\":28379:28420   */\n      swap1\n      pop\n        /* \"#utility.yul\":28302:28430   */\n    tag_555:\n        /* \"#utility.yul\":28253:28436   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":28442:28559   */\n    tag_266:\n        /* \"#utility.yul\":28551:28552   */\n      0x00\n        /* \"#utility.yul\":28548:28549   */\n      dup1\n        /* \"#utility.yul\":28541:28553   */\n      revert\n        /* \"#utility.yul\":28565:28682   */\n    tag_231:\n        /* \"#utility.yul\":28674:28675   */\n      0x00\n        /* \"#utility.yul\":28671:28672   */\n      dup1\n        /* \"#utility.yul\":28664:28676   */\n      revert\n        /* \"#utility.yul\":28688:28805   */\n    tag_256:\n        /* \"#utility.yul\":28797:28798   */\n      0x00\n        /* \"#utility.yul\":28794:28795   */\n      dup1\n        /* \"#utility.yul\":28787:28799   */\n      revert\n        /* \"#utility.yul\":28811:28928   */\n    tag_305:\n        /* \"#utility.yul\":28920:28921   */\n      0x00\n        /* \"#utility.yul\":28917:28918   */\n      dup1\n        /* \"#utility.yul\":28910:28922   */\n      revert\n        /* \"#utility.yul\":28934:29051   */\n    tag_295:\n        /* \"#utility.yul\":29043:29044   */\n      0x00\n        /* \"#utility.yul\":29040:29041   */\n      dup1\n        /* \"#utility.yul\":29033:29045   */\n      revert\n        /* \"#utility.yul\":29057:29159   */\n    tag_389:\n        /* \"#utility.yul\":29098:29104   */\n      0x00\n        /* \"#utility.yul\":29149:29151   */\n      0x1f\n        /* \"#utility.yul\":29145:29152   */\n      not\n        /* \"#utility.yul\":29140:29142   */\n      0x1f\n        /* \"#utility.yul\":29133:29138   */\n      dup4\n        /* \"#utility.yul\":29129:29143   */\n      add\n        /* \"#utility.yul\":29125:29153   */\n      and\n        /* \"#utility.yul\":29115:29153   */\n      swap1\n      pop\n        /* \"#utility.yul\":29057:29159   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29165:29271   */\n    tag_557:\n        /* \"#utility.yul\":29209:29217   */\n      0x00\n        /* \"#utility.yul\":29258:29263   */\n      dup2\n        /* \"#utility.yul\":29253:29256   */\n      0xe0\n        /* \"#utility.yul\":29249:29264   */\n      shr\n        /* \"#utility.yul\":29228:29264   */\n      swap1\n      pop\n        /* \"#utility.yul\":29165:29271   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29277:29504   */\n    tag_402:\n        /* \"#utility.yul\":29417:29451   */\n      0x455243313135353a204552433131353552656365697665722072656a65637465\n        /* \"#utility.yul\":29413:29414   */\n      0x00\n        /* \"#utility.yul\":29405:29411   */\n      dup3\n        /* \"#utility.yul\":29401:29415   */\n      add\n        /* \"#utility.yul\":29394:29452   */\n      mstore\n        /* \"#utility.yul\":29486:29496   */\n      0x6420746f6b656e73000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":29481:29483   */\n      0x20\n        /* \"#utility.yul\":29473:29479   */\n      dup3\n        /* \"#utility.yul\":29469:29484   */\n      add\n        /* \"#utility.yul\":29462:29497   */\n      mstore\n        /* \"#utility.yul\":29277:29504   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29510:29739   */\n    tag_407:\n        /* \"#utility.yul\":29650:29684   */\n      0x455243313135353a2061646472657373207a65726f206973206e6f7420612076\n        /* \"#utility.yul\":29646:29647   */\n      0x00\n        /* \"#utility.yul\":29638:29644   */\n      dup3\n        /* \"#utility.yul\":29634:29648   */\n      add\n        /* \"#utility.yul\":29627:29685   */\n      mstore\n        /* \"#utility.yul\":29719:29731   */\n      0x616c6964206f776e657200000000000000000000000000000000000000000000\n        /* \"#utility.yul\":29714:29716   */\n      0x20\n        /* \"#utility.yul\":29706:29712   */\n      dup3\n        /* \"#utility.yul\":29702:29717   */\n      add\n        /* \"#utility.yul\":29695:29732   */\n      mstore\n        /* \"#utility.yul\":29510:29739   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29745:29978   */\n    tag_412:\n        /* \"#utility.yul\":29885:29919   */\n      0x455243313135353a2063616c6c6572206973206e6f7420746f6b656e206f776e\n        /* \"#utility.yul\":29881:29882   */\n      0x00\n        /* \"#utility.yul\":29873:29879   */\n      dup3\n        /* \"#utility.yul\":29869:29883   */\n      add\n        /* \"#utility.yul\":29862:29920   */\n      mstore\n        /* \"#utility.yul\":29954:29970   */\n      0x6572206f7220617070726f766564000000000000000000000000000000000000\n        /* \"#utility.yul\":29949:29951   */\n      0x20\n        /* \"#utility.yul\":29941:29947   */\n      dup3\n        /* \"#utility.yul\":29937:29952   */\n      add\n        /* \"#utility.yul\":29930:29971   */\n      mstore\n        /* \"#utility.yul\":29745:29978   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29984:30208   */\n    tag_417:\n        /* \"#utility.yul\":30124:30158   */\n      0x455243313135353a207472616e7366657220746f20746865207a65726f206164\n        /* \"#utility.yul\":30120:30121   */\n      0x00\n        /* \"#utility.yul\":30112:30118   */\n      dup3\n        /* \"#utility.yul\":30108:30122   */\n      add\n        /* \"#utility.yul\":30101:30159   */\n      mstore\n        /* \"#utility.yul\":30193:30200   */\n      0x6472657373000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":30188:30190   */\n      0x20\n        /* \"#utility.yul\":30180:30186   */\n      dup3\n        /* \"#utility.yul\":30176:30191   */\n      add\n        /* \"#utility.yul\":30169:30201   */\n      mstore\n        /* \"#utility.yul\":29984:30208   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":30214:30443   */\n    tag_422:\n        /* \"#utility.yul\":30354:30388   */\n      0x455243313135353a20696e73756666696369656e742062616c616e636520666f\n        /* \"#utility.yul\":30350:30351   */\n      0x00\n        /* \"#utility.yul\":30342:30348   */\n      dup3\n        /* \"#utility.yul\":30338:30352   */\n      add\n        /* \"#utility.yul\":30331:30389   */\n      mstore\n        /* \"#utility.yul\":30423:30435   */\n      0x72207472616e7366657200000000000000000000000000000000000000000000\n        /* \"#utility.yul\":30418:30420   */\n      0x20\n        /* \"#utility.yul\":30410:30416   */\n      dup3\n        /* \"#utility.yul\":30406:30421   */\n      add\n        /* \"#utility.yul\":30399:30436   */\n      mstore\n        /* \"#utility.yul\":30214:30443   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":30449:30677   */\n    tag_427:\n        /* \"#utility.yul\":30589:30623   */\n      0x455243313135353a2073657474696e6720617070726f76616c20737461747573\n        /* \"#utility.yul\":30585:30586   */\n      0x00\n        /* \"#utility.yul\":30577:30583   */\n      dup3\n        /* \"#utility.yul\":30573:30587   */\n      add\n        /* \"#utility.yul\":30566:30624   */\n      mstore\n        /* \"#utility.yul\":30658:30669   */\n      0x20666f722073656c660000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":30653:30655   */\n      0x20\n        /* \"#utility.yul\":30645:30651   */\n      dup3\n        /* \"#utility.yul\":30641:30656   */\n      add\n        /* \"#utility.yul\":30634:30670   */\n      mstore\n        /* \"#utility.yul\":30449:30677   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":30683:30911   */\n    tag_432:\n        /* \"#utility.yul\":30823:30857   */\n      0x455243313135353a206163636f756e747320616e6420696473206c656e677468\n        /* \"#utility.yul\":30819:30820   */\n      0x00\n        /* \"#utility.yul\":30811:30817   */\n      dup3\n        /* \"#utility.yul\":30807:30821   */\n      add\n        /* \"#utility.yul\":30800:30858   */\n      mstore\n        /* \"#utility.yul\":30892:30903   */\n      0x206d69736d617463680000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":30887:30889   */\n      0x20\n        /* \"#utility.yul\":30879:30885   */\n      dup3\n        /* \"#utility.yul\":30875:30890   */\n      add\n        /* \"#utility.yul\":30868:30904   */\n      mstore\n        /* \"#utility.yul\":30683:30911   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":30917:31144   */\n    tag_437:\n        /* \"#utility.yul\":31057:31091   */\n      0x455243313135353a2069647320616e6420616d6f756e7473206c656e67746820\n        /* \"#utility.yul\":31053:31054   */\n      0x00\n        /* \"#utility.yul\":31045:31051   */\n      dup3\n        /* \"#utility.yul\":31041:31055   */\n      add\n        /* \"#utility.yul\":31034:31092   */\n      mstore\n        /* \"#utility.yul\":31126:31136   */\n      0x6d69736d61746368000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":31121:31123   */\n      0x20\n        /* \"#utility.yul\":31113:31119   */\n      dup3\n        /* \"#utility.yul\":31109:31124   */\n      add\n        /* \"#utility.yul\":31102:31137   */\n      mstore\n        /* \"#utility.yul\":30917:31144   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":31150:31389   */\n    tag_442:\n        /* \"#utility.yul\":31290:31324   */\n      0x455243313135353a207472616e7366657220746f206e6f6e2d45524331313535\n        /* \"#utility.yul\":31286:31287   */\n      0x00\n        /* \"#utility.yul\":31278:31284   */\n      dup3\n        /* \"#utility.yul\":31274:31288   */\n      add\n        /* \"#utility.yul\":31267:31325   */\n      mstore\n        /* \"#utility.yul\":31359:31381   */\n      0x526563656976657220696d706c656d656e746572000000000000000000000000\n        /* \"#utility.yul\":31354:31356   */\n      0x20\n        /* \"#utility.yul\":31346:31352   */\n      dup3\n        /* \"#utility.yul\":31342:31357   */\n      add\n        /* \"#utility.yul\":31335:31382   */\n      mstore\n        /* \"#utility.yul\":31150:31389   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":31395:32106   */\n    tag_186:\n        /* \"#utility.yul\":31434:31437   */\n      0x00\n        /* \"#utility.yul\":31472:31476   */\n      0x44\n        /* \"#utility.yul\":31454:31470   */\n      returndatasize\n        /* \"#utility.yul\":31451:31477   */\n      lt\n        /* \"#utility.yul\":31448:31487   */\n      iszero\n      tag_575\n      jumpi\n        /* \"#utility.yul\":31480:31485   */\n      jump(tag_574)\n        /* \"#utility.yul\":31448:31487   */\n    tag_575:\n        /* \"#utility.yul\":31509:31529   */\n      tag_576\n      tag_495\n      jump\t// in\n    tag_576:\n        /* \"#utility.yul\":31584:31585   */\n      0x04\n        /* \"#utility.yul\":31566:31582   */\n      returndatasize\n        /* \"#utility.yul\":31562:31586   */\n      sub\n        /* \"#utility.yul\":31559:31560   */\n      0x04\n        /* \"#utility.yul\":31553:31557   */\n      dup3\n        /* \"#utility.yul\":31538:31587   */\n      returndatacopy\n        /* \"#utility.yul\":31617:31621   */\n      dup1\n        /* \"#utility.yul\":31611:31622   */\n      mload\n        /* \"#utility.yul\":31716:31732   */\n      returndatasize\n        /* \"#utility.yul\":31709:31713   */\n      0x24\n        /* \"#utility.yul\":31701:31707   */\n      dup3\n        /* \"#utility.yul\":31697:31714   */\n      add\n        /* \"#utility.yul\":31694:31733   */\n      gt\n        /* \"#utility.yul\":31661:31679   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":31653:31659   */\n      dup3\n        /* \"#utility.yul\":31650:31680   */\n      gt\n        /* \"#utility.yul\":31634:31747   */\n      or\n        /* \"#utility.yul\":31631:31777   */\n      iszero\n      tag_577\n      jumpi\n        /* \"#utility.yul\":31762:31767   */\n      pop\n      pop\n      jump(tag_574)\n        /* \"#utility.yul\":31631:31777   */\n    tag_577:\n        /* \"#utility.yul\":31808:31814   */\n      dup1\n        /* \"#utility.yul\":31802:31806   */\n      dup3\n        /* \"#utility.yul\":31798:31815   */\n      add\n        /* \"#utility.yul\":31844:31847   */\n      dup1\n        /* \"#utility.yul\":31838:31848   */\n      mload\n        /* \"#utility.yul\":31871:31889   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":31863:31869   */\n      dup2\n        /* \"#utility.yul\":31860:31890   */\n      gt\n        /* \"#utility.yul\":31857:31900   */\n      iszero\n      tag_578\n      jumpi\n        /* \"#utility.yul\":31893:31898   */\n      pop\n      pop\n      pop\n      pop\n      jump(tag_574)\n        /* \"#utility.yul\":31857:31900   */\n    tag_578:\n        /* \"#utility.yul\":31941:31947   */\n      dup1\n        /* \"#utility.yul\":31934:31938   */\n      0x20\n        /* \"#utility.yul\":31929:31932   */\n      dup4\n        /* \"#utility.yul\":31925:31939   */\n      add\n        /* \"#utility.yul\":31921:31948   */\n      add\n        /* \"#utility.yul\":32000:32001   */\n      0x04\n        /* \"#utility.yul\":31982:31998   */\n      returndatasize\n        /* \"#utility.yul\":31978:32002   */\n      sub\n        /* \"#utility.yul\":31972:31976   */\n      dup6\n        /* \"#utility.yul\":31968:32003   */\n      add\n        /* \"#utility.yul\":31963:31966   */\n      dup2\n        /* \"#utility.yul\":31960:32004   */\n      gt\n        /* \"#utility.yul\":31957:32014   */\n      iszero\n      tag_579\n      jumpi\n        /* \"#utility.yul\":32007:32012   */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump(tag_574)\n        /* \"#utility.yul\":31957:32014   */\n    tag_579:\n        /* \"#utility.yul\":32024:32081   */\n      tag_580\n        /* \"#utility.yul\":32072:32078   */\n      dup3\n        /* \"#utility.yul\":32066:32070   */\n      0x20\n        /* \"#utility.yul\":32062:32079   */\n      add\n        /* \"#utility.yul\":32054:32060   */\n      dup6\n        /* \"#utility.yul\":32050:32080   */\n      add\n        /* \"#utility.yul\":32044:32048   */\n      dup7\n        /* \"#utility.yul\":32024:32081   */\n      tag_497\n      jump\t// in\n    tag_580:\n        /* \"#utility.yul\":32097:32100   */\n      dup3\n        /* \"#utility.yul\":32090:32100   */\n      swap6\n      pop\n        /* \"#utility.yul\":31438:32106   */\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":31395:32106   */\n    tag_574:\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":32112:32234   */\n    tag_261:\n        /* \"#utility.yul\":32185:32209   */\n      tag_582\n        /* \"#utility.yul\":32203:32208   */\n      dup2\n        /* \"#utility.yul\":32185:32209   */\n      tag_361\n      jump\t// in\n    tag_582:\n        /* \"#utility.yul\":32178:32183   */\n      dup2\n        /* \"#utility.yul\":32175:32210   */\n      eq\n        /* \"#utility.yul\":32165:32228   */\n      tag_583\n      jumpi\n        /* \"#utility.yul\":32224:32225   */\n      0x00\n        /* \"#utility.yul\":32221:32222   */\n      dup1\n        /* \"#utility.yul\":32214:32226   */\n      revert\n        /* \"#utility.yul\":32165:32228   */\n    tag_583:\n        /* \"#utility.yul\":32112:32234   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":32240:32356   */\n    tag_276:\n        /* \"#utility.yul\":32310:32331   */\n      tag_585\n        /* \"#utility.yul\":32325:32330   */\n      dup2\n        /* \"#utility.yul\":32310:32331   */\n      tag_379\n      jump\t// in\n    tag_585:\n        /* \"#utility.yul\":32303:32308   */\n      dup2\n        /* \"#utility.yul\":32300:32332   */\n      eq\n        /* \"#utility.yul\":32290:32350   */\n      tag_586\n      jumpi\n        /* \"#utility.yul\":32346:32347   */\n      0x00\n        /* \"#utility.yul\":32343:32344   */\n      dup1\n        /* \"#utility.yul\":32336:32348   */\n      revert\n        /* \"#utility.yul\":32290:32350   */\n    tag_586:\n        /* \"#utility.yul\":32240:32356   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":32362:32482   */\n    tag_280:\n        /* \"#utility.yul\":32434:32457   */\n      tag_588\n        /* \"#utility.yul\":32451:32456   */\n      dup2\n        /* \"#utility.yul\":32434:32457   */\n      tag_527\n      jump\t// in\n    tag_588:\n        /* \"#utility.yul\":32427:32432   */\n      dup2\n        /* \"#utility.yul\":32424:32458   */\n      eq\n        /* \"#utility.yul\":32414:32476   */\n      tag_589\n      jumpi\n        /* \"#utility.yul\":32472:32473   */\n      0x00\n        /* \"#utility.yul\":32469:32470   */\n      dup1\n        /* \"#utility.yul\":32462:32474   */\n      revert\n        /* \"#utility.yul\":32414:32476   */\n    tag_589:\n        /* \"#utility.yul\":32362:32482   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":32488:32610   */\n    tag_291:\n        /* \"#utility.yul\":32561:32585   */\n      tag_591\n        /* \"#utility.yul\":32579:32584   */\n      dup2\n        /* \"#utility.yul\":32561:32585   */\n      tag_445\n      jump\t// in\n    tag_591:\n        /* \"#utility.yul\":32554:32559   */\n      dup2\n        /* \"#utility.yul\":32551:32586   */\n      eq\n        /* \"#utility.yul\":32541:32604   */\n      tag_592\n      jumpi\n        /* \"#utility.yul\":32600:32601   */\n      0x00\n        /* \"#utility.yul\":32597:32598   */\n      dup1\n        /* \"#utility.yul\":32590:32602   */\n      revert\n        /* \"#utility.yul\":32541:32604   */\n    tag_592:\n        /* \"#utility.yul\":32488:32610   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220aa51d1e75a51fce5b75e163d0a1f725e19ef1c65637c1ef3288607ec6755ab1364736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2563 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x87 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4E1273F4 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x138 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x168 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x184 JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x1B4 JUMPI PUSH2 0x87 JUMP JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0x8C JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xBC JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0xEC JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0x11C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA1 SWAP2 SWAP1 PUSH2 0x172E JUMP JUMPDEST PUSH2 0x1D0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB3 SWAP2 SWAP1 PUSH2 0x1D44 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xD1 SWAP2 SWAP1 PUSH2 0x17E6 JUMP JUMPDEST PUSH2 0x29A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE3 SWAP2 SWAP1 PUSH2 0x1BE7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x106 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x101 SWAP2 SWAP1 PUSH2 0x1840 JUMP JUMPDEST PUSH2 0x37C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x113 SWAP2 SWAP1 PUSH2 0x1C02 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x136 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x131 SWAP2 SWAP1 PUSH2 0x1588 JUMP JUMPDEST PUSH2 0x410 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x152 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x14D SWAP2 SWAP1 PUSH2 0x176E JUMP JUMPDEST PUSH2 0x4B1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15F SWAP2 SWAP1 PUSH2 0x1B8E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x182 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17D SWAP2 SWAP1 PUSH2 0x16EE JUMP JUMPDEST PUSH2 0x5CA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x19E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x199 SWAP2 SWAP1 PUSH2 0x1548 JUMP JUMPDEST PUSH2 0x5E0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AB SWAP2 SWAP1 PUSH2 0x1BE7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C9 SWAP2 SWAP1 PUSH2 0x1657 JUMP JUMPDEST PUSH2 0x674 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x241 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x238 SWAP1 PUSH2 0x1C44 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x65 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xD9B67A2600000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x365 JUMPI POP PUSH32 0xE89341C00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x375 JUMPI POP PUSH2 0x374 DUP3 PUSH2 0x715 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x67 DUP1 SLOAD PUSH2 0x38B SWAP1 PUSH2 0x1FB3 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3B7 SWAP1 PUSH2 0x1FB3 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x404 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3D9 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x404 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3E7 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x418 PUSH2 0x77F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x45E JUMPI POP PUSH2 0x45D DUP6 PUSH2 0x458 PUSH2 0x77F JUMP JUMPDEST PUSH2 0x5E0 JUMP JUMPDEST JUMPDEST PUSH2 0x49D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x494 SWAP1 PUSH2 0x1C64 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4AA DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x787 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x4F7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4EE SWAP1 PUSH2 0x1CE4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x514 JUMPI PUSH2 0x513 PUSH2 0x20EC JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x542 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x5BF JUMPI PUSH2 0x58F DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x567 JUMPI PUSH2 0x566 PUSH2 0x20BD JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x582 JUMPI PUSH2 0x581 PUSH2 0x20BD JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x1D0 JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x5A2 JUMPI PUSH2 0x5A1 PUSH2 0x20BD JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP1 PUSH2 0x5B8 SWAP1 PUSH2 0x2016 JUMP JUMPDEST SWAP1 POP PUSH2 0x548 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x5DC PUSH2 0x5D5 PUSH2 0x77F JUMP JUMPDEST DUP4 DUP4 PUSH2 0xAAC JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x66 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x67C PUSH2 0x77F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x6C2 JUMPI POP PUSH2 0x6C1 DUP6 PUSH2 0x6BC PUSH2 0x77F JUMP JUMPDEST PUSH2 0x5E0 JUMP JUMPDEST JUMPDEST PUSH2 0x701 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6F8 SWAP1 PUSH2 0x1C64 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x70E DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0xC19 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x7CB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7C2 SWAP1 PUSH2 0x1D04 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x83B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x832 SWAP1 PUSH2 0x1C84 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x845 PUSH2 0x77F JUMP JUMPDEST SWAP1 POP PUSH2 0x855 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0xEB8 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0xA09 JUMPI PUSH1 0x0 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x876 JUMPI PUSH2 0x875 PUSH2 0x20BD JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x895 JUMPI PUSH2 0x894 PUSH2 0x20BD JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x65 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x937 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x92E SWAP1 PUSH2 0x1CA4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x65 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP13 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x65 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x9EE SWAP2 SWAP1 PUSH2 0x1EA7 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP POP DUP1 PUSH2 0xA02 SWAP1 PUSH2 0x2016 JUMP JUMPDEST SWAP1 POP PUSH2 0x858 JUMP JUMPDEST POP DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0xA80 SWAP3 SWAP2 SWAP1 PUSH2 0x1BB0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xA96 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0xEC0 JUMP JUMPDEST PUSH2 0xAA4 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0xEC8 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xB1B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB12 SWAP1 PUSH2 0x1CC4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x66 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0xC0C SWAP2 SWAP1 PUSH2 0x1BE7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xC89 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC80 SWAP1 PUSH2 0x1C84 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xC93 PUSH2 0x77F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xCA0 DUP6 PUSH2 0x10AF JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xCAD DUP6 PUSH2 0x10AF JUMP JUMPDEST SWAP1 POP PUSH2 0xCBD DUP4 DUP10 DUP10 DUP6 DUP6 DUP10 PUSH2 0xEB8 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x65 PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP6 DUP2 LT ISZERO PUSH2 0xD55 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD4C SWAP1 PUSH2 0x1CA4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP6 DUP2 SUB PUSH1 0x65 PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP6 PUSH1 0x65 PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xE0C SWAP2 SWAP1 PUSH2 0x1EA7 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 DUP11 DUP11 PUSH1 0x40 MLOAD PUSH2 0xE89 SWAP3 SWAP2 SWAP1 PUSH2 0x1D5F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xE9F DUP5 DUP11 DUP11 DUP7 DUP7 DUP11 PUSH2 0xEC0 JUMP JUMPDEST PUSH2 0xEAD DUP5 DUP11 DUP11 DUP11 DUP11 DUP11 PUSH2 0x1129 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xEE7 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1310 JUMP JUMPDEST ISZERO PUSH2 0x10A7 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xBC197C81 DUP8 DUP8 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF2D SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1ACC JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xF47 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xF78 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF75 SWAP2 SWAP1 PUSH2 0x1813 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x101E JUMPI PUSH2 0xF84 PUSH2 0x211B JUMP JUMPDEST DUP1 PUSH4 0x8C379A0 EQ ISZERO PUSH2 0xFE1 JUMPI POP PUSH2 0xF99 PUSH2 0x243B JUMP JUMPDEST DUP1 PUSH2 0xFA4 JUMPI POP PUSH2 0xFE3 JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFD8 SWAP2 SWAP1 PUSH2 0x1C02 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1015 SWAP1 PUSH2 0x1D24 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH4 0xBC197C81 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x10A5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x109C SWAP1 PUSH2 0x1C24 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x10CE JUMPI PUSH2 0x10CD PUSH2 0x20EC JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x10FC JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP DUP3 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x1114 JUMPI PUSH2 0x1113 PUSH2 0x20BD JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1148 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1310 JUMP JUMPDEST ISZERO PUSH2 0x1308 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF23A6E61 DUP8 DUP8 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x118E SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1B34 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x11A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x11D9 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x11D6 SWAP2 SWAP1 PUSH2 0x1813 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x127F JUMPI PUSH2 0x11E5 PUSH2 0x211B JUMP JUMPDEST DUP1 PUSH4 0x8C379A0 EQ ISZERO PUSH2 0x1242 JUMPI POP PUSH2 0x11FA PUSH2 0x243B JUMP JUMPDEST DUP1 PUSH2 0x1205 JUMPI POP PUSH2 0x1244 JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1239 SWAP2 SWAP1 PUSH2 0x1C02 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1276 SWAP1 PUSH2 0x1D24 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH4 0xF23A6E61 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x1306 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12FD SWAP1 PUSH2 0x1C24 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1346 PUSH2 0x1341 DUP5 PUSH2 0x1DAD JUMP JUMPDEST PUSH2 0x1D88 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP DUP3 DUP6 PUSH1 0x20 DUP7 MUL DUP3 ADD GT ISZERO PUSH2 0x1369 JUMPI PUSH2 0x1368 PUSH2 0x2142 JUMP JUMPDEST JUMPDEST PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x1399 JUMPI DUP2 PUSH2 0x137F DUP9 DUP3 PUSH2 0x1455 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP PUSH1 0x20 DUP4 ADD SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x136C JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13B6 PUSH2 0x13B1 DUP5 PUSH2 0x1DD9 JUMP JUMPDEST PUSH2 0x1D88 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP DUP3 DUP6 PUSH1 0x20 DUP7 MUL DUP3 ADD GT ISZERO PUSH2 0x13D9 JUMPI PUSH2 0x13D8 PUSH2 0x2142 JUMP JUMPDEST JUMPDEST PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x1409 JUMPI DUP2 PUSH2 0x13EF DUP9 DUP3 PUSH2 0x1533 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP PUSH1 0x20 DUP4 ADD SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x13DC JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1426 PUSH2 0x1421 DUP5 PUSH2 0x1E05 JUMP JUMPDEST PUSH2 0x1D88 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1442 JUMPI PUSH2 0x1441 PUSH2 0x2147 JUMP JUMPDEST JUMPDEST PUSH2 0x144D DUP5 DUP3 DUP6 PUSH2 0x1F71 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1464 DUP2 PUSH2 0x24D1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x147F JUMPI PUSH2 0x147E PUSH2 0x213D JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x148F DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1333 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x14AD JUMPI PUSH2 0x14AC PUSH2 0x213D JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x14BD DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x13A3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x14D5 DUP2 PUSH2 0x24E8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x14EA DUP2 PUSH2 0x24FF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x14FF DUP2 PUSH2 0x24FF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x151A JUMPI PUSH2 0x1519 PUSH2 0x213D JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x152A DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1413 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1542 DUP2 PUSH2 0x2516 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x155F JUMPI PUSH2 0x155E PUSH2 0x2151 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x156D DUP6 DUP3 DUP7 ADD PUSH2 0x1455 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x157E DUP6 DUP3 DUP7 ADD PUSH2 0x1455 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x15A4 JUMPI PUSH2 0x15A3 PUSH2 0x2151 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x15B2 DUP9 DUP3 DUP10 ADD PUSH2 0x1455 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x15C3 DUP9 DUP3 DUP10 ADD PUSH2 0x1455 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x15E4 JUMPI PUSH2 0x15E3 PUSH2 0x214C JUMP JUMPDEST JUMPDEST PUSH2 0x15F0 DUP9 DUP3 DUP10 ADD PUSH2 0x1498 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1611 JUMPI PUSH2 0x1610 PUSH2 0x214C JUMP JUMPDEST JUMPDEST PUSH2 0x161D DUP9 DUP3 DUP10 ADD PUSH2 0x1498 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x163E JUMPI PUSH2 0x163D PUSH2 0x214C JUMP JUMPDEST JUMPDEST PUSH2 0x164A DUP9 DUP3 DUP10 ADD PUSH2 0x1505 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1673 JUMPI PUSH2 0x1672 PUSH2 0x2151 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1681 DUP9 DUP3 DUP10 ADD PUSH2 0x1455 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x1692 DUP9 DUP3 DUP10 ADD PUSH2 0x1455 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x16A3 DUP9 DUP3 DUP10 ADD PUSH2 0x1533 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x16B4 DUP9 DUP3 DUP10 ADD PUSH2 0x1533 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x16D5 JUMPI PUSH2 0x16D4 PUSH2 0x214C JUMP JUMPDEST JUMPDEST PUSH2 0x16E1 DUP9 DUP3 DUP10 ADD PUSH2 0x1505 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1705 JUMPI PUSH2 0x1704 PUSH2 0x2151 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1713 DUP6 DUP3 DUP7 ADD PUSH2 0x1455 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1724 DUP6 DUP3 DUP7 ADD PUSH2 0x14C6 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1745 JUMPI PUSH2 0x1744 PUSH2 0x2151 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1753 DUP6 DUP3 DUP7 ADD PUSH2 0x1455 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1764 DUP6 DUP3 DUP7 ADD PUSH2 0x1533 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1785 JUMPI PUSH2 0x1784 PUSH2 0x2151 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x17A3 JUMPI PUSH2 0x17A2 PUSH2 0x214C JUMP JUMPDEST JUMPDEST PUSH2 0x17AF DUP6 DUP3 DUP7 ADD PUSH2 0x146A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x17D0 JUMPI PUSH2 0x17CF PUSH2 0x214C JUMP JUMPDEST JUMPDEST PUSH2 0x17DC DUP6 DUP3 DUP7 ADD PUSH2 0x1498 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x17FC JUMPI PUSH2 0x17FB PUSH2 0x2151 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x180A DUP5 DUP3 DUP6 ADD PUSH2 0x14DB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1829 JUMPI PUSH2 0x1828 PUSH2 0x2151 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1837 DUP5 DUP3 DUP6 ADD PUSH2 0x14F0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1856 JUMPI PUSH2 0x1855 PUSH2 0x2151 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1864 DUP5 DUP3 DUP6 ADD PUSH2 0x1533 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1879 DUP4 DUP4 PUSH2 0x1AAE JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x188E DUP2 PUSH2 0x1EFD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x189F DUP3 PUSH2 0x1E46 JUMP JUMPDEST PUSH2 0x18A9 DUP2 DUP6 PUSH2 0x1E74 JUMP JUMPDEST SWAP4 POP PUSH2 0x18B4 DUP4 PUSH2 0x1E36 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x18E5 JUMPI DUP2 MLOAD PUSH2 0x18CC DUP9 DUP3 PUSH2 0x186D JUMP JUMPDEST SWAP8 POP PUSH2 0x18D7 DUP4 PUSH2 0x1E67 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x18B8 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x18FB DUP2 PUSH2 0x1F0F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x190C DUP3 PUSH2 0x1E51 JUMP JUMPDEST PUSH2 0x1916 DUP2 DUP6 PUSH2 0x1E85 JUMP JUMPDEST SWAP4 POP PUSH2 0x1926 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1F80 JUMP JUMPDEST PUSH2 0x192F DUP2 PUSH2 0x2156 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1945 DUP3 PUSH2 0x1E5C JUMP JUMPDEST PUSH2 0x194F DUP2 DUP6 PUSH2 0x1E96 JUMP JUMPDEST SWAP4 POP PUSH2 0x195F DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1F80 JUMP JUMPDEST PUSH2 0x1968 DUP2 PUSH2 0x2156 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1980 PUSH1 0x28 DUP4 PUSH2 0x1E96 JUMP JUMPDEST SWAP2 POP PUSH2 0x198B DUP3 PUSH2 0x2174 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19A3 PUSH1 0x2A DUP4 PUSH2 0x1E96 JUMP JUMPDEST SWAP2 POP PUSH2 0x19AE DUP3 PUSH2 0x21C3 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19C6 PUSH1 0x2E DUP4 PUSH2 0x1E96 JUMP JUMPDEST SWAP2 POP PUSH2 0x19D1 DUP3 PUSH2 0x2212 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19E9 PUSH1 0x25 DUP4 PUSH2 0x1E96 JUMP JUMPDEST SWAP2 POP PUSH2 0x19F4 DUP3 PUSH2 0x2261 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A0C PUSH1 0x2A DUP4 PUSH2 0x1E96 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A17 DUP3 PUSH2 0x22B0 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A2F PUSH1 0x29 DUP4 PUSH2 0x1E96 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A3A DUP3 PUSH2 0x22FF JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A52 PUSH1 0x29 DUP4 PUSH2 0x1E96 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A5D DUP3 PUSH2 0x234E JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A75 PUSH1 0x28 DUP4 PUSH2 0x1E96 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A80 DUP3 PUSH2 0x239D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A98 PUSH1 0x34 DUP4 PUSH2 0x1E96 JUMP JUMPDEST SWAP2 POP PUSH2 0x1AA3 DUP3 PUSH2 0x23EC JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1AB7 DUP2 PUSH2 0x1F67 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1AC6 DUP2 PUSH2 0x1F67 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x1AE1 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x1885 JUMP JUMPDEST PUSH2 0x1AEE PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x1885 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x1B00 DUP2 DUP7 PUSH2 0x1894 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x1B14 DUP2 DUP6 PUSH2 0x1894 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x1B28 DUP2 DUP5 PUSH2 0x1901 JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x1B49 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x1885 JUMP JUMPDEST PUSH2 0x1B56 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x1885 JUMP JUMPDEST PUSH2 0x1B63 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x1ABD JUMP JUMPDEST PUSH2 0x1B70 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x1ABD JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x1B82 DUP2 DUP5 PUSH2 0x1901 JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1BA8 DUP2 DUP5 PUSH2 0x1894 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1BCA DUP2 DUP6 PUSH2 0x1894 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x1BDE DUP2 DUP5 PUSH2 0x1894 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1BFC PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x18F2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1C1C DUP2 DUP5 PUSH2 0x193A JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1C3D DUP2 PUSH2 0x1973 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1C5D DUP2 PUSH2 0x1996 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1C7D DUP2 PUSH2 0x19B9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1C9D DUP2 PUSH2 0x19DC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1CBD DUP2 PUSH2 0x19FF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1CDD DUP2 PUSH2 0x1A22 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1CFD DUP2 PUSH2 0x1A45 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D1D DUP2 PUSH2 0x1A68 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D3D DUP2 PUSH2 0x1A8B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1D59 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1ABD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1D74 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1ABD JUMP JUMPDEST PUSH2 0x1D81 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1ABD JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D92 PUSH2 0x1DA3 JUMP JUMPDEST SWAP1 POP PUSH2 0x1D9E DUP3 DUP3 PUSH2 0x1FE5 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1DC8 JUMPI PUSH2 0x1DC7 PUSH2 0x20EC JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1DF4 JUMPI PUSH2 0x1DF3 PUSH2 0x20EC JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1E20 JUMPI PUSH2 0x1E1F PUSH2 0x20EC JUMP JUMPDEST JUMPDEST PUSH2 0x1E29 DUP3 PUSH2 0x2156 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EB2 DUP3 PUSH2 0x1F67 JUMP JUMPDEST SWAP2 POP PUSH2 0x1EBD DUP4 PUSH2 0x1F67 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x1EF2 JUMPI PUSH2 0x1EF1 PUSH2 0x205F JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F08 DUP3 PUSH2 0x1F47 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1F9E JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1F83 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1FAD JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1FCB JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x1FDF JUMPI PUSH2 0x1FDE PUSH2 0x208E JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1FEE DUP3 PUSH2 0x2156 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x200D JUMPI PUSH2 0x200C PUSH2 0x20EC JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2021 DUP3 PUSH2 0x1F67 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x2054 JUMPI PUSH2 0x2053 PUSH2 0x205F JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x3 RETURNDATASIZE GT ISZERO PUSH2 0x213A JUMPI PUSH1 0x4 PUSH1 0x0 DUP1 RETURNDATACOPY PUSH2 0x2137 PUSH1 0x0 MLOAD PUSH2 0x2167 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0xE0 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455243313135353A204552433131353552656365697665722072656A65637465 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6420746F6B656E73000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x455243313135353A2061646472657373207A65726F206973206E6F7420612076 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x616C6964206F776E657200000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x455243313135353A2063616C6C6572206973206E6F7420746F6B656E206F776E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6572206F7220617070726F766564000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x455243313135353A207472616E7366657220746F20746865207A65726F206164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x455243313135353A20696E73756666696369656E742062616C616E636520666F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x72207472616E7366657200000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x455243313135353A2073657474696E6720617070726F76616C20737461747573 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x20666F722073656C660000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x455243313135353A206163636F756E747320616E6420696473206C656E677468 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x206D69736D617463680000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x455243313135353A2069647320616E6420616D6F756E7473206C656E67746820 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6D69736D61746368000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x455243313135353A207472616E7366657220746F206E6F6E2D45524331313535 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x526563656976657220696D706C656D656E746572000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x44 RETURNDATASIZE LT ISZERO PUSH2 0x244B JUMPI PUSH2 0x24CE JUMP JUMPDEST PUSH2 0x2453 PUSH2 0x1DA3 JUMP JUMPDEST PUSH1 0x4 RETURNDATASIZE SUB PUSH1 0x4 DUP3 RETURNDATACOPY DUP1 MLOAD RETURNDATASIZE PUSH1 0x24 DUP3 ADD GT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x247B JUMPI POP POP PUSH2 0x24CE JUMP JUMPDEST DUP1 DUP3 ADD DUP1 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2499 JUMPI POP POP POP POP PUSH2 0x24CE JUMP JUMPDEST DUP1 PUSH1 0x20 DUP4 ADD ADD PUSH1 0x4 RETURNDATASIZE SUB DUP6 ADD DUP2 GT ISZERO PUSH2 0x24B6 JUMPI POP POP POP POP POP PUSH2 0x24CE JUMP JUMPDEST PUSH2 0x24C5 DUP3 PUSH1 0x20 ADD DUP6 ADD DUP7 PUSH2 0x1FE5 JUMP JUMPDEST DUP3 SWAP6 POP POP POP POP POP POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x24DA DUP2 PUSH2 0x1EFD JUMP JUMPDEST DUP2 EQ PUSH2 0x24E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x24F1 DUP2 PUSH2 0x1F0F JUMP JUMPDEST DUP2 EQ PUSH2 0x24FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x2508 DUP2 PUSH2 0x1F1B JUMP JUMPDEST DUP2 EQ PUSH2 0x2513 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x251F DUP2 PUSH2 0x1F67 JUMP JUMPDEST DUP2 EQ PUSH2 0x252A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAA MLOAD 0xD1 0xE7 GAS MLOAD 0xFC 0xE5 0xB7 0x5E AND RETURNDATASIZE EXP 0x1F PUSH19 0x5E19EF1C65637C1EF3288607EC6755AB136473 PUSH16 0x6C634300080700330000000000000000 ",
							"sourceMap": "682:17320:1:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_afterTokenTransfer_1251": {
									"entryPoint": 3776,
									"id": 1251,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_asSingletonArray_1407": {
									"entryPoint": 4271,
									"id": 1407,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_beforeTokenTransfer_1232": {
									"entryPoint": 3768,
									"id": 1232,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_doSafeBatchTransferAcceptanceCheck_1379": {
									"entryPoint": 3784,
									"id": 1379,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_doSafeTransferAcceptanceCheck_1314": {
									"entryPoint": 4393,
									"id": 1314,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_msgSender_1902": {
									"entryPoint": 1919,
									"id": 1902,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_safeBatchTransferFrom_730": {
									"entryPoint": 1927,
									"id": 730,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@_safeTransferFrom_595": {
									"entryPoint": 3097,
									"id": 595,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@_setApprovalForAll_1213": {
									"entryPoint": 2732,
									"id": 1213,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@balanceOfBatch_365": {
									"entryPoint": 1201,
									"id": 365,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_301": {
									"entryPoint": 464,
									"id": 301,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@isApprovedForAll_400": {
									"entryPoint": 1504,
									"id": 400,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@isContract_1609": {
									"entryPoint": 4880,
									"id": 1609,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@safeBatchTransferFrom_478": {
									"entryPoint": 1040,
									"id": 478,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@safeTransferFrom_438": {
									"entryPoint": 1652,
									"id": 438,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@setApprovalForAll_382": {
									"entryPoint": 1482,
									"id": 382,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supportsInterface_1955": {
									"entryPoint": 1813,
									"id": 1955,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_261": {
									"entryPoint": 666,
									"id": 261,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@uri_273": {
									"entryPoint": 892,
									"id": 273,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 4915,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 5027,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_bytes_memory_ptr": {
									"entryPoint": 5139,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 5205,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 5226,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 5272,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool": {
									"entryPoint": 5318,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 5339,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4_fromMemory": {
									"entryPoint": 5360,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_memory_ptr": {
									"entryPoint": 5381,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 5427,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 5448,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr": {
									"entryPoint": 5512,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr": {
									"entryPoint": 5719,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 5870,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 5934,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 5998,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 6118,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 6163,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 6208,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encodeUpdatedPos_t_uint256_to_t_uint256": {
									"entryPoint": 6253,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 6277,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack": {
									"entryPoint": 6292,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 6386,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 6401,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6458,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6515,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_415a1b99e1fd4a18cf87c08995f5a9130182e8d76e9c17c497bfebaaef9265ad_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6550,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_47c72b42072ed6c647dec3a0a5c88bec44d3e901c64659bff94ecce0a0323156_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6585,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6620,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6655,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6690,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6725,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6760,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_f591f7b75ffc499e05f8b34c3364b2eceff651378d9549db1d5d67c0d8255c5d_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6795,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256": {
									"entryPoint": 6830,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 6845,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 6860,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 6964,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 7054,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 7088,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 7143,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7170,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7204,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_415a1b99e1fd4a18cf87c08995f5a9130182e8d76e9c17c497bfebaaef9265ad__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7236,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_47c72b42072ed6c647dec3a0a5c88bec44d3e901c64659bff94ecce0a0323156__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7268,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7300,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7332,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7364,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7396,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7428,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f591f7b75ffc499e05f8b34c3364b2eceff651378d9549db1d5d67c0d8255c5d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7460,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 7492,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 7519,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 7560,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 7587,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 7597,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 7641,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_allocation_size_t_bytes_memory_ptr": {
									"entryPoint": 7685,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 7734,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 7750,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 7761,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 7772,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 7783,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack": {
									"entryPoint": 7796,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 7813,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 7830,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 7847,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 7933,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 7951,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 7963,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 8007,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 8039,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_calldata_to_memory": {
									"entryPoint": 8049,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_memory_to_memory": {
									"entryPoint": 8064,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 8115,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 8165,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"increment_t_uint256": {
									"entryPoint": 8214,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 8287,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 8334,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 8381,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 8428,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"return_data_selector": {
									"entryPoint": 8475,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 8509,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
									"entryPoint": 8514,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 8519,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 8524,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 8529,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 8534,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_right_224_unsigned": {
									"entryPoint": 8551,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503": {
									"entryPoint": 8564,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_415a1b99e1fd4a18cf87c08995f5a9130182e8d76e9c17c497bfebaaef9265ad": {
									"entryPoint": 8643,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_47c72b42072ed6c647dec3a0a5c88bec44d3e901c64659bff94ecce0a0323156": {
									"entryPoint": 8722,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d": {
									"entryPoint": 8801,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf": {
									"entryPoint": 8880,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2": {
									"entryPoint": 8959,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5": {
									"entryPoint": 9038,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807": {
									"entryPoint": 9117,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_f591f7b75ffc499e05f8b34c3364b2eceff651378d9549db1d5d67c0d8255c5d": {
									"entryPoint": 9196,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"try_decode_error_message": {
									"entryPoint": 9275,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"validator_revert_t_address": {
									"entryPoint": 9425,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 9448,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 9471,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 9494,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:32613:9",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "126:620:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "136:90:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "218:6:9"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_array$_t_address_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "161:56:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "161:64:9"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "145:15:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "145:81:9"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "136:5:9"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "235:16:9",
															"value": {
																"name": "array",
																"nodeType": "YulIdentifier",
																"src": "246:5:9"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "239:3:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "268:5:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "275:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "261:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "261:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "261:21:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "291:23:9",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "302:5:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "309:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "298:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "298:16:9"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "291:3:9"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "324:17:9",
															"value": {
																"name": "offset",
																"nodeType": "YulIdentifier",
																"src": "335:6:9"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "328:3:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "390:103:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nodeType": "YulIdentifier",
																				"src": "404:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "404:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "404:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "360:3:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "369:6:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "377:4:9",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nodeType": "YulIdentifier",
																					"src": "365:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "365:17:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "356:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "356:27:9"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "385:3:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "353:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "353:36:9"
															},
															"nodeType": "YulIf",
															"src": "350:143:9"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "562:178:9",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "577:21:9",
																		"value": {
																			"name": "src",
																			"nodeType": "YulIdentifier",
																			"src": "595:3:9"
																		},
																		"variables": [
																			{
																				"name": "elementPos",
																				"nodeType": "YulTypedName",
																				"src": "581:10:9",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "619:3:9"
																				},
																				{
																					"arguments": [
																						{
																							"name": "elementPos",
																							"nodeType": "YulIdentifier",
																							"src": "645:10:9"
																						},
																						{
																							"name": "end",
																							"nodeType": "YulIdentifier",
																							"src": "657:3:9"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_t_address",
																						"nodeType": "YulIdentifier",
																						"src": "624:20:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "624:37:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "612:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "612:50:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "612:50:9"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "675:21:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "686:3:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "691:4:9",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "682:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "682:14:9"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "675:3:9"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "709:21:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "720:3:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "725:4:9",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "716:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "716:14:9"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "709:3:9"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "524:1:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "527:6:9"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "521:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "521:13:9"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "535:18:9",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "537:14:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "546:1:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "549:1:9",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "542:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "542:9:9"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "537:1:9"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "506:14:9",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "508:10:9",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "517:1:9",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nodeType": "YulTypedName",
																				"src": "512:1:9",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "502:238:9"
														}
													]
												},
												"name": "abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "96:6:9",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "104:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "112:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "120:5:9",
														"type": ""
													}
												],
												"src": "24:722:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "871:620:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "881:90:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "963:6:9"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "906:56:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "906:64:9"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "890:15:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "890:81:9"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "881:5:9"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "980:16:9",
															"value": {
																"name": "array",
																"nodeType": "YulIdentifier",
																"src": "991:5:9"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "984:3:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "1013:5:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1020:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1006:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1006:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1006:21:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1036:23:9",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "1047:5:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1054:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1043:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1043:16:9"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "1036:3:9"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1069:17:9",
															"value": {
																"name": "offset",
																"nodeType": "YulIdentifier",
																"src": "1080:6:9"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "1073:3:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1135:103:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nodeType": "YulIdentifier",
																				"src": "1149:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1149:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1149:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "1105:3:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "1114:6:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1122:4:9",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nodeType": "YulIdentifier",
																					"src": "1110:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1110:17:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1101:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1101:27:9"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "1130:3:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1098:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1098:36:9"
															},
															"nodeType": "YulIf",
															"src": "1095:143:9"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1307:178:9",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "1322:21:9",
																		"value": {
																			"name": "src",
																			"nodeType": "YulIdentifier",
																			"src": "1340:3:9"
																		},
																		"variables": [
																			{
																				"name": "elementPos",
																				"nodeType": "YulTypedName",
																				"src": "1326:10:9",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "1364:3:9"
																				},
																				{
																					"arguments": [
																						{
																							"name": "elementPos",
																							"nodeType": "YulIdentifier",
																							"src": "1390:10:9"
																						},
																						{
																							"name": "end",
																							"nodeType": "YulIdentifier",
																							"src": "1402:3:9"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_t_uint256",
																						"nodeType": "YulIdentifier",
																						"src": "1369:20:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1369:37:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1357:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1357:50:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1357:50:9"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "1420:21:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "1431:3:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1436:4:9",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1427:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1427:14:9"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "1420:3:9"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "1454:21:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "1465:3:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1470:4:9",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1461:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1461:14:9"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "1454:3:9"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1269:1:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1272:6:9"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1266:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1266:13:9"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1280:18:9",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1282:14:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1291:1:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1294:1:9",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1287:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1287:9:9"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1282:1:9"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1251:14:9",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "1253:10:9",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "1262:1:9",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nodeType": "YulTypedName",
																				"src": "1257:1:9",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "1247:238:9"
														}
													]
												},
												"name": "abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "841:6:9",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "849:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "857:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "865:5:9",
														"type": ""
													}
												],
												"src": "769:722:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1580:327:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1590:74:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1656:6:9"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "1615:40:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1615:48:9"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "1599:15:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1599:65:9"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "1590:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "1680:5:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1687:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1673:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1673:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1673:21:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1703:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "1718:5:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1725:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1714:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1714:16:9"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "1707:3:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1768:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nodeType": "YulIdentifier",
																				"src": "1770:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1770:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1770:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "1749:3:9"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1754:6:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1745:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1745:16:9"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "1763:3:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1742:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1742:25:9"
															},
															"nodeType": "YulIf",
															"src": "1739:112:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "1884:3:9"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "1889:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1894:6:9"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "1860:23:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1860:41:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1860:41:9"
														}
													]
												},
												"name": "abi_decode_available_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "1553:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1558:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1566:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "1574:5:9",
														"type": ""
													}
												],
												"src": "1497:410:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1965:87:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1975:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1997:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1984:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1984:20:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1975:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2040:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "2013:26:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2013:33:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2013:33:9"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1943:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1951:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1959:5:9",
														"type": ""
													}
												],
												"src": "1913:139:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2152:293:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2201:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "2203:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2203:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2203:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2180:6:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2188:4:9",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2176:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2176:17:9"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "2195:3:9"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "2172:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2172:27:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2165:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2165:35:9"
															},
															"nodeType": "YulIf",
															"src": "2162:122:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2293:34:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2320:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2307:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2307:20:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2297:6:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2336:103:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "2412:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2420:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2408:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2408:17:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2427:6:9"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "2435:3:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "2345:62:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2345:94:9"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "2336:5:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_array$_t_address_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2130:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2138:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "2146:5:9",
														"type": ""
													}
												],
												"src": "2075:370:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2545:293:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2594:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "2596:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2596:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2596:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2573:6:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2581:4:9",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2569:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2569:17:9"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "2588:3:9"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "2565:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2565:27:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2558:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2558:35:9"
															},
															"nodeType": "YulIf",
															"src": "2555:122:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2686:34:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2713:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2700:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2700:20:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2690:6:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2729:103:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "2805:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2813:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2801:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2801:17:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2820:6:9"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "2828:3:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "2738:62:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2738:94:9"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "2729:5:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2523:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2531:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "2539:5:9",
														"type": ""
													}
												],
												"src": "2468:370:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2893:84:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2903:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2925:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2912:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2912:20:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2903:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2965:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "2941:23:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2941:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2941:30:9"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2871:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2879:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2887:5:9",
														"type": ""
													}
												],
												"src": "2844:133:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3034:86:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3044:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3066:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3053:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3053:20:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "3044:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3108:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "3082:25:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3082:32:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3082:32:9"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3012:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3020:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3028:5:9",
														"type": ""
													}
												],
												"src": "2983:137:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3188:79:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3198:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3213:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3207:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3207:13:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "3198:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3255:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "3229:25:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3229:32:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3229:32:9"
														}
													]
												},
												"name": "abi_decode_t_bytes4_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3166:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3174:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3182:5:9",
														"type": ""
													}
												],
												"src": "3126:141:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3347:277:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3396:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "3398:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3398:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3398:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3375:6:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3383:4:9",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3371:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3371:17:9"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "3390:3:9"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "3367:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3367:27:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3360:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3360:35:9"
															},
															"nodeType": "YulIf",
															"src": "3357:122:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3488:34:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3515:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3502:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3502:20:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "3492:6:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3531:87:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3591:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3599:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3587:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3587:17:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3606:6:9"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "3614:3:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "3540:46:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3540:78:9"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "3531:5:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3325:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3333:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "3341:5:9",
														"type": ""
													}
												],
												"src": "3286:338:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3682:87:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3692:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3714:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3701:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3701:20:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "3692:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3757:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3730:26:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3730:33:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3730:33:9"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3660:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3668:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3676:5:9",
														"type": ""
													}
												],
												"src": "3630:139:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3858:391:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3904:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3906:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3906:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3906:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3879:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3888:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3875:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3875:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3900:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3871:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3871:32:9"
															},
															"nodeType": "YulIf",
															"src": "3868:119:9"
														},
														{
															"nodeType": "YulBlock",
															"src": "3997:117:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4012:15:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4026:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4016:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4041:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4076:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4087:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4072:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4072:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4096:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4051:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4051:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4041:6:9"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4124:118:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4139:16:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4153:2:9",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4143:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4169:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4204:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4215:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4200:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4200:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4224:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4179:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4179:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "4169:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3820:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3831:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3843:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3851:6:9",
														"type": ""
													}
												],
												"src": "3775:474:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4448:1316:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4495:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "4497:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4497:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4497:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4469:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4478:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4465:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4465:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4490:3:9",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4461:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4461:33:9"
															},
															"nodeType": "YulIf",
															"src": "4458:120:9"
														},
														{
															"nodeType": "YulBlock",
															"src": "4588:117:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4603:15:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4617:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4607:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4632:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4667:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4678:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4663:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4663:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4687:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4642:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4642:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4632:6:9"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4715:118:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4730:16:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4744:2:9",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4734:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4760:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4795:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4806:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4791:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4791:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4815:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4770:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4770:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "4760:6:9"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4843:303:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4858:46:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4889:9:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4900:2:9",
																						"type": "",
																						"value": "64"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4885:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4885:18:9"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "4872:12:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4872:32:9"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4862:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "4951:83:9",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "4953:77:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4953:79:9"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "4953:79:9"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "4923:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4931:18:9",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "4920:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4920:30:9"
																	},
																	"nodeType": "YulIf",
																	"src": "4917:117:9"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5048:88:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5108:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5119:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5104:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5104:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5128:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "5058:45:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5058:78:9"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "5048:6:9"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5156:303:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5171:46:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5202:9:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5213:2:9",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5198:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5198:18:9"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "5185:12:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5185:32:9"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5175:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "5264:83:9",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "5266:77:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5266:79:9"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "5266:79:9"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "5236:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5244:18:9",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "5233:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5233:30:9"
																	},
																	"nodeType": "YulIf",
																	"src": "5230:117:9"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5361:88:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5421:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5432:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5417:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5417:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5441:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "5371:45:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5371:78:9"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "5361:6:9"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5469:288:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5484:47:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5515:9:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5526:3:9",
																						"type": "",
																						"value": "128"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5511:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5511:19:9"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "5498:12:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5498:33:9"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5488:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "5578:83:9",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "5580:77:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5580:79:9"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "5580:79:9"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "5550:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5558:18:9",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "5547:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5547:30:9"
																	},
																	"nodeType": "YulIf",
																	"src": "5544:117:9"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5675:72:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5719:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5730:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5715:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5715:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5739:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "5685:29:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5685:62:9"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nodeType": "YulIdentifier",
																			"src": "5675:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4386:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4397:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4409:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4417:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "4425:6:9",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "4433:6:9",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "4441:6:9",
														"type": ""
													}
												],
												"src": "4255:1509:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5913:946:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5960:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "5962:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5962:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5962:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5934:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5943:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5930:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5930:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5955:3:9",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5926:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5926:33:9"
															},
															"nodeType": "YulIf",
															"src": "5923:120:9"
														},
														{
															"nodeType": "YulBlock",
															"src": "6053:117:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6068:15:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6082:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6072:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6097:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6132:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6143:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6128:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6128:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6152:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "6107:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6107:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "6097:6:9"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "6180:118:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6195:16:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6209:2:9",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6199:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6225:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6260:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6271:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6256:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6256:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6280:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "6235:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6235:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "6225:6:9"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "6308:118:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6323:16:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6337:2:9",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6327:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6353:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6388:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6399:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6384:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6384:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6408:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "6363:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6363:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "6353:6:9"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "6436:118:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6451:16:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6465:2:9",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6455:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6481:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6516:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6527:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6512:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6512:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6536:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "6491:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6491:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "6481:6:9"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "6564:288:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6579:47:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6610:9:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6621:3:9",
																						"type": "",
																						"value": "128"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6606:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6606:19:9"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "6593:12:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6593:33:9"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6583:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "6673:83:9",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "6675:77:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6675:79:9"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "6675:79:9"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "6645:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6653:18:9",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "6642:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6642:30:9"
																	},
																	"nodeType": "YulIf",
																	"src": "6639:117:9"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6770:72:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6814:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6825:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6810:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6810:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6834:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "6780:29:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6780:62:9"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nodeType": "YulIdentifier",
																			"src": "6770:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5851:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5862:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5874:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5882:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "5890:6:9",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "5898:6:9",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "5906:6:9",
														"type": ""
													}
												],
												"src": "5770:1089:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6945:388:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6991:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "6993:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6993:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6993:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6966:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6975:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6962:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6962:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6987:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6958:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6958:32:9"
															},
															"nodeType": "YulIf",
															"src": "6955:119:9"
														},
														{
															"nodeType": "YulBlock",
															"src": "7084:117:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "7099:15:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7113:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "7103:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "7128:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "7163:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "7174:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7159:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7159:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7183:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "7138:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7138:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "7128:6:9"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "7211:115:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "7226:16:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7240:2:9",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "7230:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "7256:60:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "7288:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "7299:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7284:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7284:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7308:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "7266:17:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7266:50:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "7256:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6907:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "6918:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6930:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6938:6:9",
														"type": ""
													}
												],
												"src": "6865:468:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7422:391:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7468:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "7470:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7470:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7470:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7443:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7452:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7439:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7439:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7464:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "7435:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7435:32:9"
															},
															"nodeType": "YulIf",
															"src": "7432:119:9"
														},
														{
															"nodeType": "YulBlock",
															"src": "7561:117:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "7576:15:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7590:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "7580:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "7605:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "7640:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "7651:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7636:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7636:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7660:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "7615:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7615:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "7605:6:9"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "7688:118:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "7703:16:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7717:2:9",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "7707:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "7733:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "7768:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "7779:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7764:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7764:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7788:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "7743:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7743:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "7733:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7384:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "7395:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7407:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7415:6:9",
														"type": ""
													}
												],
												"src": "7339:474:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7952:761:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7998:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "8000:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8000:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8000:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7973:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7982:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7969:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7969:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7994:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "7965:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7965:32:9"
															},
															"nodeType": "YulIf",
															"src": "7962:119:9"
														},
														{
															"nodeType": "YulBlock",
															"src": "8091:302:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "8106:45:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "8137:9:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "8148:1:9",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8133:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8133:17:9"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "8120:12:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8120:31:9"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "8110:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "8198:83:9",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "8200:77:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8200:79:9"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "8200:79:9"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "8170:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8178:18:9",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "8167:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8167:30:9"
																	},
																	"nodeType": "YulIf",
																	"src": "8164:117:9"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "8295:88:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "8355:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "8366:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8351:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8351:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8375:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_address_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "8305:45:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8305:78:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "8295:6:9"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "8403:303:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "8418:46:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "8449:9:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "8460:2:9",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8445:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8445:18:9"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "8432:12:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8432:32:9"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "8422:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "8511:83:9",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "8513:77:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8513:79:9"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "8513:79:9"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "8483:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8491:18:9",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "8480:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8480:30:9"
																	},
																	"nodeType": "YulIf",
																	"src": "8477:117:9"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "8608:88:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "8668:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "8679:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8664:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8664:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8688:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "8618:45:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8618:78:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "8608:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7914:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "7925:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7937:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7945:6:9",
														"type": ""
													}
												],
												"src": "7819:894:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8784:262:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8830:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "8832:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8832:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8832:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8805:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8814:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8801:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8801:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8826:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "8797:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8797:32:9"
															},
															"nodeType": "YulIf",
															"src": "8794:119:9"
														},
														{
															"nodeType": "YulBlock",
															"src": "8923:116:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "8938:15:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8952:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "8942:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "8967:62:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9001:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9012:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8997:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8997:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9021:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nodeType": "YulIdentifier",
																			"src": "8977:19:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8977:52:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "8967:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8754:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "8765:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8777:6:9",
														"type": ""
													}
												],
												"src": "8719:327:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9128:273:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9174:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "9176:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9176:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9176:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9149:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9158:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9145:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9145:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9170:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "9141:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9141:32:9"
															},
															"nodeType": "YulIf",
															"src": "9138:119:9"
														},
														{
															"nodeType": "YulBlock",
															"src": "9267:127:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9282:15:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9296:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9286:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9311:73:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9356:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9367:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9352:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9352:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9376:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "9321:30:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9321:63:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "9311:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9098:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "9109:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9121:6:9",
														"type": ""
													}
												],
												"src": "9052:349:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9473:263:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9519:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "9521:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9521:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9521:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9494:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9503:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9490:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9490:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9515:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "9486:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9486:32:9"
															},
															"nodeType": "YulIf",
															"src": "9483:119:9"
														},
														{
															"nodeType": "YulBlock",
															"src": "9612:117:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9627:15:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9641:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9631:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9656:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9691:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9702:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9687:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9687:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9711:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "9666:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9666:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "9656:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9443:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "9454:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9466:6:9",
														"type": ""
													}
												],
												"src": "9407:329:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9822:99:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "9866:6:9"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9874:3:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "9832:33:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9832:46:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9832:46:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9887:28:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9905:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9910:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9901:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9901:14:9"
															},
															"variableNames": [
																{
																	"name": "updatedPos",
																	"nodeType": "YulIdentifier",
																	"src": "9887:10:9"
																}
															]
														}
													]
												},
												"name": "abi_encodeUpdatedPos_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9795:6:9",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9803:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updatedPos",
														"nodeType": "YulTypedName",
														"src": "9811:10:9",
														"type": ""
													}
												],
												"src": "9742:179:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9992:53:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10009:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "10032:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "10014:17:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10014:24:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10002:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10002:37:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10002:37:9"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9980:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9987:3:9",
														"type": ""
													}
												],
												"src": "9927:118:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10205:608:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10215:68:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10277:5:9"
																	}
																],
																"functionName": {
																	"name": "array_length_t_array$_t_uint256_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "10229:47:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10229:54:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "10219:6:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10292:93:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10373:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "10378:6:9"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10299:73:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10299:86:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "10292:3:9"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10394:71:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10459:5:9"
																	}
																],
																"functionName": {
																	"name": "array_dataslot_t_array$_t_uint256_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "10409:49:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10409:56:9"
															},
															"variables": [
																{
																	"name": "baseRef",
																	"nodeType": "YulTypedName",
																	"src": "10398:7:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10474:21:9",
															"value": {
																"name": "baseRef",
																"nodeType": "YulIdentifier",
																"src": "10488:7:9"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "10478:6:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10564:224:9",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "10578:34:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "10605:6:9"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "10599:5:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10599:13:9"
																		},
																		"variables": [
																			{
																				"name": "elementValue0",
																				"nodeType": "YulTypedName",
																				"src": "10582:13:9",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "10625:70:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "elementValue0",
																					"nodeType": "YulIdentifier",
																					"src": "10676:13:9"
																				},
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "10691:3:9"
																				}
																			],
																			"functionName": {
																				"name": "abi_encodeUpdatedPos_t_uint256_to_t_uint256",
																				"nodeType": "YulIdentifier",
																				"src": "10632:43:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10632:63:9"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "10625:3:9"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "10708:70:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "10771:6:9"
																				}
																			],
																			"functionName": {
																				"name": "array_nextElement_t_array$_t_uint256_$dyn_memory_ptr",
																				"nodeType": "YulIdentifier",
																				"src": "10718:52:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10718:60:9"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "10708:6:9"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "10526:1:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "10529:6:9"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "10523:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10523:13:9"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "10537:18:9",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "10539:14:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "10548:1:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10551:1:9",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "10544:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10544:9:9"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "10539:1:9"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "10508:14:9",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "10510:10:9",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "10519:1:9",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nodeType": "YulTypedName",
																				"src": "10514:1:9",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "10504:284:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10797:10:9",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "10804:3:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "10797:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10184:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10191:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "10200:3:9",
														"type": ""
													}
												],
												"src": "10081:732:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10878:50:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10895:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "10915:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "10900:14:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10900:21:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10888:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10888:34:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10888:34:9"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10866:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10873:3:9",
														"type": ""
													}
												],
												"src": "10819:109:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11024:270:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11034:52:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "11080:5:9"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "11048:31:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11048:38:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "11038:6:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "11095:77:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11160:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "11165:6:9"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11102:57:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11102:70:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "11095:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "11207:5:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11214:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11203:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11203:16:9"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11221:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "11226:6:9"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "11181:21:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11181:52:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11181:52:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11242:46:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11253:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "11280:6:9"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "11258:21:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11258:29:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11249:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11249:39:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "11242:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11005:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11012:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "11020:3:9",
														"type": ""
													}
												],
												"src": "10934:360:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11392:272:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11402:53:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "11449:5:9"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "11416:32:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11416:39:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "11406:6:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "11464:78:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11530:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "11535:6:9"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11471:58:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11471:71:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "11464:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "11577:5:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11584:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11573:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11573:16:9"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11591:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "11596:6:9"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "11551:21:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11551:52:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11551:52:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11612:46:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11623:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "11650:6:9"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "11628:21:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11628:29:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11619:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11619:39:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "11612:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11373:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11380:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "11388:3:9",
														"type": ""
													}
												],
												"src": "11300:364:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11816:220:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11826:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11892:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11897:2:9",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11833:58:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11833:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "11826:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11998:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
																	"nodeType": "YulIdentifier",
																	"src": "11909:88:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11909:93:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11909:93:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12011:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12022:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12027:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12018:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12018:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "12011:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11804:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "11812:3:9",
														"type": ""
													}
												],
												"src": "11670:366:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12188:220:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12198:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12264:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12269:2:9",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12205:58:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12205:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "12198:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12370:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_415a1b99e1fd4a18cf87c08995f5a9130182e8d76e9c17c497bfebaaef9265ad",
																	"nodeType": "YulIdentifier",
																	"src": "12281:88:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12281:93:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12281:93:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12383:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12394:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12399:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12390:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12390:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "12383:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_415a1b99e1fd4a18cf87c08995f5a9130182e8d76e9c17c497bfebaaef9265ad_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "12176:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "12184:3:9",
														"type": ""
													}
												],
												"src": "12042:366:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12560:220:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12570:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12636:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12641:2:9",
																		"type": "",
																		"value": "46"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12577:58:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12577:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "12570:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12742:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_47c72b42072ed6c647dec3a0a5c88bec44d3e901c64659bff94ecce0a0323156",
																	"nodeType": "YulIdentifier",
																	"src": "12653:88:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12653:93:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12653:93:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12755:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12766:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12771:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12762:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12762:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "12755:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_47c72b42072ed6c647dec3a0a5c88bec44d3e901c64659bff94ecce0a0323156_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "12548:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "12556:3:9",
														"type": ""
													}
												],
												"src": "12414:366:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12932:220:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12942:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13008:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13013:2:9",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12949:58:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12949:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "12942:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13114:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d",
																	"nodeType": "YulIdentifier",
																	"src": "13025:88:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13025:93:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13025:93:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13127:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13138:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13143:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13134:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13134:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "13127:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "12920:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "12928:3:9",
														"type": ""
													}
												],
												"src": "12786:366:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13304:220:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13314:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13380:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13385:2:9",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13321:58:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13321:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "13314:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13486:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf",
																	"nodeType": "YulIdentifier",
																	"src": "13397:88:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13397:93:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13397:93:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13499:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13510:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13515:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13506:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13506:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "13499:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "13292:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "13300:3:9",
														"type": ""
													}
												],
												"src": "13158:366:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13676:220:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13686:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13752:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13757:2:9",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13693:58:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13693:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "13686:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13858:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2",
																	"nodeType": "YulIdentifier",
																	"src": "13769:88:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13769:93:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13769:93:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13871:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13882:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13887:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13878:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13878:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "13871:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "13664:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "13672:3:9",
														"type": ""
													}
												],
												"src": "13530:366:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14048:220:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14058:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14124:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14129:2:9",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14065:58:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14065:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "14058:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14230:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5",
																	"nodeType": "YulIdentifier",
																	"src": "14141:88:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14141:93:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14141:93:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14243:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14254:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14259:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14250:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14250:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "14243:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "14036:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "14044:3:9",
														"type": ""
													}
												],
												"src": "13902:366:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14420:220:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14430:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14496:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14501:2:9",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14437:58:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14437:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "14430:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14602:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																	"nodeType": "YulIdentifier",
																	"src": "14513:88:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14513:93:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14513:93:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14615:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14626:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14631:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14622:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14622:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "14615:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "14408:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "14416:3:9",
														"type": ""
													}
												],
												"src": "14274:366:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14792:220:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14802:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14868:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14873:2:9",
																		"type": "",
																		"value": "52"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14809:58:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14809:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "14802:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14974:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_f591f7b75ffc499e05f8b34c3364b2eceff651378d9549db1d5d67c0d8255c5d",
																	"nodeType": "YulIdentifier",
																	"src": "14885:88:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14885:93:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14885:93:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14987:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14998:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15003:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14994:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14994:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "14987:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_f591f7b75ffc499e05f8b34c3364b2eceff651378d9549db1d5d67c0d8255c5d_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "14780:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "14788:3:9",
														"type": ""
													}
												],
												"src": "14646:366:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15073:53:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15090:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "15113:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "15095:17:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15095:24:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15083:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "15083:37:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15083:37:9"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "15061:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "15068:3:9",
														"type": ""
													}
												],
												"src": "15018:108:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15197:53:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15214:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "15237:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "15219:17:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15219:24:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15207:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "15207:37:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15207:37:9"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "15185:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "15192:3:9",
														"type": ""
													}
												],
												"src": "15132:118:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15584:725:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15594:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15606:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15617:3:9",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15602:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "15602:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15594:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "15675:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15688:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15699:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15684:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15684:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15631:43:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "15631:71:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15631:71:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "15756:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15769:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15780:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15765:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15765:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15712:43:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "15712:72:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15712:72:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15805:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15816:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15801:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15801:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "15825:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15831:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "15821:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15821:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15794:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "15794:48:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15794:48:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15851:116:9",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "15953:6:9"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "15962:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15859:93:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "15859:108:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15851:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15988:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15999:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15984:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15984:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "16008:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16014:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "16004:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16004:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15977:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "15977:48:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15977:48:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16034:116:9",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "16136:6:9"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "16145:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16042:93:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "16042:108:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16034:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16171:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16182:3:9",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16167:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16167:19:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "16192:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16198:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "16188:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16188:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16160:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "16160:49:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16160:49:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16218:84:9",
															"value": {
																"arguments": [
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "16288:6:9"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "16297:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16226:61:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "16226:76:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16218:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15524:9:9",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "15536:6:9",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "15544:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "15552:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "15560:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "15568:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15579:4:9",
														"type": ""
													}
												],
												"src": "15256:1053:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16543:523:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16553:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16565:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16576:3:9",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16561:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "16561:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16553:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "16634:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16647:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16658:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16643:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16643:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16590:43:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "16590:71:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16590:71:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "16715:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16728:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16739:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16724:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16724:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16671:43:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "16671:72:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16671:72:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "16797:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16810:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16821:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16806:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16806:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16753:43:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "16753:72:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16753:72:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "16879:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16892:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16903:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16888:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16888:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16835:43:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "16835:72:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16835:72:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16928:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16939:3:9",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16924:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16924:19:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "16949:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16955:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "16945:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16945:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16917:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "16917:49:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16917:49:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16975:84:9",
															"value": {
																"arguments": [
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "17045:6:9"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "17054:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16983:61:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "16983:76:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16975:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16483:9:9",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "16495:6:9",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "16503:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "16511:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "16519:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "16527:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16538:4:9",
														"type": ""
													}
												],
												"src": "16315:751:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17220:225:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17230:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17242:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17253:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17238:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "17238:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17230:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17277:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17288:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17273:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17273:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "17296:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17302:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "17292:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17292:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17266:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "17266:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17266:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17322:116:9",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "17424:6:9"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "17433:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17330:93:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "17330:108:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17322:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "17192:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "17204:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "17215:4:9",
														"type": ""
													}
												],
												"src": "17072:373:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17677:408:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17687:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17699:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17710:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17695:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "17695:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17687:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17734:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17745:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17730:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17730:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "17753:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17759:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "17749:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17749:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17723:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "17723:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17723:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17779:116:9",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "17881:6:9"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "17890:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17787:93:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "17787:108:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17779:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17916:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17927:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17912:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17912:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "17936:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17942:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "17932:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17932:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17905:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "17905:48:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17905:48:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17962:116:9",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "18064:6:9"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "18073:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17970:93:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "17970:108:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17962:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "17641:9:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "17653:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "17661:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "17672:4:9",
														"type": ""
													}
												],
												"src": "17451:634:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18183:118:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18193:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18205:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18216:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18201:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "18201:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18193:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "18267:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18280:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18291:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18276:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18276:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "18229:37:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "18229:65:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18229:65:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "18155:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "18167:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "18178:4:9",
														"type": ""
													}
												],
												"src": "18091:210:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18425:195:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18435:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18447:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18458:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18443:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "18443:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18435:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18482:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18493:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18478:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18478:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "18501:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18507:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "18497:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18497:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18471:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "18471:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18471:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18527:86:9",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "18599:6:9"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "18608:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "18535:63:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "18535:78:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18527:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "18397:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "18409:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "18420:4:9",
														"type": ""
													}
												],
												"src": "18307:313:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18797:248:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18807:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18819:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18830:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18815:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "18815:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18807:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18854:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18865:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18850:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18850:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "18873:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18879:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "18869:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18869:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18843:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "18843:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18843:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18899:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "19033:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "18907:124:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "18907:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18899:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "18777:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "18792:4:9",
														"type": ""
													}
												],
												"src": "18626:419:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19222:248:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19232:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "19244:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19255:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "19240:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "19240:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "19232:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19279:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19290:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19275:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19275:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "19298:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19304:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "19294:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19294:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19268:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "19268:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19268:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19324:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "19458:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_415a1b99e1fd4a18cf87c08995f5a9130182e8d76e9c17c497bfebaaef9265ad_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "19332:124:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "19332:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "19324:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_415a1b99e1fd4a18cf87c08995f5a9130182e8d76e9c17c497bfebaaef9265ad__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "19202:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "19217:4:9",
														"type": ""
													}
												],
												"src": "19051:419:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19647:248:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19657:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "19669:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19680:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "19665:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "19665:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "19657:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19704:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19715:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19700:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19700:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "19723:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19729:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "19719:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19719:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19693:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "19693:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19693:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19749:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "19883:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_47c72b42072ed6c647dec3a0a5c88bec44d3e901c64659bff94ecce0a0323156_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "19757:124:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "19757:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "19749:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_47c72b42072ed6c647dec3a0a5c88bec44d3e901c64659bff94ecce0a0323156__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "19627:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "19642:4:9",
														"type": ""
													}
												],
												"src": "19476:419:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20072:248:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20082:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "20094:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20105:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "20090:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "20090:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "20082:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20129:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20140:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20125:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20125:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "20148:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20154:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "20144:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20144:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20118:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "20118:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20118:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "20174:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "20308:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "20182:124:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "20182:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "20174:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "20052:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "20067:4:9",
														"type": ""
													}
												],
												"src": "19901:419:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20497:248:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20507:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "20519:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20530:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "20515:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "20515:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "20507:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20554:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20565:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20550:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20550:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "20573:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20579:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "20569:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20569:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20543:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "20543:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20543:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "20599:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "20733:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "20607:124:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "20607:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "20599:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "20477:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "20492:4:9",
														"type": ""
													}
												],
												"src": "20326:419:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20922:248:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20932:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "20944:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20955:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "20940:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "20940:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "20932:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20979:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20990:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20975:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20975:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "20998:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21004:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "20994:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20994:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20968:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "20968:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20968:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "21024:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "21158:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "21032:124:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "21032:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "21024:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "20902:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "20917:4:9",
														"type": ""
													}
												],
												"src": "20751:419:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21347:248:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "21357:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "21369:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21380:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "21365:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "21365:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "21357:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21404:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21415:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21400:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21400:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "21423:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21429:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "21419:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21419:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21393:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "21393:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21393:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "21449:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "21583:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "21457:124:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "21457:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "21449:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "21327:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "21342:4:9",
														"type": ""
													}
												],
												"src": "21176:419:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21772:248:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "21782:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "21794:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21805:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "21790:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "21790:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "21782:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21829:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21840:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21825:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21825:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "21848:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21854:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "21844:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21844:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21818:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "21818:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21818:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "21874:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "22008:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "21882:124:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "21882:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "21874:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "21752:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "21767:4:9",
														"type": ""
													}
												],
												"src": "21601:419:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22197:248:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "22207:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "22219:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22230:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "22215:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "22215:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "22207:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22254:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22265:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22250:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22250:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "22273:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22279:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "22269:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22269:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22243:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "22243:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22243:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "22299:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "22433:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_f591f7b75ffc499e05f8b34c3364b2eceff651378d9549db1d5d67c0d8255c5d_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "22307:124:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "22307:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "22299:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f591f7b75ffc499e05f8b34c3364b2eceff651378d9549db1d5d67c0d8255c5d__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "22177:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "22192:4:9",
														"type": ""
													}
												],
												"src": "22026:419:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22549:124:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "22559:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "22571:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22582:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "22567:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "22567:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "22559:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "22639:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22652:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22663:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22648:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22648:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "22595:43:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "22595:71:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22595:71:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "22521:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "22533:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "22544:4:9",
														"type": ""
													}
												],
												"src": "22451:222:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22805:206:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "22815:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "22827:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22838:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "22823:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "22823:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "22815:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "22895:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22908:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22919:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22904:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22904:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "22851:43:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "22851:71:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22851:71:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "22976:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22989:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23000:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22985:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22985:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "22932:43:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "22932:72:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22932:72:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "22769:9:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "22781:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "22789:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "22800:4:9",
														"type": ""
													}
												],
												"src": "22679:332:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23058:88:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "23068:30:9",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "23078:18:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "23078:20:9"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "23068:6:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "23127:6:9"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "23135:4:9"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "23107:19:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "23107:33:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23107:33:9"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "23042:4:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "23051:6:9",
														"type": ""
													}
												],
												"src": "23017:129:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23192:35:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "23202:19:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23218:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "23212:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "23212:9:9"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "23202:6:9"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "23185:6:9",
														"type": ""
													}
												],
												"src": "23152:75:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23315:229:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "23420:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "23422:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "23422:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "23422:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "23392:6:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23400:18:9",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "23389:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "23389:30:9"
															},
															"nodeType": "YulIf",
															"src": "23386:56:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "23452:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "23464:6:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23472:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "23460:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "23460:17:9"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "23452:4:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "23514:23:9",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "23526:4:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23532:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "23522:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "23522:15:9"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "23514:4:9"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_array$_t_address_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "23299:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "23310:4:9",
														"type": ""
													}
												],
												"src": "23233:311:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23632:229:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "23737:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "23739:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "23739:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "23739:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "23709:6:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23717:18:9",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "23706:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "23706:30:9"
															},
															"nodeType": "YulIf",
															"src": "23703:56:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "23769:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "23781:6:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23789:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "23777:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "23777:17:9"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "23769:4:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "23831:23:9",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "23843:4:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23849:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "23839:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "23839:15:9"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "23831:4:9"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "23616:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "23627:4:9",
														"type": ""
													}
												],
												"src": "23550:311:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23933:241:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "24038:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "24040:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "24040:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "24040:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "24010:6:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24018:18:9",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "24007:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "24007:30:9"
															},
															"nodeType": "YulIf",
															"src": "24004:56:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "24070:37:9",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "24100:6:9"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nodeType": "YulIdentifier",
																	"src": "24078:21:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "24078:29:9"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "24070:4:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "24144:23:9",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "24156:4:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24162:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "24152:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "24152:15:9"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "24144:4:9"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "23917:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "23928:4:9",
														"type": ""
													}
												],
												"src": "23867:307:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24252:60:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "24262:11:9",
															"value": {
																"name": "ptr",
																"nodeType": "YulIdentifier",
																"src": "24270:3:9"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "24262:4:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "24283:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "24295:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24300:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "24291:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "24291:14:9"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "24283:4:9"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "24239:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "24247:4:9",
														"type": ""
													}
												],
												"src": "24180:132:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24392:40:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "24403:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "24419:5:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "24413:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "24413:12:9"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "24403:6:9"
																}
															]
														}
													]
												},
												"name": "array_length_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "24375:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "24385:6:9",
														"type": ""
													}
												],
												"src": "24318:114:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24496:40:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "24507:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "24523:5:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "24517:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "24517:12:9"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "24507:6:9"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "24479:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "24489:6:9",
														"type": ""
													}
												],
												"src": "24438:98:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24601:40:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "24612:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "24628:5:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "24622:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "24622:12:9"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "24612:6:9"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "24584:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "24594:6:9",
														"type": ""
													}
												],
												"src": "24542:99:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24722:38:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "24732:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "24744:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24749:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "24740:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "24740:14:9"
															},
															"variableNames": [
																{
																	"name": "next",
																	"nodeType": "YulIdentifier",
																	"src": "24732:4:9"
																}
															]
														}
													]
												},
												"name": "array_nextElement_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "24709:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "next",
														"nodeType": "YulTypedName",
														"src": "24717:4:9",
														"type": ""
													}
												],
												"src": "24647:113:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24877:73:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "24894:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "24899:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "24887:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "24887:19:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24887:19:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "24915:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "24934:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24939:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "24930:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "24930:14:9"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "24915:11:9"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "24849:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "24854:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "24865:11:9",
														"type": ""
													}
												],
												"src": "24766:184:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25051:73:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "25068:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "25073:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "25061:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "25061:19:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25061:19:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "25089:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "25108:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25113:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "25104:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "25104:14:9"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "25089:11:9"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "25023:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "25028:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "25039:11:9",
														"type": ""
													}
												],
												"src": "24956:168:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25226:73:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "25243:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "25248:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "25236:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "25236:19:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25236:19:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "25264:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "25283:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25288:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "25279:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "25279:14:9"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "25264:11:9"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "25198:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "25203:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "25214:11:9",
														"type": ""
													}
												],
												"src": "25130:169:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25349:261:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "25359:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "25382:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "25364:17:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "25364:20:9"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "25359:1:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "25393:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "25416:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "25398:17:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "25398:20:9"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "25393:1:9"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "25556:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "25558:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "25558:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "25558:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "25477:1:9"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "25484:66:9",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "25552:1:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "25480:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25480:74:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "25474:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "25474:81:9"
															},
															"nodeType": "YulIf",
															"src": "25471:107:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "25588:16:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "25599:1:9"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "25602:1:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "25595:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "25595:9:9"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "25588:3:9"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "25336:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "25339:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "25345:3:9",
														"type": ""
													}
												],
												"src": "25305:305:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25661:51:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "25671:35:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "25700:5:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "25682:17:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "25682:24:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "25671:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "25643:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "25653:7:9",
														"type": ""
													}
												],
												"src": "25616:96:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25760:48:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "25770:32:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "25795:5:9"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "25788:6:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25788:13:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "25781:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "25781:21:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "25770:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "25742:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "25752:7:9",
														"type": ""
													}
												],
												"src": "25718:90:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25858:105:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "25868:89:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "25883:5:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25890:66:9",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "25879:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "25879:78:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "25868:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "25840:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "25850:7:9",
														"type": ""
													}
												],
												"src": "25814:149:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26014:81:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "26024:65:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "26039:5:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26046:42:9",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "26035:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "26035:54:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "26024:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "25996:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "26006:7:9",
														"type": ""
													}
												],
												"src": "25969:126:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26146:32:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "26156:16:9",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "26167:5:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "26156:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "26128:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "26138:7:9",
														"type": ""
													}
												],
												"src": "26101:77:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26235:103:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "26258:3:9"
																	},
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "26263:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "26268:6:9"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "26245:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "26245:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "26245:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "26316:3:9"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "26321:6:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "26312:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "26312:16:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26330:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "26305:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "26305:27:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "26305:27:9"
														}
													]
												},
												"name": "copy_calldata_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "26217:3:9",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "26222:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "26227:6:9",
														"type": ""
													}
												],
												"src": "26184:154:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26393:258:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "26403:10:9",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "26412:1:9",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "26407:1:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "26472:63:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "26497:3:9"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "26502:1:9"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "26493:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "26493:11:9"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "26516:3:9"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "26521:1:9"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "26512:3:9"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "26512:11:9"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "26506:5:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "26506:18:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "26486:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "26486:39:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "26486:39:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "26433:1:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "26436:6:9"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "26430:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "26430:13:9"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "26444:19:9",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "26446:15:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "26455:1:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "26458:2:9",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "26451:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "26451:10:9"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "26446:1:9"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "26426:3:9",
																"statements": []
															},
															"src": "26422:113:9"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "26569:76:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "26619:3:9"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "26624:6:9"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "26615:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "26615:16:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "26633:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "26608:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "26608:27:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "26608:27:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "26550:1:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "26553:6:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "26547:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "26547:13:9"
															},
															"nodeType": "YulIf",
															"src": "26544:101:9"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "26375:3:9",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "26380:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "26385:6:9",
														"type": ""
													}
												],
												"src": "26344:307:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26708:269:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "26718:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "26732:4:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26738:1:9",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "26728:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "26728:12:9"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "26718:6:9"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "26749:38:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "26779:4:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26785:1:9",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "26775:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "26775:12:9"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "26753:18:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "26826:51:9",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "26840:27:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "26854:6:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "26862:4:9",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "26850:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "26850:17:9"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "26840:6:9"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "26806:18:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "26799:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "26799:26:9"
															},
															"nodeType": "YulIf",
															"src": "26796:81:9"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "26929:42:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "26943:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "26943:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "26943:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "26893:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "26916:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "26924:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "26913:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "26913:14:9"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "26890:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "26890:38:9"
															},
															"nodeType": "YulIf",
															"src": "26887:84:9"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "26692:4:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "26701:6:9",
														"type": ""
													}
												],
												"src": "26657:320:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "27026:238:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "27036:58:9",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "27058:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "27088:4:9"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "27066:21:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27066:27:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "27054:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "27054:40:9"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "27040:10:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "27205:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "27207:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "27207:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "27207:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "27148:10:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "27160:18:9",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "27145:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27145:34:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "27184:10:9"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "27196:6:9"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "27181:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27181:22:9"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "27142:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "27142:62:9"
															},
															"nodeType": "YulIf",
															"src": "27139:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27243:2:9",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "27247:10:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "27236:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "27236:22:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27236:22:9"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "27012:6:9",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "27020:4:9",
														"type": ""
													}
												],
												"src": "26983:281:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "27313:190:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "27323:33:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "27350:5:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "27332:17:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "27332:24:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "27323:5:9"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "27446:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "27448:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "27448:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "27448:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "27371:5:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27378:66:9",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "27368:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "27368:77:9"
															},
															"nodeType": "YulIf",
															"src": "27365:103:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "27477:20:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "27488:5:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27495:1:9",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "27484:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "27484:13:9"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "27477:3:9"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "27299:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "27309:3:9",
														"type": ""
													}
												],
												"src": "27270:233:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "27537:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27554:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27557:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "27547:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "27547:88:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27547:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27651:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27654:4:9",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "27644:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "27644:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27644:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27675:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27678:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "27668:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "27668:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27668:15:9"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "27509:180:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "27723:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27740:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27743:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "27733:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "27733:88:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27733:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27837:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27840:4:9",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "27830:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "27830:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27830:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27861:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27864:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "27854:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "27854:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27854:15:9"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "27695:180:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "27909:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27926:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27929:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "27919:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "27919:88:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27919:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "28023:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "28026:4:9",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "28016:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "28016:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "28016:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "28047:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "28050:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "28040:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "28040:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "28040:15:9"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "27881:180:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "28095:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "28112:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "28115:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "28105:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "28105:88:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "28105:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "28209:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "28212:4:9",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "28202:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "28202:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "28202:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "28233:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "28236:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "28226:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "28226:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "28226:15:9"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "28067:180:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "28292:144:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "28329:101:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "28358:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "28361:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "28364:1:9",
																					"type": "",
																					"value": "4"
																				}
																			],
																			"functionName": {
																				"name": "returndatacopy",
																				"nodeType": "YulIdentifier",
																				"src": "28343:14:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "28343:23:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "28343:23:9"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "28379:41:9",
																		"value": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "28417:1:9",
																							"type": "",
																							"value": "0"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "28411:5:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "28411:8:9"
																				}
																			],
																			"functionName": {
																				"name": "shift_right_224_unsigned",
																				"nodeType": "YulIdentifier",
																				"src": "28386:24:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "28386:34:9"
																		},
																		"variableNames": [
																			{
																				"name": "sig",
																				"nodeType": "YulIdentifier",
																				"src": "28379:3:9"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "returndatasize",
																			"nodeType": "YulIdentifier",
																			"src": "28308:14:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28308:16:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "28326:1:9",
																		"type": "",
																		"value": "3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "28305:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "28305:23:9"
															},
															"nodeType": "YulIf",
															"src": "28302:128:9"
														}
													]
												},
												"name": "return_data_selector",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "sig",
														"nodeType": "YulTypedName",
														"src": "28288:3:9",
														"type": ""
													}
												],
												"src": "28253:183:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "28531:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "28548:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "28551:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "28541:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "28541:12:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "28541:12:9"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "28442:117:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "28654:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "28671:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "28674:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "28664:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "28664:12:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "28664:12:9"
														}
													]
												},
												"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
												"nodeType": "YulFunctionDefinition",
												"src": "28565:117:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "28777:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "28794:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "28797:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "28787:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "28787:12:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "28787:12:9"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nodeType": "YulFunctionDefinition",
												"src": "28688:117:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "28900:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "28917:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "28920:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "28910:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "28910:12:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "28910:12:9"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "28811:117:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "29023:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "29040:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "29043:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "29033:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "29033:12:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "29033:12:9"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "28934:117:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "29105:54:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "29115:38:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "29133:5:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "29140:2:9",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "29129:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29129:14:9"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "29149:2:9",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "29145:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29145:7:9"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "29125:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "29125:28:9"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "29115:6:9"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "29088:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "29098:6:9",
														"type": ""
													}
												],
												"src": "29057:102:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "29218:53:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "29228:36:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "29253:3:9",
																		"type": "",
																		"value": "224"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "29258:5:9"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "29249:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "29249:15:9"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "29228:8:9"
																}
															]
														}
													]
												},
												"name": "shift_right_224_unsigned",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "29199:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "29209:8:9",
														"type": ""
													}
												],
												"src": "29165:106:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "29383:121:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "29405:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "29413:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "29401:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29401:14:9"
																	},
																	{
																		"hexValue": "455243313135353a204552433131353552656365697665722072656a65637465",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "29417:34:9",
																		"type": "",
																		"value": "ERC1155: ERC1155Receiver rejecte"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "29394:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "29394:58:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "29394:58:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "29473:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "29481:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "29469:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29469:15:9"
																	},
																	{
																		"hexValue": "6420746f6b656e73",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "29486:10:9",
																		"type": "",
																		"value": "d tokens"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "29462:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "29462:35:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "29462:35:9"
														}
													]
												},
												"name": "store_literal_in_memory_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "29375:6:9",
														"type": ""
													}
												],
												"src": "29277:227:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "29616:123:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "29638:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "29646:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "29634:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29634:14:9"
																	},
																	{
																		"hexValue": "455243313135353a2061646472657373207a65726f206973206e6f7420612076",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "29650:34:9",
																		"type": "",
																		"value": "ERC1155: address zero is not a v"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "29627:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "29627:58:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "29627:58:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "29706:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "29714:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "29702:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29702:15:9"
																	},
																	{
																		"hexValue": "616c6964206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "29719:12:9",
																		"type": "",
																		"value": "alid owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "29695:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "29695:37:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "29695:37:9"
														}
													]
												},
												"name": "store_literal_in_memory_415a1b99e1fd4a18cf87c08995f5a9130182e8d76e9c17c497bfebaaef9265ad",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "29608:6:9",
														"type": ""
													}
												],
												"src": "29510:229:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "29851:127:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "29873:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "29881:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "29869:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29869:14:9"
																	},
																	{
																		"hexValue": "455243313135353a2063616c6c6572206973206e6f7420746f6b656e206f776e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "29885:34:9",
																		"type": "",
																		"value": "ERC1155: caller is not token own"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "29862:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "29862:58:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "29862:58:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "29941:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "29949:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "29937:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29937:15:9"
																	},
																	{
																		"hexValue": "6572206f7220617070726f766564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "29954:16:9",
																		"type": "",
																		"value": "er or approved"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "29930:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "29930:41:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "29930:41:9"
														}
													]
												},
												"name": "store_literal_in_memory_47c72b42072ed6c647dec3a0a5c88bec44d3e901c64659bff94ecce0a0323156",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "29843:6:9",
														"type": ""
													}
												],
												"src": "29745:233:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "30090:118:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "30112:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "30120:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "30108:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "30108:14:9"
																	},
																	{
																		"hexValue": "455243313135353a207472616e7366657220746f20746865207a65726f206164",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "30124:34:9",
																		"type": "",
																		"value": "ERC1155: transfer to the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "30101:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "30101:58:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "30101:58:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "30180:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "30188:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "30176:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "30176:15:9"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "30193:7:9",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "30169:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "30169:32:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "30169:32:9"
														}
													]
												},
												"name": "store_literal_in_memory_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "30082:6:9",
														"type": ""
													}
												],
												"src": "29984:224:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "30320:123:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "30342:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "30350:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "30338:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "30338:14:9"
																	},
																	{
																		"hexValue": "455243313135353a20696e73756666696369656e742062616c616e636520666f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "30354:34:9",
																		"type": "",
																		"value": "ERC1155: insufficient balance fo"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "30331:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "30331:58:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "30331:58:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "30410:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "30418:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "30406:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "30406:15:9"
																	},
																	{
																		"hexValue": "72207472616e73666572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "30423:12:9",
																		"type": "",
																		"value": "r transfer"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "30399:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "30399:37:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "30399:37:9"
														}
													]
												},
												"name": "store_literal_in_memory_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "30312:6:9",
														"type": ""
													}
												],
												"src": "30214:229:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "30555:122:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "30577:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "30585:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "30573:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "30573:14:9"
																	},
																	{
																		"hexValue": "455243313135353a2073657474696e6720617070726f76616c20737461747573",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "30589:34:9",
																		"type": "",
																		"value": "ERC1155: setting approval status"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "30566:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "30566:58:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "30566:58:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "30645:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "30653:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "30641:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "30641:15:9"
																	},
																	{
																		"hexValue": "20666f722073656c66",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "30658:11:9",
																		"type": "",
																		"value": " for self"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "30634:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "30634:36:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "30634:36:9"
														}
													]
												},
												"name": "store_literal_in_memory_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "30547:6:9",
														"type": ""
													}
												],
												"src": "30449:228:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "30789:122:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "30811:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "30819:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "30807:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "30807:14:9"
																	},
																	{
																		"hexValue": "455243313135353a206163636f756e747320616e6420696473206c656e677468",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "30823:34:9",
																		"type": "",
																		"value": "ERC1155: accounts and ids length"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "30800:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "30800:58:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "30800:58:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "30879:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "30887:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "30875:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "30875:15:9"
																	},
																	{
																		"hexValue": "206d69736d61746368",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "30892:11:9",
																		"type": "",
																		"value": " mismatch"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "30868:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "30868:36:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "30868:36:9"
														}
													]
												},
												"name": "store_literal_in_memory_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "30781:6:9",
														"type": ""
													}
												],
												"src": "30683:228:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "31023:121:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "31045:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "31053:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "31041:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "31041:14:9"
																	},
																	{
																		"hexValue": "455243313135353a2069647320616e6420616d6f756e7473206c656e67746820",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "31057:34:9",
																		"type": "",
																		"value": "ERC1155: ids and amounts length "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "31034:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "31034:58:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "31034:58:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "31113:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "31121:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "31109:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "31109:15:9"
																	},
																	{
																		"hexValue": "6d69736d61746368",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "31126:10:9",
																		"type": "",
																		"value": "mismatch"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "31102:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "31102:35:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "31102:35:9"
														}
													]
												},
												"name": "store_literal_in_memory_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "31015:6:9",
														"type": ""
													}
												],
												"src": "30917:227:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "31256:133:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "31278:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "31286:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "31274:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "31274:14:9"
																	},
																	{
																		"hexValue": "455243313135353a207472616e7366657220746f206e6f6e2d45524331313535",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "31290:34:9",
																		"type": "",
																		"value": "ERC1155: transfer to non-ERC1155"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "31267:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "31267:58:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "31267:58:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "31346:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "31354:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "31342:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "31342:15:9"
																	},
																	{
																		"hexValue": "526563656976657220696d706c656d656e746572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "31359:22:9",
																		"type": "",
																		"value": "Receiver implementer"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "31335:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "31335:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "31335:47:9"
														}
													]
												},
												"name": "store_literal_in_memory_f591f7b75ffc499e05f8b34c3364b2eceff651378d9549db1d5d67c0d8255c5d",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "31248:6:9",
														"type": ""
													}
												],
												"src": "31150:239:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "31438:668:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "31478:9:9",
																"statements": [
																	{
																		"nodeType": "YulLeave",
																		"src": "31480:5:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "returndatasize",
																			"nodeType": "YulIdentifier",
																			"src": "31454:14:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "31454:16:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "31472:4:9",
																		"type": "",
																		"value": "0x44"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "31451:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "31451:26:9"
															},
															"nodeType": "YulIf",
															"src": "31448:39:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "31497:32:9",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "31509:18:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "31509:20:9"
															},
															"variables": [
																{
																	"name": "data",
																	"nodeType": "YulTypedName",
																	"src": "31501:4:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "31553:4:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "31559:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [],
																				"functionName": {
																					"name": "returndatasize",
																					"nodeType": "YulIdentifier",
																					"src": "31566:14:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "31566:16:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "31584:1:9",
																				"type": "",
																				"value": "4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "31562:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "31562:24:9"
																	}
																],
																"functionName": {
																	"name": "returndatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "31538:14:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "31538:49:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "31538:49:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "31597:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "31617:4:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "31611:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "31611:11:9"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "31601:6:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "31748:29:9",
																"statements": [
																	{
																		"nodeType": "YulLeave",
																		"src": "31762:5:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "31653:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "31661:18:9",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "31650:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "31650:30:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "31701:6:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "31709:4:9",
																						"type": "",
																						"value": "0x24"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "31697:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "31697:17:9"
																			},
																			{
																				"arguments": [],
																				"functionName": {
																					"name": "returndatasize",
																					"nodeType": "YulIdentifier",
																					"src": "31716:14:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "31716:16:9"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "31694:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "31694:39:9"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "31634:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "31634:113:9"
															},
															"nodeType": "YulIf",
															"src": "31631:146:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "31787:28:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "31802:4:9"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "31808:6:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "31798:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "31798:17:9"
															},
															"variables": [
																{
																	"name": "msg",
																	"nodeType": "YulTypedName",
																	"src": "31791:3:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "31824:24:9",
															"value": {
																"arguments": [
																	{
																		"name": "msg",
																		"nodeType": "YulIdentifier",
																		"src": "31844:3:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "31838:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "31838:10:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "31828:6:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "31891:9:9",
																"statements": [
																	{
																		"nodeType": "YulLeave",
																		"src": "31893:5:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "31863:6:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "31871:18:9",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "31860:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "31860:30:9"
															},
															"nodeType": "YulIf",
															"src": "31857:43:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "31910:38:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "msg",
																				"nodeType": "YulIdentifier",
																				"src": "31929:3:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "31934:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "31925:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "31925:14:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "31941:6:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "31921:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "31921:27:9"
															},
															"variables": [
																{
																	"name": "end",
																	"nodeType": "YulTypedName",
																	"src": "31914:3:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "32005:9:9",
																"statements": [
																	{
																		"nodeType": "YulLeave",
																		"src": "32007:5:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "31963:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nodeType": "YulIdentifier",
																				"src": "31972:4:9"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [],
																						"functionName": {
																							"name": "returndatasize",
																							"nodeType": "YulIdentifier",
																							"src": "31982:14:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "31982:16:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "32000:1:9",
																						"type": "",
																						"value": "4"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "31978:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "31978:24:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "31968:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "31968:35:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "31960:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "31960:44:9"
															},
															"nodeType": "YulIf",
															"src": "31957:57:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "32044:4:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "32054:6:9"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "32066:4:9",
																						"type": "",
																						"value": "0x20"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "32072:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "32062:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "32062:17:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "32050:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "32050:30:9"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "32024:19:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "32024:57:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "32024:57:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "32090:10:9",
															"value": {
																"name": "msg",
																"nodeType": "YulIdentifier",
																"src": "32097:3:9"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "32090:3:9"
																}
															]
														}
													]
												},
												"name": "try_decode_error_message",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "31434:3:9",
														"type": ""
													}
												],
												"src": "31395:711:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "32155:79:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "32212:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "32221:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "32224:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "32214:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "32214:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "32214:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "32178:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "32203:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "32185:17:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "32185:24:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "32175:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "32175:35:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "32168:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "32168:43:9"
															},
															"nodeType": "YulIf",
															"src": "32165:63:9"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "32148:5:9",
														"type": ""
													}
												],
												"src": "32112:122:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "32280:76:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "32334:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "32343:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "32346:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "32336:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "32336:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "32336:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "32303:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "32325:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "32310:14:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "32310:21:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "32300:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "32300:32:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "32293:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "32293:40:9"
															},
															"nodeType": "YulIf",
															"src": "32290:60:9"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "32273:5:9",
														"type": ""
													}
												],
												"src": "32240:116:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "32404:78:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "32460:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "32469:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "32472:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "32462:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "32462:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "32462:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "32427:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "32451:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nodeType": "YulIdentifier",
																					"src": "32434:16:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "32434:23:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "32424:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "32424:34:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "32417:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "32417:42:9"
															},
															"nodeType": "YulIf",
															"src": "32414:62:9"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "32397:5:9",
														"type": ""
													}
												],
												"src": "32362:120:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "32531:79:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "32588:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "32597:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "32600:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "32590:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "32590:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "32590:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "32554:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "32579:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "32561:17:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "32561:24:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "32551:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "32551:35:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "32544:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "32544:43:9"
															},
															"nodeType": "YulIf",
															"src": "32541:63:9"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "32524:5:9",
														"type": ""
													}
												],
												"src": "32488:122:9"
											}
										]
									},
									"contents": "{\n\n    // address[]\n    function abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_address_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let src := offset\n        if gt(add(src, mul(length, 0x20)), end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_address(elementPos, end))\n            dst := add(dst, 0x20)\n            src := add(src, 0x20)\n        }\n    }\n\n    // uint256[]\n    function abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let src := offset\n        if gt(add(src, mul(length, 0x20)), end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_uint256(elementPos, end))\n            dst := add(dst, 0x20)\n            src := add(src, 0x20)\n        }\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory(src, dst, length)\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    // address[]\n    function abi_decode_t_array$_t_address_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    // uint256[]\n    function abi_decode_t_array$_t_uint256_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_t_bytes4_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 128))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value4 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 128))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value4 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_array$_t_address_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encodeUpdatedPos_t_uint256_to_t_uint256(value0, pos) -> updatedPos {\n        abi_encode_t_uint256_to_t_uint256(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    // uint256[] -> uint256[]\n    function abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_uint256_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_uint256_to_t_uint256(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 40)\n        store_literal_in_memory_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_415a1b99e1fd4a18cf87c08995f5a9130182e8d76e9c17c497bfebaaef9265ad_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 42)\n        store_literal_in_memory_415a1b99e1fd4a18cf87c08995f5a9130182e8d76e9c17c497bfebaaef9265ad(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_47c72b42072ed6c647dec3a0a5c88bec44d3e901c64659bff94ecce0a0323156_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 46)\n        store_literal_in_memory_47c72b42072ed6c647dec3a0a5c88bec44d3e901c64659bff94ecce0a0323156(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 42)\n        store_literal_in_memory_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 41)\n        store_literal_in_memory_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 41)\n        store_literal_in_memory_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 40)\n        store_literal_in_memory_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_f591f7b75ffc499e05f8b34c3364b2eceff651378d9549db1d5d67c0d8255c5d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 52)\n        store_literal_in_memory_f591f7b75ffc499e05f8b34c3364b2eceff651378d9549db1d5d67c0d8255c5d(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value2,  tail)\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value3,  tail)\n\n        mstore(add(headStart, 128), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value4,  tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        mstore(add(headStart, 128), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value4,  tail)\n\n    }\n\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value0,  tail)\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value1,  tail)\n\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_415a1b99e1fd4a18cf87c08995f5a9130182e8d76e9c17c497bfebaaef9265ad__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_415a1b99e1fd4a18cf87c08995f5a9130182e8d76e9c17c497bfebaaef9265ad_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_47c72b42072ed6c647dec3a0a5c88bec44d3e901c64659bff94ecce0a0323156__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_47c72b42072ed6c647dec3a0a5c88bec44d3e901c64659bff94ecce0a0323156_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_f591f7b75ffc499e05f8b34c3364b2eceff651378d9549db1d5d67c0d8255c5d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f591f7b75ffc499e05f8b34c3364b2eceff651378d9549db1d5d67c0d8255c5d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_allocation_size_t_array$_t_address_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function array_length_t_array$_t_uint256_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function copy_calldata_to_memory(src, dst, length) {\n        calldatacopy(dst, src, length)\n        // clear end\n        mstore(add(dst, length), 0)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function return_data_selector() -> sig {\n        if gt(returndatasize(), 3) {\n            returndatacopy(0, 0, 4)\n            sig := shift_right_224_unsigned(mload(0))\n        }\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function shift_right_224_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(224, value)\n\n    }\n\n    function store_literal_in_memory_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1155: ERC1155Receiver rejecte\")\n\n        mstore(add(memPtr, 32), \"d tokens\")\n\n    }\n\n    function store_literal_in_memory_415a1b99e1fd4a18cf87c08995f5a9130182e8d76e9c17c497bfebaaef9265ad(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1155: address zero is not a v\")\n\n        mstore(add(memPtr, 32), \"alid owner\")\n\n    }\n\n    function store_literal_in_memory_47c72b42072ed6c647dec3a0a5c88bec44d3e901c64659bff94ecce0a0323156(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1155: caller is not token own\")\n\n        mstore(add(memPtr, 32), \"er or approved\")\n\n    }\n\n    function store_literal_in_memory_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1155: transfer to the zero ad\")\n\n        mstore(add(memPtr, 32), \"dress\")\n\n    }\n\n    function store_literal_in_memory_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1155: insufficient balance fo\")\n\n        mstore(add(memPtr, 32), \"r transfer\")\n\n    }\n\n    function store_literal_in_memory_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1155: setting approval status\")\n\n        mstore(add(memPtr, 32), \" for self\")\n\n    }\n\n    function store_literal_in_memory_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1155: accounts and ids length\")\n\n        mstore(add(memPtr, 32), \" mismatch\")\n\n    }\n\n    function store_literal_in_memory_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1155: ids and amounts length \")\n\n        mstore(add(memPtr, 32), \"mismatch\")\n\n    }\n\n    function store_literal_in_memory_f591f7b75ffc499e05f8b34c3364b2eceff651378d9549db1d5d67c0d8255c5d(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1155: transfer to non-ERC1155\")\n\n        mstore(add(memPtr, 32), \"Receiver implementer\")\n\n    }\n\n    function try_decode_error_message() -> ret {\n        if lt(returndatasize(), 0x44) { leave }\n\n        let data := allocate_unbounded()\n        returndatacopy(data, 4, sub(returndatasize(), 4))\n\n        let offset := mload(data)\n        if or(\n            gt(offset, 0xffffffffffffffff),\n            gt(add(offset, 0x24), returndatasize())\n            ) {\n            leave\n        }\n\n        let msg := add(data, offset)\n        let length := mload(msg)\n        if gt(length, 0xffffffffffffffff) { leave }\n\n        let end := add(add(msg, 0x20), length)\n        if gt(end, add(data, sub(returndatasize(), 4))) { leave }\n\n        finalize_allocation(data, add(offset, add(0x20, length)))\n        ret := msg\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 9,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100875760003560e01c80634e1273f41161005b5780634e1273f414610138578063a22cb46514610168578063e985e9c514610184578063f242432a146101b457610087565b8062fdd58e1461008c57806301ffc9a7146100bc5780630e89341c146100ec5780632eb2c2d61461011c575b600080fd5b6100a660048036038101906100a1919061172e565b6101d0565b6040516100b39190611d44565b60405180910390f35b6100d660048036038101906100d191906117e6565b61029a565b6040516100e39190611be7565b60405180910390f35b61010660048036038101906101019190611840565b61037c565b6040516101139190611c02565b60405180910390f35b61013660048036038101906101319190611588565b610410565b005b610152600480360381019061014d919061176e565b6104b1565b60405161015f9190611b8e565b60405180910390f35b610182600480360381019061017d91906116ee565b6105ca565b005b61019e60048036038101906101999190611548565b6105e0565b6040516101ab9190611be7565b60405180910390f35b6101ce60048036038101906101c99190611657565b610674565b005b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610241576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161023890611c44565b60405180910390fd5b6065600083815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b60007fd9b67a26000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061036557507f0e89341c000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b80610375575061037482610715565b5b9050919050565b60606067805461038b90611fb3565b80601f01602080910402602001604051908101604052809291908181526020018280546103b790611fb3565b80156104045780601f106103d957610100808354040283529160200191610404565b820191906000526020600020905b8154815290600101906020018083116103e757829003601f168201915b50505050509050919050565b61041861077f565b73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16148061045e575061045d8561045861077f565b6105e0565b5b61049d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161049490611c64565b60405180910390fd5b6104aa8585858585610787565b5050505050565b606081518351146104f7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104ee90611ce4565b60405180910390fd5b6000835167ffffffffffffffff811115610514576105136120ec565b5b6040519080825280602002602001820160405280156105425781602001602082028036833780820191505090505b50905060005b84518110156105bf5761058f858281518110610567576105666120bd565b5b6020026020010151858381518110610582576105816120bd565b5b60200260200101516101d0565b8282815181106105a2576105a16120bd565b5b602002602001018181525050806105b890612016565b9050610548565b508091505092915050565b6105dc6105d561077f565b8383610aac565b5050565b6000606660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b61067c61077f565b73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614806106c257506106c1856106bc61077f565b6105e0565b5b610701576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106f890611c64565b60405180910390fd5b61070e8585858585610c19565b5050505050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b600033905090565b81518351146107cb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107c290611d04565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16141561083b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161083290611c84565b60405180910390fd5b600061084561077f565b9050610855818787878787610eb8565b60005b8451811015610a09576000858281518110610876576108756120bd565b5b602002602001015190506000858381518110610895576108946120bd565b5b6020026020010151905060006065600084815260200190815260200160002060008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610937576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161092e90611ca4565b60405180910390fd5b8181036065600085815260200190815260200160002060008c73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816065600085815260200190815260200160002060008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546109ee9190611ea7565b9250508190555050505080610a0290612016565b9050610858565b508473ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8787604051610a80929190611bb0565b60405180910390a4610a96818787878787610ec0565b610aa4818787878787610ec8565b505050505050565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610b1b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b1290611cc4565b60405180910390fd5b80606660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610c0c9190611be7565b60405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161415610c89576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c8090611c84565b60405180910390fd5b6000610c9361077f565b90506000610ca0856110af565b90506000610cad856110af565b9050610cbd838989858589610eb8565b60006065600088815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905085811015610d55576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d4c90611ca4565b60405180910390fd5b8581036065600089815260200190815260200160002060008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550856065600089815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610e0c9190611ea7565b925050819055508773ffffffffffffffffffffffffffffffffffffffff168973ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f628a8a604051610e89929190611d5f565b60405180910390a4610e9f848a8a86868a610ec0565b610ead848a8a8a8a8a611129565b505050505050505050565b505050505050565b505050505050565b610ee78473ffffffffffffffffffffffffffffffffffffffff16611310565b156110a7578373ffffffffffffffffffffffffffffffffffffffff1663bc197c8187878686866040518663ffffffff1660e01b8152600401610f2d959493929190611acc565b602060405180830381600087803b158015610f4757600080fd5b505af1925050508015610f7857506040513d601f19601f82011682018060405250810190610f759190611813565b60015b61101e57610f8461211b565b806308c379a01415610fe15750610f9961243b565b80610fa45750610fe3565b806040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fd89190611c02565b60405180910390fd5b505b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161101590611d24565b60405180910390fd5b63bc197c8160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916146110a5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161109c90611c24565b60405180910390fd5b505b505050505050565b60606000600167ffffffffffffffff8111156110ce576110cd6120ec565b5b6040519080825280602002602001820160405280156110fc5781602001602082028036833780820191505090505b5090508281600081518110611114576111136120bd565b5b60200260200101818152505080915050919050565b6111488473ffffffffffffffffffffffffffffffffffffffff16611310565b15611308578373ffffffffffffffffffffffffffffffffffffffff1663f23a6e6187878686866040518663ffffffff1660e01b815260040161118e959493929190611b34565b602060405180830381600087803b1580156111a857600080fd5b505af19250505080156111d957506040513d601f19601f820116820180604052508101906111d69190611813565b60015b61127f576111e561211b565b806308c379a0141561124257506111fa61243b565b806112055750611244565b806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112399190611c02565b60405180910390fd5b505b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161127690611d24565b60405180910390fd5b63f23a6e6160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614611306576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112fd90611c24565b60405180910390fd5b505b505050505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b600061134661134184611dad565b611d88565b9050808382526020820190508285602086028201111561136957611368612142565b5b60005b85811015611399578161137f8882611455565b84526020840193506020830192505060018101905061136c565b5050509392505050565b60006113b66113b184611dd9565b611d88565b905080838252602082019050828560208602820111156113d9576113d8612142565b5b60005b8581101561140957816113ef8882611533565b8452602084019350602083019250506001810190506113dc565b5050509392505050565b600061142661142184611e05565b611d88565b90508281526020810184848401111561144257611441612147565b5b61144d848285611f71565b509392505050565b600081359050611464816124d1565b92915050565b600082601f83011261147f5761147e61213d565b5b813561148f848260208601611333565b91505092915050565b600082601f8301126114ad576114ac61213d565b5b81356114bd8482602086016113a3565b91505092915050565b6000813590506114d5816124e8565b92915050565b6000813590506114ea816124ff565b92915050565b6000815190506114ff816124ff565b92915050565b600082601f83011261151a5761151961213d565b5b813561152a848260208601611413565b91505092915050565b60008135905061154281612516565b92915050565b6000806040838503121561155f5761155e612151565b5b600061156d85828601611455565b925050602061157e85828601611455565b9150509250929050565b600080600080600060a086880312156115a4576115a3612151565b5b60006115b288828901611455565b95505060206115c388828901611455565b945050604086013567ffffffffffffffff8111156115e4576115e361214c565b5b6115f088828901611498565b935050606086013567ffffffffffffffff8111156116115761161061214c565b5b61161d88828901611498565b925050608086013567ffffffffffffffff81111561163e5761163d61214c565b5b61164a88828901611505565b9150509295509295909350565b600080600080600060a0868803121561167357611672612151565b5b600061168188828901611455565b955050602061169288828901611455565b94505060406116a388828901611533565b93505060606116b488828901611533565b925050608086013567ffffffffffffffff8111156116d5576116d461214c565b5b6116e188828901611505565b9150509295509295909350565b6000806040838503121561170557611704612151565b5b600061171385828601611455565b9250506020611724858286016114c6565b9150509250929050565b6000806040838503121561174557611744612151565b5b600061175385828601611455565b925050602061176485828601611533565b9150509250929050565b6000806040838503121561178557611784612151565b5b600083013567ffffffffffffffff8111156117a3576117a261214c565b5b6117af8582860161146a565b925050602083013567ffffffffffffffff8111156117d0576117cf61214c565b5b6117dc85828601611498565b9150509250929050565b6000602082840312156117fc576117fb612151565b5b600061180a848285016114db565b91505092915050565b60006020828403121561182957611828612151565b5b6000611837848285016114f0565b91505092915050565b60006020828403121561185657611855612151565b5b600061186484828501611533565b91505092915050565b60006118798383611aae565b60208301905092915050565b61188e81611efd565b82525050565b600061189f82611e46565b6118a98185611e74565b93506118b483611e36565b8060005b838110156118e55781516118cc888261186d565b97506118d783611e67565b9250506001810190506118b8565b5085935050505092915050565b6118fb81611f0f565b82525050565b600061190c82611e51565b6119168185611e85565b9350611926818560208601611f80565b61192f81612156565b840191505092915050565b600061194582611e5c565b61194f8185611e96565b935061195f818560208601611f80565b61196881612156565b840191505092915050565b6000611980602883611e96565b915061198b82612174565b604082019050919050565b60006119a3602a83611e96565b91506119ae826121c3565b604082019050919050565b60006119c6602e83611e96565b91506119d182612212565b604082019050919050565b60006119e9602583611e96565b91506119f482612261565b604082019050919050565b6000611a0c602a83611e96565b9150611a17826122b0565b604082019050919050565b6000611a2f602983611e96565b9150611a3a826122ff565b604082019050919050565b6000611a52602983611e96565b9150611a5d8261234e565b604082019050919050565b6000611a75602883611e96565b9150611a808261239d565b604082019050919050565b6000611a98603483611e96565b9150611aa3826123ec565b604082019050919050565b611ab781611f67565b82525050565b611ac681611f67565b82525050565b600060a082019050611ae16000830188611885565b611aee6020830187611885565b8181036040830152611b008186611894565b90508181036060830152611b148185611894565b90508181036080830152611b288184611901565b90509695505050505050565b600060a082019050611b496000830188611885565b611b566020830187611885565b611b636040830186611abd565b611b706060830185611abd565b8181036080830152611b828184611901565b90509695505050505050565b60006020820190508181036000830152611ba88184611894565b905092915050565b60006040820190508181036000830152611bca8185611894565b90508181036020830152611bde8184611894565b90509392505050565b6000602082019050611bfc60008301846118f2565b92915050565b60006020820190508181036000830152611c1c818461193a565b905092915050565b60006020820190508181036000830152611c3d81611973565b9050919050565b60006020820190508181036000830152611c5d81611996565b9050919050565b60006020820190508181036000830152611c7d816119b9565b9050919050565b60006020820190508181036000830152611c9d816119dc565b9050919050565b60006020820190508181036000830152611cbd816119ff565b9050919050565b60006020820190508181036000830152611cdd81611a22565b9050919050565b60006020820190508181036000830152611cfd81611a45565b9050919050565b60006020820190508181036000830152611d1d81611a68565b9050919050565b60006020820190508181036000830152611d3d81611a8b565b9050919050565b6000602082019050611d596000830184611abd565b92915050565b6000604082019050611d746000830185611abd565b611d816020830184611abd565b9392505050565b6000611d92611da3565b9050611d9e8282611fe5565b919050565b6000604051905090565b600067ffffffffffffffff821115611dc857611dc76120ec565b5b602082029050602081019050919050565b600067ffffffffffffffff821115611df457611df36120ec565b5b602082029050602081019050919050565b600067ffffffffffffffff821115611e2057611e1f6120ec565b5b611e2982612156565b9050602081019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b6000611eb282611f67565b9150611ebd83611f67565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611ef257611ef161205f565b5b828201905092915050565b6000611f0882611f47565b9050919050565b60008115159050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b83811015611f9e578082015181840152602081019050611f83565b83811115611fad576000848401525b50505050565b60006002820490506001821680611fcb57607f821691505b60208210811415611fdf57611fde61208e565b5b50919050565b611fee82612156565b810181811067ffffffffffffffff8211171561200d5761200c6120ec565b5b80604052505050565b600061202182611f67565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156120545761205361205f565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600060033d111561213a5760046000803e612137600051612167565b90505b90565b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b60008160e01c9050919050565b7f455243313135353a204552433131353552656365697665722072656a6563746560008201527f6420746f6b656e73000000000000000000000000000000000000000000000000602082015250565b7f455243313135353a2061646472657373207a65726f206973206e6f742061207660008201527f616c6964206f776e657200000000000000000000000000000000000000000000602082015250565b7f455243313135353a2063616c6c6572206973206e6f7420746f6b656e206f776e60008201527f6572206f7220617070726f766564000000000000000000000000000000000000602082015250565b7f455243313135353a207472616e7366657220746f20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b7f455243313135353a20696e73756666696369656e742062616c616e636520666f60008201527f72207472616e7366657200000000000000000000000000000000000000000000602082015250565b7f455243313135353a2073657474696e6720617070726f76616c2073746174757360008201527f20666f722073656c660000000000000000000000000000000000000000000000602082015250565b7f455243313135353a206163636f756e747320616e6420696473206c656e67746860008201527f206d69736d617463680000000000000000000000000000000000000000000000602082015250565b7f455243313135353a2069647320616e6420616d6f756e7473206c656e6774682060008201527f6d69736d61746368000000000000000000000000000000000000000000000000602082015250565b7f455243313135353a207472616e7366657220746f206e6f6e2d4552433131353560008201527f526563656976657220696d706c656d656e746572000000000000000000000000602082015250565b600060443d101561244b576124ce565b612453611da3565b60043d036004823e80513d602482011167ffffffffffffffff8211171561247b5750506124ce565b808201805167ffffffffffffffff81111561249957505050506124ce565b80602083010160043d0385018111156124b65750505050506124ce565b6124c582602001850186611fe5565b82955050505050505b90565b6124da81611efd565b81146124e557600080fd5b50565b6124f181611f0f565b81146124fc57600080fd5b50565b61250881611f1b565b811461251357600080fd5b50565b61251f81611f67565b811461252a57600080fd5b5056fea2646970667358221220aa51d1e75a51fce5b75e163d0a1f725e19ef1c65637c1ef3288607ec6755ab1364736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x87 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4E1273F4 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x138 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x168 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x184 JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x1B4 JUMPI PUSH2 0x87 JUMP JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0x8C JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xBC JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0xEC JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0x11C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA1 SWAP2 SWAP1 PUSH2 0x172E JUMP JUMPDEST PUSH2 0x1D0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB3 SWAP2 SWAP1 PUSH2 0x1D44 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xD1 SWAP2 SWAP1 PUSH2 0x17E6 JUMP JUMPDEST PUSH2 0x29A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE3 SWAP2 SWAP1 PUSH2 0x1BE7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x106 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x101 SWAP2 SWAP1 PUSH2 0x1840 JUMP JUMPDEST PUSH2 0x37C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x113 SWAP2 SWAP1 PUSH2 0x1C02 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x136 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x131 SWAP2 SWAP1 PUSH2 0x1588 JUMP JUMPDEST PUSH2 0x410 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x152 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x14D SWAP2 SWAP1 PUSH2 0x176E JUMP JUMPDEST PUSH2 0x4B1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15F SWAP2 SWAP1 PUSH2 0x1B8E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x182 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17D SWAP2 SWAP1 PUSH2 0x16EE JUMP JUMPDEST PUSH2 0x5CA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x19E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x199 SWAP2 SWAP1 PUSH2 0x1548 JUMP JUMPDEST PUSH2 0x5E0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AB SWAP2 SWAP1 PUSH2 0x1BE7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C9 SWAP2 SWAP1 PUSH2 0x1657 JUMP JUMPDEST PUSH2 0x674 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x241 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x238 SWAP1 PUSH2 0x1C44 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x65 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xD9B67A2600000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x365 JUMPI POP PUSH32 0xE89341C00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x375 JUMPI POP PUSH2 0x374 DUP3 PUSH2 0x715 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x67 DUP1 SLOAD PUSH2 0x38B SWAP1 PUSH2 0x1FB3 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3B7 SWAP1 PUSH2 0x1FB3 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x404 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3D9 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x404 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3E7 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x418 PUSH2 0x77F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x45E JUMPI POP PUSH2 0x45D DUP6 PUSH2 0x458 PUSH2 0x77F JUMP JUMPDEST PUSH2 0x5E0 JUMP JUMPDEST JUMPDEST PUSH2 0x49D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x494 SWAP1 PUSH2 0x1C64 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4AA DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x787 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x4F7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4EE SWAP1 PUSH2 0x1CE4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x514 JUMPI PUSH2 0x513 PUSH2 0x20EC JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x542 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x5BF JUMPI PUSH2 0x58F DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x567 JUMPI PUSH2 0x566 PUSH2 0x20BD JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x582 JUMPI PUSH2 0x581 PUSH2 0x20BD JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x1D0 JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x5A2 JUMPI PUSH2 0x5A1 PUSH2 0x20BD JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP1 PUSH2 0x5B8 SWAP1 PUSH2 0x2016 JUMP JUMPDEST SWAP1 POP PUSH2 0x548 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x5DC PUSH2 0x5D5 PUSH2 0x77F JUMP JUMPDEST DUP4 DUP4 PUSH2 0xAAC JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x66 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x67C PUSH2 0x77F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x6C2 JUMPI POP PUSH2 0x6C1 DUP6 PUSH2 0x6BC PUSH2 0x77F JUMP JUMPDEST PUSH2 0x5E0 JUMP JUMPDEST JUMPDEST PUSH2 0x701 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6F8 SWAP1 PUSH2 0x1C64 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x70E DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0xC19 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x7CB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7C2 SWAP1 PUSH2 0x1D04 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x83B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x832 SWAP1 PUSH2 0x1C84 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x845 PUSH2 0x77F JUMP JUMPDEST SWAP1 POP PUSH2 0x855 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0xEB8 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0xA09 JUMPI PUSH1 0x0 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x876 JUMPI PUSH2 0x875 PUSH2 0x20BD JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x895 JUMPI PUSH2 0x894 PUSH2 0x20BD JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x65 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x937 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x92E SWAP1 PUSH2 0x1CA4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x65 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP13 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x65 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x9EE SWAP2 SWAP1 PUSH2 0x1EA7 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP POP DUP1 PUSH2 0xA02 SWAP1 PUSH2 0x2016 JUMP JUMPDEST SWAP1 POP PUSH2 0x858 JUMP JUMPDEST POP DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0xA80 SWAP3 SWAP2 SWAP1 PUSH2 0x1BB0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xA96 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0xEC0 JUMP JUMPDEST PUSH2 0xAA4 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0xEC8 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xB1B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB12 SWAP1 PUSH2 0x1CC4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x66 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0xC0C SWAP2 SWAP1 PUSH2 0x1BE7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xC89 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC80 SWAP1 PUSH2 0x1C84 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xC93 PUSH2 0x77F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xCA0 DUP6 PUSH2 0x10AF JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xCAD DUP6 PUSH2 0x10AF JUMP JUMPDEST SWAP1 POP PUSH2 0xCBD DUP4 DUP10 DUP10 DUP6 DUP6 DUP10 PUSH2 0xEB8 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x65 PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP6 DUP2 LT ISZERO PUSH2 0xD55 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD4C SWAP1 PUSH2 0x1CA4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP6 DUP2 SUB PUSH1 0x65 PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP6 PUSH1 0x65 PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xE0C SWAP2 SWAP1 PUSH2 0x1EA7 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 DUP11 DUP11 PUSH1 0x40 MLOAD PUSH2 0xE89 SWAP3 SWAP2 SWAP1 PUSH2 0x1D5F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xE9F DUP5 DUP11 DUP11 DUP7 DUP7 DUP11 PUSH2 0xEC0 JUMP JUMPDEST PUSH2 0xEAD DUP5 DUP11 DUP11 DUP11 DUP11 DUP11 PUSH2 0x1129 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xEE7 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1310 JUMP JUMPDEST ISZERO PUSH2 0x10A7 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xBC197C81 DUP8 DUP8 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF2D SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1ACC JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xF47 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xF78 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF75 SWAP2 SWAP1 PUSH2 0x1813 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x101E JUMPI PUSH2 0xF84 PUSH2 0x211B JUMP JUMPDEST DUP1 PUSH4 0x8C379A0 EQ ISZERO PUSH2 0xFE1 JUMPI POP PUSH2 0xF99 PUSH2 0x243B JUMP JUMPDEST DUP1 PUSH2 0xFA4 JUMPI POP PUSH2 0xFE3 JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFD8 SWAP2 SWAP1 PUSH2 0x1C02 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1015 SWAP1 PUSH2 0x1D24 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH4 0xBC197C81 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x10A5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x109C SWAP1 PUSH2 0x1C24 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x10CE JUMPI PUSH2 0x10CD PUSH2 0x20EC JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x10FC JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP DUP3 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x1114 JUMPI PUSH2 0x1113 PUSH2 0x20BD JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1148 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1310 JUMP JUMPDEST ISZERO PUSH2 0x1308 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF23A6E61 DUP8 DUP8 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x118E SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1B34 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x11A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x11D9 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x11D6 SWAP2 SWAP1 PUSH2 0x1813 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x127F JUMPI PUSH2 0x11E5 PUSH2 0x211B JUMP JUMPDEST DUP1 PUSH4 0x8C379A0 EQ ISZERO PUSH2 0x1242 JUMPI POP PUSH2 0x11FA PUSH2 0x243B JUMP JUMPDEST DUP1 PUSH2 0x1205 JUMPI POP PUSH2 0x1244 JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1239 SWAP2 SWAP1 PUSH2 0x1C02 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1276 SWAP1 PUSH2 0x1D24 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH4 0xF23A6E61 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x1306 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12FD SWAP1 PUSH2 0x1C24 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1346 PUSH2 0x1341 DUP5 PUSH2 0x1DAD JUMP JUMPDEST PUSH2 0x1D88 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP DUP3 DUP6 PUSH1 0x20 DUP7 MUL DUP3 ADD GT ISZERO PUSH2 0x1369 JUMPI PUSH2 0x1368 PUSH2 0x2142 JUMP JUMPDEST JUMPDEST PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x1399 JUMPI DUP2 PUSH2 0x137F DUP9 DUP3 PUSH2 0x1455 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP PUSH1 0x20 DUP4 ADD SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x136C JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13B6 PUSH2 0x13B1 DUP5 PUSH2 0x1DD9 JUMP JUMPDEST PUSH2 0x1D88 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP DUP3 DUP6 PUSH1 0x20 DUP7 MUL DUP3 ADD GT ISZERO PUSH2 0x13D9 JUMPI PUSH2 0x13D8 PUSH2 0x2142 JUMP JUMPDEST JUMPDEST PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x1409 JUMPI DUP2 PUSH2 0x13EF DUP9 DUP3 PUSH2 0x1533 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP PUSH1 0x20 DUP4 ADD SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x13DC JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1426 PUSH2 0x1421 DUP5 PUSH2 0x1E05 JUMP JUMPDEST PUSH2 0x1D88 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1442 JUMPI PUSH2 0x1441 PUSH2 0x2147 JUMP JUMPDEST JUMPDEST PUSH2 0x144D DUP5 DUP3 DUP6 PUSH2 0x1F71 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1464 DUP2 PUSH2 0x24D1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x147F JUMPI PUSH2 0x147E PUSH2 0x213D JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x148F DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1333 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x14AD JUMPI PUSH2 0x14AC PUSH2 0x213D JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x14BD DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x13A3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x14D5 DUP2 PUSH2 0x24E8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x14EA DUP2 PUSH2 0x24FF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x14FF DUP2 PUSH2 0x24FF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x151A JUMPI PUSH2 0x1519 PUSH2 0x213D JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x152A DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1413 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1542 DUP2 PUSH2 0x2516 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x155F JUMPI PUSH2 0x155E PUSH2 0x2151 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x156D DUP6 DUP3 DUP7 ADD PUSH2 0x1455 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x157E DUP6 DUP3 DUP7 ADD PUSH2 0x1455 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x15A4 JUMPI PUSH2 0x15A3 PUSH2 0x2151 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x15B2 DUP9 DUP3 DUP10 ADD PUSH2 0x1455 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x15C3 DUP9 DUP3 DUP10 ADD PUSH2 0x1455 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x15E4 JUMPI PUSH2 0x15E3 PUSH2 0x214C JUMP JUMPDEST JUMPDEST PUSH2 0x15F0 DUP9 DUP3 DUP10 ADD PUSH2 0x1498 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1611 JUMPI PUSH2 0x1610 PUSH2 0x214C JUMP JUMPDEST JUMPDEST PUSH2 0x161D DUP9 DUP3 DUP10 ADD PUSH2 0x1498 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x163E JUMPI PUSH2 0x163D PUSH2 0x214C JUMP JUMPDEST JUMPDEST PUSH2 0x164A DUP9 DUP3 DUP10 ADD PUSH2 0x1505 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1673 JUMPI PUSH2 0x1672 PUSH2 0x2151 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1681 DUP9 DUP3 DUP10 ADD PUSH2 0x1455 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x1692 DUP9 DUP3 DUP10 ADD PUSH2 0x1455 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x16A3 DUP9 DUP3 DUP10 ADD PUSH2 0x1533 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x16B4 DUP9 DUP3 DUP10 ADD PUSH2 0x1533 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x16D5 JUMPI PUSH2 0x16D4 PUSH2 0x214C JUMP JUMPDEST JUMPDEST PUSH2 0x16E1 DUP9 DUP3 DUP10 ADD PUSH2 0x1505 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1705 JUMPI PUSH2 0x1704 PUSH2 0x2151 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1713 DUP6 DUP3 DUP7 ADD PUSH2 0x1455 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1724 DUP6 DUP3 DUP7 ADD PUSH2 0x14C6 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1745 JUMPI PUSH2 0x1744 PUSH2 0x2151 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1753 DUP6 DUP3 DUP7 ADD PUSH2 0x1455 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1764 DUP6 DUP3 DUP7 ADD PUSH2 0x1533 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1785 JUMPI PUSH2 0x1784 PUSH2 0x2151 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x17A3 JUMPI PUSH2 0x17A2 PUSH2 0x214C JUMP JUMPDEST JUMPDEST PUSH2 0x17AF DUP6 DUP3 DUP7 ADD PUSH2 0x146A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x17D0 JUMPI PUSH2 0x17CF PUSH2 0x214C JUMP JUMPDEST JUMPDEST PUSH2 0x17DC DUP6 DUP3 DUP7 ADD PUSH2 0x1498 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x17FC JUMPI PUSH2 0x17FB PUSH2 0x2151 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x180A DUP5 DUP3 DUP6 ADD PUSH2 0x14DB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1829 JUMPI PUSH2 0x1828 PUSH2 0x2151 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1837 DUP5 DUP3 DUP6 ADD PUSH2 0x14F0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1856 JUMPI PUSH2 0x1855 PUSH2 0x2151 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1864 DUP5 DUP3 DUP6 ADD PUSH2 0x1533 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1879 DUP4 DUP4 PUSH2 0x1AAE JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x188E DUP2 PUSH2 0x1EFD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x189F DUP3 PUSH2 0x1E46 JUMP JUMPDEST PUSH2 0x18A9 DUP2 DUP6 PUSH2 0x1E74 JUMP JUMPDEST SWAP4 POP PUSH2 0x18B4 DUP4 PUSH2 0x1E36 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x18E5 JUMPI DUP2 MLOAD PUSH2 0x18CC DUP9 DUP3 PUSH2 0x186D JUMP JUMPDEST SWAP8 POP PUSH2 0x18D7 DUP4 PUSH2 0x1E67 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x18B8 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x18FB DUP2 PUSH2 0x1F0F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x190C DUP3 PUSH2 0x1E51 JUMP JUMPDEST PUSH2 0x1916 DUP2 DUP6 PUSH2 0x1E85 JUMP JUMPDEST SWAP4 POP PUSH2 0x1926 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1F80 JUMP JUMPDEST PUSH2 0x192F DUP2 PUSH2 0x2156 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1945 DUP3 PUSH2 0x1E5C JUMP JUMPDEST PUSH2 0x194F DUP2 DUP6 PUSH2 0x1E96 JUMP JUMPDEST SWAP4 POP PUSH2 0x195F DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1F80 JUMP JUMPDEST PUSH2 0x1968 DUP2 PUSH2 0x2156 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1980 PUSH1 0x28 DUP4 PUSH2 0x1E96 JUMP JUMPDEST SWAP2 POP PUSH2 0x198B DUP3 PUSH2 0x2174 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19A3 PUSH1 0x2A DUP4 PUSH2 0x1E96 JUMP JUMPDEST SWAP2 POP PUSH2 0x19AE DUP3 PUSH2 0x21C3 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19C6 PUSH1 0x2E DUP4 PUSH2 0x1E96 JUMP JUMPDEST SWAP2 POP PUSH2 0x19D1 DUP3 PUSH2 0x2212 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19E9 PUSH1 0x25 DUP4 PUSH2 0x1E96 JUMP JUMPDEST SWAP2 POP PUSH2 0x19F4 DUP3 PUSH2 0x2261 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A0C PUSH1 0x2A DUP4 PUSH2 0x1E96 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A17 DUP3 PUSH2 0x22B0 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A2F PUSH1 0x29 DUP4 PUSH2 0x1E96 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A3A DUP3 PUSH2 0x22FF JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A52 PUSH1 0x29 DUP4 PUSH2 0x1E96 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A5D DUP3 PUSH2 0x234E JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A75 PUSH1 0x28 DUP4 PUSH2 0x1E96 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A80 DUP3 PUSH2 0x239D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A98 PUSH1 0x34 DUP4 PUSH2 0x1E96 JUMP JUMPDEST SWAP2 POP PUSH2 0x1AA3 DUP3 PUSH2 0x23EC JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1AB7 DUP2 PUSH2 0x1F67 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1AC6 DUP2 PUSH2 0x1F67 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x1AE1 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x1885 JUMP JUMPDEST PUSH2 0x1AEE PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x1885 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x1B00 DUP2 DUP7 PUSH2 0x1894 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x1B14 DUP2 DUP6 PUSH2 0x1894 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x1B28 DUP2 DUP5 PUSH2 0x1901 JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x1B49 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x1885 JUMP JUMPDEST PUSH2 0x1B56 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x1885 JUMP JUMPDEST PUSH2 0x1B63 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x1ABD JUMP JUMPDEST PUSH2 0x1B70 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x1ABD JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x1B82 DUP2 DUP5 PUSH2 0x1901 JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1BA8 DUP2 DUP5 PUSH2 0x1894 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1BCA DUP2 DUP6 PUSH2 0x1894 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x1BDE DUP2 DUP5 PUSH2 0x1894 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1BFC PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x18F2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1C1C DUP2 DUP5 PUSH2 0x193A JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1C3D DUP2 PUSH2 0x1973 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1C5D DUP2 PUSH2 0x1996 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1C7D DUP2 PUSH2 0x19B9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1C9D DUP2 PUSH2 0x19DC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1CBD DUP2 PUSH2 0x19FF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1CDD DUP2 PUSH2 0x1A22 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1CFD DUP2 PUSH2 0x1A45 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D1D DUP2 PUSH2 0x1A68 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D3D DUP2 PUSH2 0x1A8B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1D59 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1ABD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1D74 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1ABD JUMP JUMPDEST PUSH2 0x1D81 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1ABD JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D92 PUSH2 0x1DA3 JUMP JUMPDEST SWAP1 POP PUSH2 0x1D9E DUP3 DUP3 PUSH2 0x1FE5 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1DC8 JUMPI PUSH2 0x1DC7 PUSH2 0x20EC JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1DF4 JUMPI PUSH2 0x1DF3 PUSH2 0x20EC JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1E20 JUMPI PUSH2 0x1E1F PUSH2 0x20EC JUMP JUMPDEST JUMPDEST PUSH2 0x1E29 DUP3 PUSH2 0x2156 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EB2 DUP3 PUSH2 0x1F67 JUMP JUMPDEST SWAP2 POP PUSH2 0x1EBD DUP4 PUSH2 0x1F67 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x1EF2 JUMPI PUSH2 0x1EF1 PUSH2 0x205F JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F08 DUP3 PUSH2 0x1F47 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1F9E JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1F83 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1FAD JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1FCB JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x1FDF JUMPI PUSH2 0x1FDE PUSH2 0x208E JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1FEE DUP3 PUSH2 0x2156 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x200D JUMPI PUSH2 0x200C PUSH2 0x20EC JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2021 DUP3 PUSH2 0x1F67 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x2054 JUMPI PUSH2 0x2053 PUSH2 0x205F JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x3 RETURNDATASIZE GT ISZERO PUSH2 0x213A JUMPI PUSH1 0x4 PUSH1 0x0 DUP1 RETURNDATACOPY PUSH2 0x2137 PUSH1 0x0 MLOAD PUSH2 0x2167 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0xE0 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455243313135353A204552433131353552656365697665722072656A65637465 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6420746F6B656E73000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x455243313135353A2061646472657373207A65726F206973206E6F7420612076 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x616C6964206F776E657200000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x455243313135353A2063616C6C6572206973206E6F7420746F6B656E206F776E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6572206F7220617070726F766564000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x455243313135353A207472616E7366657220746F20746865207A65726F206164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x455243313135353A20696E73756666696369656E742062616C616E636520666F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x72207472616E7366657200000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x455243313135353A2073657474696E6720617070726F76616C20737461747573 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x20666F722073656C660000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x455243313135353A206163636F756E747320616E6420696473206C656E677468 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x206D69736D617463680000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x455243313135353A2069647320616E6420616D6F756E7473206C656E67746820 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6D69736D61746368000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x455243313135353A207472616E7366657220746F206E6F6E2D45524331313535 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x526563656976657220696D706C656D656E746572000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x44 RETURNDATASIZE LT ISZERO PUSH2 0x244B JUMPI PUSH2 0x24CE JUMP JUMPDEST PUSH2 0x2453 PUSH2 0x1DA3 JUMP JUMPDEST PUSH1 0x4 RETURNDATASIZE SUB PUSH1 0x4 DUP3 RETURNDATACOPY DUP1 MLOAD RETURNDATASIZE PUSH1 0x24 DUP3 ADD GT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x247B JUMPI POP POP PUSH2 0x24CE JUMP JUMPDEST DUP1 DUP3 ADD DUP1 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2499 JUMPI POP POP POP POP PUSH2 0x24CE JUMP JUMPDEST DUP1 PUSH1 0x20 DUP4 ADD ADD PUSH1 0x4 RETURNDATASIZE SUB DUP6 ADD DUP2 GT ISZERO PUSH2 0x24B6 JUMPI POP POP POP POP POP PUSH2 0x24CE JUMP JUMPDEST PUSH2 0x24C5 DUP3 PUSH1 0x20 ADD DUP6 ADD DUP7 PUSH2 0x1FE5 JUMP JUMPDEST DUP3 SWAP6 POP POP POP POP POP POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x24DA DUP2 PUSH2 0x1EFD JUMP JUMPDEST DUP2 EQ PUSH2 0x24E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x24F1 DUP2 PUSH2 0x1F0F JUMP JUMPDEST DUP2 EQ PUSH2 0x24FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x2508 DUP2 PUSH2 0x1F1B JUMP JUMPDEST DUP2 EQ PUSH2 0x2513 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x251F DUP2 PUSH2 0x1F67 JUMP JUMPDEST DUP2 EQ PUSH2 0x252A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAA MLOAD 0xD1 0xE7 GAS MLOAD 0xFC 0xE5 0xB7 0x5E AND RETURNDATASIZE EXP 0x1F PUSH19 0x5E19EF1C65637C1EF3288607EC6755AB136473 PUSH16 0x6C634300080700330000000000000000 ",
							"sourceMap": "682:17320:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2593:227;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1600:349;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2348:103;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4472:426;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2977:508;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3553:153;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3773:166;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4006:394;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2593:227;2679:7;2725:1;2706:21;;:7;:21;;;;2698:76;;;;;;;;;;;;:::i;:::-;;;;;;;;;2791:9;:13;2801:2;2791:13;;;;;;;;;;;:22;2805:7;2791:22;;;;;;;;;;;;;;;;2784:29;;2593:227;;;;:::o;1600:349::-;1724:4;1774:37;1759:52;;;:11;:52;;;;:131;;;;1842:48;1827:63;;;:11;:63;;;;1759:131;:183;;;;1906:36;1930:11;1906:23;:36::i;:::-;1759:183;1740:202;;1600:349;;;:::o;2348:103::-;2408:13;2440:4;2433:11;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2348:103;;;:::o;4472:426::-;4705:12;:10;:12::i;:::-;4697:20;;:4;:20;;;:60;;;;4721:36;4738:4;4744:12;:10;:12::i;:::-;4721:16;:36::i;:::-;4697:60;4676:153;;;;;;;;;;;;:::i;:::-;;;;;;;;;4839:52;4862:4;4868:2;4872:3;4877:7;4886:4;4839:22;:52::i;:::-;4472:426;;;;;:::o;2977:508::-;3128:16;3187:3;:10;3168:8;:15;:29;3160:83;;;;;;;;;;;;:::i;:::-;;;;;;;;;3254:30;3301:8;:15;3287:30;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3254:63;;3333:9;3328:120;3352:8;:15;3348:1;:19;3328:120;;;3407:30;3417:8;3426:1;3417:11;;;;;;;;:::i;:::-;;;;;;;;3430:3;3434:1;3430:6;;;;;;;;:::i;:::-;;;;;;;;3407:9;:30::i;:::-;3388:13;3402:1;3388:16;;;;;;;;:::i;:::-;;;;;;;:49;;;;;3369:3;;;;:::i;:::-;;;3328:120;;;;3465:13;3458:20;;;2977:508;;;;:::o;3553:153::-;3647:52;3666:12;:10;:12::i;:::-;3680:8;3690;3647:18;:52::i;:::-;3553:153;;:::o;3773:166::-;3872:4;3895:18;:27;3914:7;3895:27;;;;;;;;;;;;;;;:37;3923:8;3895:37;;;;;;;;;;;;;;;;;;;;;;;;;3888:44;;3773:166;;;;:::o;4006:394::-;4214:12;:10;:12::i;:::-;4206:20;;:4;:20;;;:60;;;;4230:36;4247:4;4253:12;:10;:12::i;:::-;4230:16;:36::i;:::-;4206:60;4185:153;;;;;;;;;;;;:::i;:::-;;;;;;;;;4348:45;4366:4;4372:2;4376;4380:6;4388:4;4348:17;:45::i;:::-;4006:394;;;;;:::o;1060:166:7:-;1145:4;1183:36;1168:51;;;:11;:51;;;;1161:58;;1060:166;;;:::o;850:96:6:-;903:7;929:10;922:17;;850:96;:::o;6641:1115:1:-;6861:7;:14;6847:3;:10;:28;6839:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;6952:1;6938:16;;:2;:16;;;;6930:66;;;;;;;;;;;;:::i;:::-;;;;;;;;;7007:16;7026:12;:10;:12::i;:::-;7007:31;;7049:60;7070:8;7080:4;7086:2;7090:3;7095:7;7104:4;7049:20;:60::i;:::-;7125:9;7120:411;7144:3;:10;7140:1;:14;7120:411;;;7175:10;7188:3;7192:1;7188:6;;;;;;;;:::i;:::-;;;;;;;;7175:19;;7208:14;7225:7;7233:1;7225:10;;;;;;;;:::i;:::-;;;;;;;;7208:27;;7250:19;7272:9;:13;7282:2;7272:13;;;;;;;;;;;:19;7286:4;7272:19;;;;;;;;;;;;;;;;7250:41;;7328:6;7313:11;:21;;7305:76;;;;;;;;;;;;:::i;:::-;;;;;;;;;7459:6;7445:11;:20;7423:9;:13;7433:2;7423:13;;;;;;;;;;;:19;7437:4;7423:19;;;;;;;;;;;;;;;:42;;;;7514:6;7493:9;:13;7503:2;7493:13;;;;;;;;;;;:17;7507:2;7493:17;;;;;;;;;;;;;;;;:27;;;;;;;:::i;:::-;;;;;;;;7161:370;;;7156:3;;;;:::i;:::-;;;7120:411;;;;7576:2;7546:47;;7570:4;7546:47;;7560:8;7546:47;;;7580:3;7585:7;7546:47;;;;;;;:::i;:::-;;;;;;;;7604:59;7624:8;7634:4;7640:2;7644:3;7649:7;7658:4;7604:19;:59::i;:::-;7674:75;7710:8;7720:4;7726:2;7730:3;7735:7;7744:4;7674:35;:75::i;:::-;6829:927;6641:1115;;;;;:::o;13318:323::-;13468:8;13459:17;;:5;:17;;;;13451:71;;;;;;;;;;;;:::i;:::-;;;;;;;;;13570:8;13532:18;:25;13551:5;13532:25;;;;;;;;;;;;;;;:35;13558:8;13532:35;;;;;;;;;;;;;;;;:46;;;;;;;;;;;;;;;;;;13615:8;13593:41;;13608:5;13593:41;;;13625:8;13593:41;;;;;;:::i;:::-;;;;;;;;13318:323;;;:::o;5348:947::-;5543:1;5529:16;;:2;:16;;;;5521:66;;;;;;;;;;;;:::i;:::-;;;;;;;;;5598:16;5617:12;:10;:12::i;:::-;5598:31;;5639:20;5662:21;5680:2;5662:17;:21::i;:::-;5639:44;;5693:24;5720:25;5738:6;5720:17;:25::i;:::-;5693:52;;5756:60;5777:8;5787:4;5793:2;5797:3;5802:7;5811:4;5756:20;:60::i;:::-;5827:19;5849:9;:13;5859:2;5849:13;;;;;;;;;;;:19;5863:4;5849:19;;;;;;;;;;;;;;;;5827:41;;5901:6;5886:11;:21;;5878:76;;;;;;;;;;;;:::i;:::-;;;;;;;;;6024:6;6010:11;:20;5988:9;:13;5998:2;5988:13;;;;;;;;;;;:19;6002:4;5988:19;;;;;;;;;;;;;;;:42;;;;6071:6;6050:9;:13;6060:2;6050:13;;;;;;;;;;;:17;6064:2;6050:17;;;;;;;;;;;;;;;;:27;;;;;;;:::i;:::-;;;;;;;;6124:2;6093:46;;6118:4;6093:46;;6108:8;6093:46;;;6128:2;6132:6;6093:46;;;;;;;:::i;:::-;;;;;;;;6150:59;6170:8;6180:4;6186:2;6190:3;6195:7;6204:4;6150:19;:59::i;:::-;6220:68;6251:8;6261:4;6267:2;6271;6275:6;6283:4;6220:30;:68::i;:::-;5511:784;;;;5348:947;;;;;:::o;14577:214::-;;;;;;;:::o;15724:213::-;;;;;;;:::o;16696:814::-;16928:15;:2;:13;;;:15::i;:::-;16924:580;;;16991:2;16963:54;;;17018:8;17028:4;17034:3;17039:7;17048:4;16963:90;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;16959:535;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;17370:6;17363:14;;;;;;;;;;;:::i;:::-;;;;;;;;16959:535;;;17417:62;;;;;;;;;;:::i;:::-;;;;;;;;16959:535;17144:59;;;17132:71;;;:8;:71;;;;17128:168;;17227:50;;;;;;;;;;:::i;:::-;;;;;;;;17128:168;17054:256;16924:580;16696:814;;;;;;:::o;17516:193::-;17582:16;17610:22;17649:1;17635:16;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17610:41;;17672:7;17661:5;17667:1;17661:8;;;;;;;;:::i;:::-;;;;;;;:18;;;;;17697:5;17690:12;;;17516:193;;;:::o;15943:747::-;16150:15;:2;:13;;;:15::i;:::-;16146:538;;;16213:2;16185:49;;;16235:8;16245:4;16251:2;16255:6;16263:4;16185:83;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;16181:493;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;16550:6;16543:14;;;;;;;;;;;:::i;:::-;;;;;;;;16181:493;;;16597:62;;;;;;;;;;:::i;:::-;;;;;;;;16181:493;16329:54;;;16317:66;;;:8;:66;;;;16313:163;;16407:50;;;;;;;;;;:::i;:::-;;;;;;;;16313:163;16269:221;16146:538;15943:747;;;;;;:::o;1186:320:5:-;1246:4;1498:1;1476:7;:19;;;:23;1469:30;;1186:320;;;:::o;24:722:9:-;120:5;145:81;161:64;218:6;161:64;:::i;:::-;145:81;:::i;:::-;136:90;;246:5;275:6;268:5;261:21;309:4;302:5;298:16;291:23;;335:6;385:3;377:4;369:6;365:17;360:3;356:27;353:36;350:143;;;404:79;;:::i;:::-;350:143;517:1;502:238;527:6;524:1;521:13;502:238;;;595:3;624:37;657:3;645:10;624:37;:::i;:::-;619:3;612:50;691:4;686:3;682:14;675:21;;725:4;720:3;716:14;709:21;;562:178;549:1;546;542:9;537:14;;502:238;;;506:14;126:620;;24:722;;;;;:::o;769:::-;865:5;890:81;906:64;963:6;906:64;:::i;:::-;890:81;:::i;:::-;881:90;;991:5;1020:6;1013:5;1006:21;1054:4;1047:5;1043:16;1036:23;;1080:6;1130:3;1122:4;1114:6;1110:17;1105:3;1101:27;1098:36;1095:143;;;1149:79;;:::i;:::-;1095:143;1262:1;1247:238;1272:6;1269:1;1266:13;1247:238;;;1340:3;1369:37;1402:3;1390:10;1369:37;:::i;:::-;1364:3;1357:50;1436:4;1431:3;1427:14;1420:21;;1470:4;1465:3;1461:14;1454:21;;1307:178;1294:1;1291;1287:9;1282:14;;1247:238;;;1251:14;871:620;;769:722;;;;;:::o;1497:410::-;1574:5;1599:65;1615:48;1656:6;1615:48;:::i;:::-;1599:65;:::i;:::-;1590:74;;1687:6;1680:5;1673:21;1725:4;1718:5;1714:16;1763:3;1754:6;1749:3;1745:16;1742:25;1739:112;;;1770:79;;:::i;:::-;1739:112;1860:41;1894:6;1889:3;1884;1860:41;:::i;:::-;1580:327;1497:410;;;;;:::o;1913:139::-;1959:5;1997:6;1984:20;1975:29;;2013:33;2040:5;2013:33;:::i;:::-;1913:139;;;;:::o;2075:370::-;2146:5;2195:3;2188:4;2180:6;2176:17;2172:27;2162:122;;2203:79;;:::i;:::-;2162:122;2320:6;2307:20;2345:94;2435:3;2427:6;2420:4;2412:6;2408:17;2345:94;:::i;:::-;2336:103;;2152:293;2075:370;;;;:::o;2468:::-;2539:5;2588:3;2581:4;2573:6;2569:17;2565:27;2555:122;;2596:79;;:::i;:::-;2555:122;2713:6;2700:20;2738:94;2828:3;2820:6;2813:4;2805:6;2801:17;2738:94;:::i;:::-;2729:103;;2545:293;2468:370;;;;:::o;2844:133::-;2887:5;2925:6;2912:20;2903:29;;2941:30;2965:5;2941:30;:::i;:::-;2844:133;;;;:::o;2983:137::-;3028:5;3066:6;3053:20;3044:29;;3082:32;3108:5;3082:32;:::i;:::-;2983:137;;;;:::o;3126:141::-;3182:5;3213:6;3207:13;3198:22;;3229:32;3255:5;3229:32;:::i;:::-;3126:141;;;;:::o;3286:338::-;3341:5;3390:3;3383:4;3375:6;3371:17;3367:27;3357:122;;3398:79;;:::i;:::-;3357:122;3515:6;3502:20;3540:78;3614:3;3606:6;3599:4;3591:6;3587:17;3540:78;:::i;:::-;3531:87;;3347:277;3286:338;;;;:::o;3630:139::-;3676:5;3714:6;3701:20;3692:29;;3730:33;3757:5;3730:33;:::i;:::-;3630:139;;;;:::o;3775:474::-;3843:6;3851;3900:2;3888:9;3879:7;3875:23;3871:32;3868:119;;;3906:79;;:::i;:::-;3868:119;4026:1;4051:53;4096:7;4087:6;4076:9;4072:22;4051:53;:::i;:::-;4041:63;;3997:117;4153:2;4179:53;4224:7;4215:6;4204:9;4200:22;4179:53;:::i;:::-;4169:63;;4124:118;3775:474;;;;;:::o;4255:1509::-;4409:6;4417;4425;4433;4441;4490:3;4478:9;4469:7;4465:23;4461:33;4458:120;;;4497:79;;:::i;:::-;4458:120;4617:1;4642:53;4687:7;4678:6;4667:9;4663:22;4642:53;:::i;:::-;4632:63;;4588:117;4744:2;4770:53;4815:7;4806:6;4795:9;4791:22;4770:53;:::i;:::-;4760:63;;4715:118;4900:2;4889:9;4885:18;4872:32;4931:18;4923:6;4920:30;4917:117;;;4953:79;;:::i;:::-;4917:117;5058:78;5128:7;5119:6;5108:9;5104:22;5058:78;:::i;:::-;5048:88;;4843:303;5213:2;5202:9;5198:18;5185:32;5244:18;5236:6;5233:30;5230:117;;;5266:79;;:::i;:::-;5230:117;5371:78;5441:7;5432:6;5421:9;5417:22;5371:78;:::i;:::-;5361:88;;5156:303;5526:3;5515:9;5511:19;5498:33;5558:18;5550:6;5547:30;5544:117;;;5580:79;;:::i;:::-;5544:117;5685:62;5739:7;5730:6;5719:9;5715:22;5685:62;:::i;:::-;5675:72;;5469:288;4255:1509;;;;;;;;:::o;5770:1089::-;5874:6;5882;5890;5898;5906;5955:3;5943:9;5934:7;5930:23;5926:33;5923:120;;;5962:79;;:::i;:::-;5923:120;6082:1;6107:53;6152:7;6143:6;6132:9;6128:22;6107:53;:::i;:::-;6097:63;;6053:117;6209:2;6235:53;6280:7;6271:6;6260:9;6256:22;6235:53;:::i;:::-;6225:63;;6180:118;6337:2;6363:53;6408:7;6399:6;6388:9;6384:22;6363:53;:::i;:::-;6353:63;;6308:118;6465:2;6491:53;6536:7;6527:6;6516:9;6512:22;6491:53;:::i;:::-;6481:63;;6436:118;6621:3;6610:9;6606:19;6593:33;6653:18;6645:6;6642:30;6639:117;;;6675:79;;:::i;:::-;6639:117;6780:62;6834:7;6825:6;6814:9;6810:22;6780:62;:::i;:::-;6770:72;;6564:288;5770:1089;;;;;;;;:::o;6865:468::-;6930:6;6938;6987:2;6975:9;6966:7;6962:23;6958:32;6955:119;;;6993:79;;:::i;:::-;6955:119;7113:1;7138:53;7183:7;7174:6;7163:9;7159:22;7138:53;:::i;:::-;7128:63;;7084:117;7240:2;7266:50;7308:7;7299:6;7288:9;7284:22;7266:50;:::i;:::-;7256:60;;7211:115;6865:468;;;;;:::o;7339:474::-;7407:6;7415;7464:2;7452:9;7443:7;7439:23;7435:32;7432:119;;;7470:79;;:::i;:::-;7432:119;7590:1;7615:53;7660:7;7651:6;7640:9;7636:22;7615:53;:::i;:::-;7605:63;;7561:117;7717:2;7743:53;7788:7;7779:6;7768:9;7764:22;7743:53;:::i;:::-;7733:63;;7688:118;7339:474;;;;;:::o;7819:894::-;7937:6;7945;7994:2;7982:9;7973:7;7969:23;7965:32;7962:119;;;8000:79;;:::i;:::-;7962:119;8148:1;8137:9;8133:17;8120:31;8178:18;8170:6;8167:30;8164:117;;;8200:79;;:::i;:::-;8164:117;8305:78;8375:7;8366:6;8355:9;8351:22;8305:78;:::i;:::-;8295:88;;8091:302;8460:2;8449:9;8445:18;8432:32;8491:18;8483:6;8480:30;8477:117;;;8513:79;;:::i;:::-;8477:117;8618:78;8688:7;8679:6;8668:9;8664:22;8618:78;:::i;:::-;8608:88;;8403:303;7819:894;;;;;:::o;8719:327::-;8777:6;8826:2;8814:9;8805:7;8801:23;8797:32;8794:119;;;8832:79;;:::i;:::-;8794:119;8952:1;8977:52;9021:7;9012:6;9001:9;8997:22;8977:52;:::i;:::-;8967:62;;8923:116;8719:327;;;;:::o;9052:349::-;9121:6;9170:2;9158:9;9149:7;9145:23;9141:32;9138:119;;;9176:79;;:::i;:::-;9138:119;9296:1;9321:63;9376:7;9367:6;9356:9;9352:22;9321:63;:::i;:::-;9311:73;;9267:127;9052:349;;;;:::o;9407:329::-;9466:6;9515:2;9503:9;9494:7;9490:23;9486:32;9483:119;;;9521:79;;:::i;:::-;9483:119;9641:1;9666:53;9711:7;9702:6;9691:9;9687:22;9666:53;:::i;:::-;9656:63;;9612:117;9407:329;;;;:::o;9742:179::-;9811:10;9832:46;9874:3;9866:6;9832:46;:::i;:::-;9910:4;9905:3;9901:14;9887:28;;9742:179;;;;:::o;9927:118::-;10014:24;10032:5;10014:24;:::i;:::-;10009:3;10002:37;9927:118;;:::o;10081:732::-;10200:3;10229:54;10277:5;10229:54;:::i;:::-;10299:86;10378:6;10373:3;10299:86;:::i;:::-;10292:93;;10409:56;10459:5;10409:56;:::i;:::-;10488:7;10519:1;10504:284;10529:6;10526:1;10523:13;10504:284;;;10605:6;10599:13;10632:63;10691:3;10676:13;10632:63;:::i;:::-;10625:70;;10718:60;10771:6;10718:60;:::i;:::-;10708:70;;10564:224;10551:1;10548;10544:9;10539:14;;10504:284;;;10508:14;10804:3;10797:10;;10205:608;;;10081:732;;;;:::o;10819:109::-;10900:21;10915:5;10900:21;:::i;:::-;10895:3;10888:34;10819:109;;:::o;10934:360::-;11020:3;11048:38;11080:5;11048:38;:::i;:::-;11102:70;11165:6;11160:3;11102:70;:::i;:::-;11095:77;;11181:52;11226:6;11221:3;11214:4;11207:5;11203:16;11181:52;:::i;:::-;11258:29;11280:6;11258:29;:::i;:::-;11253:3;11249:39;11242:46;;11024:270;10934:360;;;;:::o;11300:364::-;11388:3;11416:39;11449:5;11416:39;:::i;:::-;11471:71;11535:6;11530:3;11471:71;:::i;:::-;11464:78;;11551:52;11596:6;11591:3;11584:4;11577:5;11573:16;11551:52;:::i;:::-;11628:29;11650:6;11628:29;:::i;:::-;11623:3;11619:39;11612:46;;11392:272;11300:364;;;;:::o;11670:366::-;11812:3;11833:67;11897:2;11892:3;11833:67;:::i;:::-;11826:74;;11909:93;11998:3;11909:93;:::i;:::-;12027:2;12022:3;12018:12;12011:19;;11670:366;;;:::o;12042:::-;12184:3;12205:67;12269:2;12264:3;12205:67;:::i;:::-;12198:74;;12281:93;12370:3;12281:93;:::i;:::-;12399:2;12394:3;12390:12;12383:19;;12042:366;;;:::o;12414:::-;12556:3;12577:67;12641:2;12636:3;12577:67;:::i;:::-;12570:74;;12653:93;12742:3;12653:93;:::i;:::-;12771:2;12766:3;12762:12;12755:19;;12414:366;;;:::o;12786:::-;12928:3;12949:67;13013:2;13008:3;12949:67;:::i;:::-;12942:74;;13025:93;13114:3;13025:93;:::i;:::-;13143:2;13138:3;13134:12;13127:19;;12786:366;;;:::o;13158:::-;13300:3;13321:67;13385:2;13380:3;13321:67;:::i;:::-;13314:74;;13397:93;13486:3;13397:93;:::i;:::-;13515:2;13510:3;13506:12;13499:19;;13158:366;;;:::o;13530:::-;13672:3;13693:67;13757:2;13752:3;13693:67;:::i;:::-;13686:74;;13769:93;13858:3;13769:93;:::i;:::-;13887:2;13882:3;13878:12;13871:19;;13530:366;;;:::o;13902:::-;14044:3;14065:67;14129:2;14124:3;14065:67;:::i;:::-;14058:74;;14141:93;14230:3;14141:93;:::i;:::-;14259:2;14254:3;14250:12;14243:19;;13902:366;;;:::o;14274:::-;14416:3;14437:67;14501:2;14496:3;14437:67;:::i;:::-;14430:74;;14513:93;14602:3;14513:93;:::i;:::-;14631:2;14626:3;14622:12;14615:19;;14274:366;;;:::o;14646:::-;14788:3;14809:67;14873:2;14868:3;14809:67;:::i;:::-;14802:74;;14885:93;14974:3;14885:93;:::i;:::-;15003:2;14998:3;14994:12;14987:19;;14646:366;;;:::o;15018:108::-;15095:24;15113:5;15095:24;:::i;:::-;15090:3;15083:37;15018:108;;:::o;15132:118::-;15219:24;15237:5;15219:24;:::i;:::-;15214:3;15207:37;15132:118;;:::o;15256:1053::-;15579:4;15617:3;15606:9;15602:19;15594:27;;15631:71;15699:1;15688:9;15684:17;15675:6;15631:71;:::i;:::-;15712:72;15780:2;15769:9;15765:18;15756:6;15712:72;:::i;:::-;15831:9;15825:4;15821:20;15816:2;15805:9;15801:18;15794:48;15859:108;15962:4;15953:6;15859:108;:::i;:::-;15851:116;;16014:9;16008:4;16004:20;15999:2;15988:9;15984:18;15977:48;16042:108;16145:4;16136:6;16042:108;:::i;:::-;16034:116;;16198:9;16192:4;16188:20;16182:3;16171:9;16167:19;16160:49;16226:76;16297:4;16288:6;16226:76;:::i;:::-;16218:84;;15256:1053;;;;;;;;:::o;16315:751::-;16538:4;16576:3;16565:9;16561:19;16553:27;;16590:71;16658:1;16647:9;16643:17;16634:6;16590:71;:::i;:::-;16671:72;16739:2;16728:9;16724:18;16715:6;16671:72;:::i;:::-;16753;16821:2;16810:9;16806:18;16797:6;16753:72;:::i;:::-;16835;16903:2;16892:9;16888:18;16879:6;16835:72;:::i;:::-;16955:9;16949:4;16945:20;16939:3;16928:9;16924:19;16917:49;16983:76;17054:4;17045:6;16983:76;:::i;:::-;16975:84;;16315:751;;;;;;;;:::o;17072:373::-;17215:4;17253:2;17242:9;17238:18;17230:26;;17302:9;17296:4;17292:20;17288:1;17277:9;17273:17;17266:47;17330:108;17433:4;17424:6;17330:108;:::i;:::-;17322:116;;17072:373;;;;:::o;17451:634::-;17672:4;17710:2;17699:9;17695:18;17687:26;;17759:9;17753:4;17749:20;17745:1;17734:9;17730:17;17723:47;17787:108;17890:4;17881:6;17787:108;:::i;:::-;17779:116;;17942:9;17936:4;17932:20;17927:2;17916:9;17912:18;17905:48;17970:108;18073:4;18064:6;17970:108;:::i;:::-;17962:116;;17451:634;;;;;:::o;18091:210::-;18178:4;18216:2;18205:9;18201:18;18193:26;;18229:65;18291:1;18280:9;18276:17;18267:6;18229:65;:::i;:::-;18091:210;;;;:::o;18307:313::-;18420:4;18458:2;18447:9;18443:18;18435:26;;18507:9;18501:4;18497:20;18493:1;18482:9;18478:17;18471:47;18535:78;18608:4;18599:6;18535:78;:::i;:::-;18527:86;;18307:313;;;;:::o;18626:419::-;18792:4;18830:2;18819:9;18815:18;18807:26;;18879:9;18873:4;18869:20;18865:1;18854:9;18850:17;18843:47;18907:131;19033:4;18907:131;:::i;:::-;18899:139;;18626:419;;;:::o;19051:::-;19217:4;19255:2;19244:9;19240:18;19232:26;;19304:9;19298:4;19294:20;19290:1;19279:9;19275:17;19268:47;19332:131;19458:4;19332:131;:::i;:::-;19324:139;;19051:419;;;:::o;19476:::-;19642:4;19680:2;19669:9;19665:18;19657:26;;19729:9;19723:4;19719:20;19715:1;19704:9;19700:17;19693:47;19757:131;19883:4;19757:131;:::i;:::-;19749:139;;19476:419;;;:::o;19901:::-;20067:4;20105:2;20094:9;20090:18;20082:26;;20154:9;20148:4;20144:20;20140:1;20129:9;20125:17;20118:47;20182:131;20308:4;20182:131;:::i;:::-;20174:139;;19901:419;;;:::o;20326:::-;20492:4;20530:2;20519:9;20515:18;20507:26;;20579:9;20573:4;20569:20;20565:1;20554:9;20550:17;20543:47;20607:131;20733:4;20607:131;:::i;:::-;20599:139;;20326:419;;;:::o;20751:::-;20917:4;20955:2;20944:9;20940:18;20932:26;;21004:9;20998:4;20994:20;20990:1;20979:9;20975:17;20968:47;21032:131;21158:4;21032:131;:::i;:::-;21024:139;;20751:419;;;:::o;21176:::-;21342:4;21380:2;21369:9;21365:18;21357:26;;21429:9;21423:4;21419:20;21415:1;21404:9;21400:17;21393:47;21457:131;21583:4;21457:131;:::i;:::-;21449:139;;21176:419;;;:::o;21601:::-;21767:4;21805:2;21794:9;21790:18;21782:26;;21854:9;21848:4;21844:20;21840:1;21829:9;21825:17;21818:47;21882:131;22008:4;21882:131;:::i;:::-;21874:139;;21601:419;;;:::o;22026:::-;22192:4;22230:2;22219:9;22215:18;22207:26;;22279:9;22273:4;22269:20;22265:1;22254:9;22250:17;22243:47;22307:131;22433:4;22307:131;:::i;:::-;22299:139;;22026:419;;;:::o;22451:222::-;22544:4;22582:2;22571:9;22567:18;22559:26;;22595:71;22663:1;22652:9;22648:17;22639:6;22595:71;:::i;:::-;22451:222;;;;:::o;22679:332::-;22800:4;22838:2;22827:9;22823:18;22815:26;;22851:71;22919:1;22908:9;22904:17;22895:6;22851:71;:::i;:::-;22932:72;23000:2;22989:9;22985:18;22976:6;22932:72;:::i;:::-;22679:332;;;;;:::o;23017:129::-;23051:6;23078:20;;:::i;:::-;23068:30;;23107:33;23135:4;23127:6;23107:33;:::i;:::-;23017:129;;;:::o;23152:75::-;23185:6;23218:2;23212:9;23202:19;;23152:75;:::o;23233:311::-;23310:4;23400:18;23392:6;23389:30;23386:56;;;23422:18;;:::i;:::-;23386:56;23472:4;23464:6;23460:17;23452:25;;23532:4;23526;23522:15;23514:23;;23233:311;;;:::o;23550:::-;23627:4;23717:18;23709:6;23706:30;23703:56;;;23739:18;;:::i;:::-;23703:56;23789:4;23781:6;23777:17;23769:25;;23849:4;23843;23839:15;23831:23;;23550:311;;;:::o;23867:307::-;23928:4;24018:18;24010:6;24007:30;24004:56;;;24040:18;;:::i;:::-;24004:56;24078:29;24100:6;24078:29;:::i;:::-;24070:37;;24162:4;24156;24152:15;24144:23;;23867:307;;;:::o;24180:132::-;24247:4;24270:3;24262:11;;24300:4;24295:3;24291:14;24283:22;;24180:132;;;:::o;24318:114::-;24385:6;24419:5;24413:12;24403:22;;24318:114;;;:::o;24438:98::-;24489:6;24523:5;24517:12;24507:22;;24438:98;;;:::o;24542:99::-;24594:6;24628:5;24622:12;24612:22;;24542:99;;;:::o;24647:113::-;24717:4;24749;24744:3;24740:14;24732:22;;24647:113;;;:::o;24766:184::-;24865:11;24899:6;24894:3;24887:19;24939:4;24934:3;24930:14;24915:29;;24766:184;;;;:::o;24956:168::-;25039:11;25073:6;25068:3;25061:19;25113:4;25108:3;25104:14;25089:29;;24956:168;;;;:::o;25130:169::-;25214:11;25248:6;25243:3;25236:19;25288:4;25283:3;25279:14;25264:29;;25130:169;;;;:::o;25305:305::-;25345:3;25364:20;25382:1;25364:20;:::i;:::-;25359:25;;25398:20;25416:1;25398:20;:::i;:::-;25393:25;;25552:1;25484:66;25480:74;25477:1;25474:81;25471:107;;;25558:18;;:::i;:::-;25471:107;25602:1;25599;25595:9;25588:16;;25305:305;;;;:::o;25616:96::-;25653:7;25682:24;25700:5;25682:24;:::i;:::-;25671:35;;25616:96;;;:::o;25718:90::-;25752:7;25795:5;25788:13;25781:21;25770:32;;25718:90;;;:::o;25814:149::-;25850:7;25890:66;25883:5;25879:78;25868:89;;25814:149;;;:::o;25969:126::-;26006:7;26046:42;26039:5;26035:54;26024:65;;25969:126;;;:::o;26101:77::-;26138:7;26167:5;26156:16;;26101:77;;;:::o;26184:154::-;26268:6;26263:3;26258;26245:30;26330:1;26321:6;26316:3;26312:16;26305:27;26184:154;;;:::o;26344:307::-;26412:1;26422:113;26436:6;26433:1;26430:13;26422:113;;;26521:1;26516:3;26512:11;26506:18;26502:1;26497:3;26493:11;26486:39;26458:2;26455:1;26451:10;26446:15;;26422:113;;;26553:6;26550:1;26547:13;26544:101;;;26633:1;26624:6;26619:3;26615:16;26608:27;26544:101;26393:258;26344:307;;;:::o;26657:320::-;26701:6;26738:1;26732:4;26728:12;26718:22;;26785:1;26779:4;26775:12;26806:18;26796:81;;26862:4;26854:6;26850:17;26840:27;;26796:81;26924:2;26916:6;26913:14;26893:18;26890:38;26887:84;;;26943:18;;:::i;:::-;26887:84;26708:269;26657:320;;;:::o;26983:281::-;27066:27;27088:4;27066:27;:::i;:::-;27058:6;27054:40;27196:6;27184:10;27181:22;27160:18;27148:10;27145:34;27142:62;27139:88;;;27207:18;;:::i;:::-;27139:88;27247:10;27243:2;27236:22;27026:238;26983:281;;:::o;27270:233::-;27309:3;27332:24;27350:5;27332:24;:::i;:::-;27323:33;;27378:66;27371:5;27368:77;27365:103;;;27448:18;;:::i;:::-;27365:103;27495:1;27488:5;27484:13;27477:20;;27270:233;;;:::o;27509:180::-;27557:77;27554:1;27547:88;27654:4;27651:1;27644:15;27678:4;27675:1;27668:15;27695:180;27743:77;27740:1;27733:88;27840:4;27837:1;27830:15;27864:4;27861:1;27854:15;27881:180;27929:77;27926:1;27919:88;28026:4;28023:1;28016:15;28050:4;28047:1;28040:15;28067:180;28115:77;28112:1;28105:88;28212:4;28209:1;28202:15;28236:4;28233:1;28226:15;28253:183;28288:3;28326:1;28308:16;28305:23;28302:128;;;28364:1;28361;28358;28343:23;28386:34;28417:1;28411:8;28386:34;:::i;:::-;28379:41;;28302:128;28253:183;:::o;28442:117::-;28551:1;28548;28541:12;28565:117;28674:1;28671;28664:12;28688:117;28797:1;28794;28787:12;28811:117;28920:1;28917;28910:12;28934:117;29043:1;29040;29033:12;29057:102;29098:6;29149:2;29145:7;29140:2;29133:5;29129:14;29125:28;29115:38;;29057:102;;;:::o;29165:106::-;29209:8;29258:5;29253:3;29249:15;29228:36;;29165:106;;;:::o;29277:227::-;29417:34;29413:1;29405:6;29401:14;29394:58;29486:10;29481:2;29473:6;29469:15;29462:35;29277:227;:::o;29510:229::-;29650:34;29646:1;29638:6;29634:14;29627:58;29719:12;29714:2;29706:6;29702:15;29695:37;29510:229;:::o;29745:233::-;29885:34;29881:1;29873:6;29869:14;29862:58;29954:16;29949:2;29941:6;29937:15;29930:41;29745:233;:::o;29984:224::-;30124:34;30120:1;30112:6;30108:14;30101:58;30193:7;30188:2;30180:6;30176:15;30169:32;29984:224;:::o;30214:229::-;30354:34;30350:1;30342:6;30338:14;30331:58;30423:12;30418:2;30410:6;30406:15;30399:37;30214:229;:::o;30449:228::-;30589:34;30585:1;30577:6;30573:14;30566:58;30658:11;30653:2;30645:6;30641:15;30634:36;30449:228;:::o;30683:::-;30823:34;30819:1;30811:6;30807:14;30800:58;30892:11;30887:2;30879:6;30875:15;30868:36;30683:228;:::o;30917:227::-;31057:34;31053:1;31045:6;31041:14;31034:58;31126:10;31121:2;31113:6;31109:15;31102:35;30917:227;:::o;31150:239::-;31290:34;31286:1;31278:6;31274:14;31267:58;31359:22;31354:2;31346:6;31342:15;31335:47;31150:239;:::o;31395:711::-;31434:3;31472:4;31454:16;31451:26;31448:39;;;31480:5;;31448:39;31509:20;;:::i;:::-;31584:1;31566:16;31562:24;31559:1;31553:4;31538:49;31617:4;31611:11;31716:16;31709:4;31701:6;31697:17;31694:39;31661:18;31653:6;31650:30;31634:113;31631:146;;;31762:5;;;;31631:146;31808:6;31802:4;31798:17;31844:3;31838:10;31871:18;31863:6;31860:30;31857:43;;;31893:5;;;;;;31857:43;31941:6;31934:4;31929:3;31925:14;31921:27;32000:1;31982:16;31978:24;31972:4;31968:35;31963:3;31960:44;31957:57;;;32007:5;;;;;;;31957:57;32024;32072:6;32066:4;32062:17;32054:6;32050:30;32044:4;32024:57;:::i;:::-;32097:3;32090:10;;31438:668;;;;;31395:711;;:::o;32112:122::-;32185:24;32203:5;32185:24;:::i;:::-;32178:5;32175:35;32165:63;;32224:1;32221;32214:12;32165:63;32112:122;:::o;32240:116::-;32310:21;32325:5;32310:21;:::i;:::-;32303:5;32300:32;32290:60;;32346:1;32343;32336:12;32290:60;32240:116;:::o;32362:120::-;32434:23;32451:5;32434:23;:::i;:::-;32427:5;32424:34;32414:62;;32472:1;32469;32462:12;32414:62;32362:120;:::o;32488:122::-;32561:24;32579:5;32561:24;:::i;:::-;32554:5;32551:35;32541:63;;32600:1;32597;32590:12;32541:63;32488:122;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1914200",
								"executionCost": "2026",
								"totalCost": "1916226"
							},
							"external": {
								"balanceOf(address,uint256)": "infinite",
								"balanceOfBatch(address[],uint256[])": "infinite",
								"isApprovedForAll(address,address)": "infinite",
								"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "infinite",
								"safeTransferFrom(address,address,uint256,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "infinite",
								"supportsInterface(bytes4)": "796",
								"uri(uint256)": "infinite"
							},
							"internal": {
								"__ERC1155_init(string memory)": "infinite",
								"__ERC1155_init_unchained(string memory)": "infinite",
								"_afterTokenTransfer(address,address,address,uint256[] memory,uint256[] memory,bytes memory)": "21",
								"_asSingletonArray(uint256)": "infinite",
								"_beforeTokenTransfer(address,address,address,uint256[] memory,uint256[] memory,bytes memory)": "21",
								"_burn(address,uint256,uint256)": "infinite",
								"_burnBatch(address,uint256[] memory,uint256[] memory)": "infinite",
								"_doSafeBatchTransferAcceptanceCheck(address,address,address,uint256[] memory,uint256[] memory,bytes memory)": "infinite",
								"_doSafeTransferAcceptanceCheck(address,address,address,uint256,uint256,bytes memory)": "infinite",
								"_mint(address,uint256,uint256,bytes memory)": "infinite",
								"_mintBatch(address,uint256[] memory,uint256[] memory,bytes memory)": "infinite",
								"_safeBatchTransferFrom(address,address,uint256[] memory,uint256[] memory,bytes memory)": "infinite",
								"_safeTransferFrom(address,address,uint256,uint256,bytes memory)": "infinite",
								"_setApprovalForAll(address,address,bool)": "infinite",
								"_setURI(string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 682,
									"end": 18002,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 682,
									"end": 18002,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 682,
									"end": 18002,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 682,
									"end": 18002,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 682,
									"end": 18002,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 682,
									"end": 18002,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 682,
									"end": 18002,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 682,
									"end": 18002,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 682,
									"end": 18002,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 682,
									"end": 18002,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 682,
									"end": 18002,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 682,
									"end": 18002,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 682,
									"end": 18002,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 682,
									"end": 18002,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 682,
									"end": 18002,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 682,
									"end": 18002,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 682,
									"end": 18002,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 682,
									"end": 18002,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 682,
									"end": 18002,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 682,
									"end": 18002,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 682,
									"end": 18002,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220aa51d1e75a51fce5b75e163d0a1f725e19ef1c65637c1ef3288607ec6755ab1364736f6c63430008070033",
									".code": [
										{
											"begin": 682,
											"end": 18002,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 682,
											"end": 18002,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 682,
											"end": 18002,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 682,
											"end": 18002,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 682,
											"end": 18002,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 682,
											"end": 18002,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 682,
											"end": 18002,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 682,
											"end": 18002,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 682,
											"end": 18002,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 682,
											"end": 18002,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 682,
											"end": 18002,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 682,
											"end": 18002,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 682,
											"end": 18002,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 682,
											"end": 18002,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 682,
											"end": 18002,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 682,
											"end": 18002,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 682,
											"end": 18002,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 682,
											"end": 18002,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 682,
											"end": 18002,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 682,
											"end": 18002,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 682,
											"end": 18002,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 682,
											"end": 18002,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 682,
											"end": 18002,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 682,
											"end": 18002,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 682,
											"end": 18002,
											"name": "PUSH",
											"source": 1,
											"value": "4E1273F4"
										},
										{
											"begin": 682,
											"end": 18002,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 682,
											"end": 18002,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 682,
											"end": 18002,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 682,
											"end": 18002,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 682,
											"end": 18002,
											"name": "PUSH",
											"source": 1,
											"value": "4E1273F4"
										},
										{
											"begin": 682,
											"end": 18002,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 682,
											"end": 18002,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 682,
											"end": 18002,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 682,
											"end": 18002,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 682,
											"end": 18002,
											"name": "PUSH",
											"source": 1,
											"value": "A22CB465"
										},
										{
											"begin": 682,
											"end": 18002,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 682,
											"end": 18002,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 682,
											"end": 18002,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 682,
											"end": 18002,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 682,
											"end": 18002,
											"name": "PUSH",
											"source": 1,
											"value": "E985E9C5"
										},
										{
											"begin": 682,
											"end": 18002,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 682,
											"end": 18002,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 682,
											"end": 18002,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 682,
											"end": 18002,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 682,
											"end": 18002,
											"name": "PUSH",
											"source": 1,
											"value": "F242432A"
										},
										{
											"begin": 682,
											"end": 18002,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 682,
											"end": 18002,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 682,
											"end": 18002,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 682,
											"end": 18002,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 682,
											"end": 18002,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 682,
											"end": 18002,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 682,
											"end": 18002,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 682,
											"end": 18002,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 682,
											"end": 18002,
											"name": "PUSH",
											"source": 1,
											"value": "FDD58E"
										},
										{
											"begin": 682,
											"end": 18002,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 682,
											"end": 18002,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 682,
											"end": 18002,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 682,
											"end": 18002,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 682,
											"end": 18002,
											"name": "PUSH",
											"source": 1,
											"value": "1FFC9A7"
										},
										{
											"begin": 682,
											"end": 18002,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 682,
											"end": 18002,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 682,
											"end": 18002,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 682,
											"end": 18002,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 682,
											"end": 18002,
											"name": "PUSH",
											"source": 1,
											"value": "E89341C"
										},
										{
											"begin": 682,
											"end": 18002,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 682,
											"end": 18002,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 682,
											"end": 18002,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 682,
											"end": 18002,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 682,
											"end": 18002,
											"name": "PUSH",
											"source": 1,
											"value": "2EB2C2D6"
										},
										{
											"begin": 682,
											"end": 18002,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 682,
											"end": 18002,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 682,
											"end": 18002,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 682,
											"end": 18002,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 682,
											"end": 18002,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 682,
											"end": 18002,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 682,
											"end": 18002,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 682,
											"end": 18002,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2593,
											"end": 2820,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2593,
											"end": 2820,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2593,
											"end": 2820,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 2593,
											"end": 2820,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2593,
											"end": 2820,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2593,
											"end": 2820,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2593,
											"end": 2820,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2593,
											"end": 2820,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2593,
											"end": 2820,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2593,
											"end": 2820,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2593,
											"end": 2820,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 2593,
											"end": 2820,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2593,
											"end": 2820,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2593,
											"end": 2820,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 2593,
											"end": 2820,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2593,
											"end": 2820,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 2593,
											"end": 2820,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2593,
											"end": 2820,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 2593,
											"end": 2820,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2593,
											"end": 2820,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 2593,
											"end": 2820,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2593,
											"end": 2820,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2593,
											"end": 2820,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2593,
											"end": 2820,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 2593,
											"end": 2820,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2593,
											"end": 2820,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2593,
											"end": 2820,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 2593,
											"end": 2820,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2593,
											"end": 2820,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 2593,
											"end": 2820,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2593,
											"end": 2820,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2593,
											"end": 2820,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2593,
											"end": 2820,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2593,
											"end": 2820,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2593,
											"end": 2820,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2593,
											"end": 2820,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2593,
											"end": 2820,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1600,
											"end": 1949,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1600,
											"end": 1949,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1600,
											"end": 1949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 1600,
											"end": 1949,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1600,
											"end": 1949,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1600,
											"end": 1949,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1600,
											"end": 1949,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1600,
											"end": 1949,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1600,
											"end": 1949,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1600,
											"end": 1949,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1600,
											"end": 1949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 1600,
											"end": 1949,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1600,
											"end": 1949,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1600,
											"end": 1949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1600,
											"end": 1949,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1600,
											"end": 1949,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 1600,
											"end": 1949,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1600,
											"end": 1949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 1600,
											"end": 1949,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1600,
											"end": 1949,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 1600,
											"end": 1949,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1600,
											"end": 1949,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1600,
											"end": 1949,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1600,
											"end": 1949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 1600,
											"end": 1949,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1600,
											"end": 1949,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1600,
											"end": 1949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 1600,
											"end": 1949,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1600,
											"end": 1949,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 1600,
											"end": 1949,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1600,
											"end": 1949,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1600,
											"end": 1949,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1600,
											"end": 1949,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1600,
											"end": 1949,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1600,
											"end": 1949,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1600,
											"end": 1949,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1600,
											"end": 1949,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2451,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 2348,
											"end": 2451,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2451,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2348,
											"end": 2451,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2348,
											"end": 2451,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2451,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2451,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2451,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2451,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2451,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2451,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 2348,
											"end": 2451,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2451,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2451,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 2348,
											"end": 2451,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2348,
											"end": 2451,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 2348,
											"end": 2451,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2451,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 2348,
											"end": 2451,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2348,
											"end": 2451,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2348,
											"end": 2451,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2451,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2348,
											"end": 2451,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2451,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 2348,
											"end": 2451,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2451,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2451,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 2348,
											"end": 2451,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2348,
											"end": 2451,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 2348,
											"end": 2451,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2451,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2348,
											"end": 2451,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2451,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2451,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2451,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2451,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2451,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 4472,
											"end": 4898,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 4472,
											"end": 4898,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4472,
											"end": 4898,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 4472,
											"end": 4898,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4472,
											"end": 4898,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4472,
											"end": 4898,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4472,
											"end": 4898,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4472,
											"end": 4898,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4472,
											"end": 4898,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4472,
											"end": 4898,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4472,
											"end": 4898,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 4472,
											"end": 4898,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4472,
											"end": 4898,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4472,
											"end": 4898,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 4472,
											"end": 4898,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4472,
											"end": 4898,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 4472,
											"end": 4898,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4472,
											"end": 4898,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 4472,
											"end": 4898,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4472,
											"end": 4898,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 4472,
											"end": 4898,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4472,
											"end": 4898,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 2977,
											"end": 3485,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 2977,
											"end": 3485,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2977,
											"end": 3485,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 2977,
											"end": 3485,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2977,
											"end": 3485,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2977,
											"end": 3485,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2977,
											"end": 3485,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2977,
											"end": 3485,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2977,
											"end": 3485,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2977,
											"end": 3485,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2977,
											"end": 3485,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 2977,
											"end": 3485,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2977,
											"end": 3485,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2977,
											"end": 3485,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 2977,
											"end": 3485,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2977,
											"end": 3485,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 2977,
											"end": 3485,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2977,
											"end": 3485,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 2977,
											"end": 3485,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2977,
											"end": 3485,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 2977,
											"end": 3485,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2977,
											"end": 3485,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2977,
											"end": 3485,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2977,
											"end": 3485,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 2977,
											"end": 3485,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2977,
											"end": 3485,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2977,
											"end": 3485,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 2977,
											"end": 3485,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2977,
											"end": 3485,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 2977,
											"end": 3485,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2977,
											"end": 3485,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2977,
											"end": 3485,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2977,
											"end": 3485,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2977,
											"end": 3485,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2977,
											"end": 3485,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2977,
											"end": 3485,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2977,
											"end": 3485,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 3553,
											"end": 3706,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 3553,
											"end": 3706,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3553,
											"end": 3706,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3553,
											"end": 3706,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3553,
											"end": 3706,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3553,
											"end": 3706,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3553,
											"end": 3706,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3553,
											"end": 3706,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3553,
											"end": 3706,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3553,
											"end": 3706,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3553,
											"end": 3706,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 3553,
											"end": 3706,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3553,
											"end": 3706,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3553,
											"end": 3706,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 3553,
											"end": 3706,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3553,
											"end": 3706,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 3553,
											"end": 3706,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3553,
											"end": 3706,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 3553,
											"end": 3706,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3553,
											"end": 3706,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3553,
											"end": 3706,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3553,
											"end": 3706,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 3773,
											"end": 3939,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 3773,
											"end": 3939,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3773,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3773,
											"end": 3939,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3773,
											"end": 3939,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3773,
											"end": 3939,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3773,
											"end": 3939,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3773,
											"end": 3939,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3773,
											"end": 3939,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3773,
											"end": 3939,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3773,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 3773,
											"end": 3939,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3773,
											"end": 3939,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3773,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 3773,
											"end": 3939,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3773,
											"end": 3939,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 3773,
											"end": 3939,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3773,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 3773,
											"end": 3939,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3773,
											"end": 3939,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3773,
											"end": 3939,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3773,
											"end": 3939,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3773,
											"end": 3939,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3773,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 3773,
											"end": 3939,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3773,
											"end": 3939,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3773,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 3773,
											"end": 3939,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3773,
											"end": 3939,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 3773,
											"end": 3939,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3773,
											"end": 3939,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3773,
											"end": 3939,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3773,
											"end": 3939,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3773,
											"end": 3939,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3773,
											"end": 3939,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3773,
											"end": 3939,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3773,
											"end": 3939,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 4006,
											"end": 4400,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 4006,
											"end": 4400,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4006,
											"end": 4400,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 4006,
											"end": 4400,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4006,
											"end": 4400,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4006,
											"end": 4400,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4006,
											"end": 4400,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4006,
											"end": 4400,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4006,
											"end": 4400,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4006,
											"end": 4400,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4006,
											"end": 4400,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 4006,
											"end": 4400,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4006,
											"end": 4400,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4006,
											"end": 4400,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 4006,
											"end": 4400,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4006,
											"end": 4400,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 4006,
											"end": 4400,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4006,
											"end": 4400,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 4006,
											"end": 4400,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4006,
											"end": 4400,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 4006,
											"end": 4400,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4006,
											"end": 4400,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 2593,
											"end": 2820,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 2593,
											"end": 2820,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2679,
											"end": 2686,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2725,
											"end": 2726,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2706,
											"end": 2727,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2706,
											"end": 2727,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2706,
											"end": 2713,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2706,
											"end": 2727,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2706,
											"end": 2727,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2706,
											"end": 2727,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2706,
											"end": 2727,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2698,
											"end": 2774,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 2698,
											"end": 2774,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2698,
											"end": 2774,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2698,
											"end": 2774,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2698,
											"end": 2774,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2698,
											"end": 2774,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2698,
											"end": 2774,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2698,
											"end": 2774,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2698,
											"end": 2774,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2698,
											"end": 2774,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 2698,
											"end": 2774,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2698,
											"end": 2774,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 2698,
											"end": 2774,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2698,
											"end": 2774,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 2698,
											"end": 2774,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2698,
											"end": 2774,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2698,
											"end": 2774,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2698,
											"end": 2774,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2698,
											"end": 2774,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2698,
											"end": 2774,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2698,
											"end": 2774,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2698,
											"end": 2774,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2698,
											"end": 2774,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 2698,
											"end": 2774,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2791,
											"end": 2800,
											"name": "PUSH",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 2791,
											"end": 2804,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2801,
											"end": 2803,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2791,
											"end": 2804,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2791,
											"end": 2804,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2791,
											"end": 2804,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2791,
											"end": 2804,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2791,
											"end": 2804,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2791,
											"end": 2804,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2791,
											"end": 2804,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2791,
											"end": 2804,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2791,
											"end": 2804,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2791,
											"end": 2804,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2791,
											"end": 2804,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2791,
											"end": 2813,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2805,
											"end": 2812,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2791,
											"end": 2813,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2791,
											"end": 2813,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2791,
											"end": 2813,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2791,
											"end": 2813,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2791,
											"end": 2813,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2791,
											"end": 2813,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2791,
											"end": 2813,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2791,
											"end": 2813,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2791,
											"end": 2813,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2791,
											"end": 2813,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2791,
											"end": 2813,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2791,
											"end": 2813,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2791,
											"end": 2813,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2791,
											"end": 2813,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2791,
											"end": 2813,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2791,
											"end": 2813,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2784,
											"end": 2813,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2784,
											"end": 2813,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2593,
											"end": 2820,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2593,
											"end": 2820,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2593,
											"end": 2820,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2593,
											"end": 2820,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2593,
											"end": 2820,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1600,
											"end": 1949,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 1600,
											"end": 1949,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1724,
											"end": 1728,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1774,
											"end": 1811,
											"name": "PUSH",
											"source": 1,
											"value": "D9B67A2600000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1759,
											"end": 1811,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1759,
											"end": 1811,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 1759,
											"end": 1811,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1759,
											"end": 1770,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1759,
											"end": 1811,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1759,
											"end": 1811,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 1759,
											"end": 1811,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1759,
											"end": 1811,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1759,
											"end": 1890,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1759,
											"end": 1890,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 1759,
											"end": 1890,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1759,
											"end": 1890,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1842,
											"end": 1890,
											"name": "PUSH",
											"source": 1,
											"value": "E89341C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1827,
											"end": 1890,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1827,
											"end": 1890,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 1827,
											"end": 1890,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1827,
											"end": 1838,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1827,
											"end": 1890,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1827,
											"end": 1890,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 1827,
											"end": 1890,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1827,
											"end": 1890,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1759,
											"end": 1890,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 1759,
											"end": 1890,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1759,
											"end": 1942,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1759,
											"end": 1942,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 1759,
											"end": 1942,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1759,
											"end": 1942,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1906,
											"end": 1942,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1930,
											"end": 1941,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1906,
											"end": 1929,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 1906,
											"end": 1942,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1906,
											"end": 1942,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1906,
											"end": 1942,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1759,
											"end": 1942,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 1759,
											"end": 1942,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1740,
											"end": 1942,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1740,
											"end": 1942,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1600,
											"end": 1949,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1600,
											"end": 1949,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1600,
											"end": 1949,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1600,
											"end": 1949,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2348,
											"end": 2451,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 2348,
											"end": 2451,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2408,
											"end": 2421,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2440,
											"end": 2444,
											"name": "PUSH",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 2433,
											"end": 2444,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2433,
											"end": 2444,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2433,
											"end": 2444,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 2433,
											"end": 2444,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2433,
											"end": 2444,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2433,
											"end": 2444,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2433,
											"end": 2444,
											"name": "tag",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 2433,
											"end": 2444,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2433,
											"end": 2444,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2433,
											"end": 2444,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2433,
											"end": 2444,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2433,
											"end": 2444,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2433,
											"end": 2444,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2433,
											"end": 2444,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2433,
											"end": 2444,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2433,
											"end": 2444,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2433,
											"end": 2444,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2433,
											"end": 2444,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2433,
											"end": 2444,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2433,
											"end": 2444,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2433,
											"end": 2444,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2433,
											"end": 2444,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2433,
											"end": 2444,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2433,
											"end": 2444,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2433,
											"end": 2444,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2433,
											"end": 2444,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2433,
											"end": 2444,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2433,
											"end": 2444,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2433,
											"end": 2444,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2433,
											"end": 2444,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2433,
											"end": 2444,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2433,
											"end": 2444,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2433,
											"end": 2444,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2433,
											"end": 2444,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2433,
											"end": 2444,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2433,
											"end": 2444,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2433,
											"end": 2444,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2433,
											"end": 2444,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 2433,
											"end": 2444,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2433,
											"end": 2444,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2433,
											"end": 2444,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2433,
											"end": 2444,
											"name": "tag",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 2433,
											"end": 2444,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2433,
											"end": 2444,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2433,
											"end": 2444,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2433,
											"end": 2444,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 2433,
											"end": 2444,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2433,
											"end": 2444,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2433,
											"end": 2444,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2433,
											"end": 2444,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2433,
											"end": 2444,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 2433,
											"end": 2444,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2433,
											"end": 2444,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2433,
											"end": 2444,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2433,
											"end": 2444,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2433,
											"end": 2444,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2433,
											"end": 2444,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2433,
											"end": 2444,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2433,
											"end": 2444,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2433,
											"end": 2444,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2433,
											"end": 2444,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2433,
											"end": 2444,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2433,
											"end": 2444,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2433,
											"end": 2444,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2433,
											"end": 2444,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 2433,
											"end": 2444,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2433,
											"end": 2444,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 2433,
											"end": 2444,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2433,
											"end": 2444,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2433,
											"end": 2444,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2433,
											"end": 2444,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2433,
											"end": 2444,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2433,
											"end": 2444,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2433,
											"end": 2444,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2433,
											"end": 2444,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2433,
											"end": 2444,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2433,
											"end": 2444,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2433,
											"end": 2444,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2433,
											"end": 2444,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 2433,
											"end": 2444,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2433,
											"end": 2444,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2433,
											"end": 2444,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2433,
											"end": 2444,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2433,
											"end": 2444,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2433,
											"end": 2444,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2433,
											"end": 2444,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2433,
											"end": 2444,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2433,
											"end": 2444,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2433,
											"end": 2444,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2433,
											"end": 2444,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2433,
											"end": 2444,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2433,
											"end": 2444,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2433,
											"end": 2444,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2433,
											"end": 2444,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 2433,
											"end": 2444,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2433,
											"end": 2444,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2433,
											"end": 2444,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2433,
											"end": 2444,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2433,
											"end": 2444,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2433,
											"end": 2444,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2433,
											"end": 2444,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2433,
											"end": 2444,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2433,
											"end": 2444,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2433,
											"end": 2444,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 2433,
											"end": 2444,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2433,
											"end": 2444,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2433,
											"end": 2444,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2433,
											"end": 2444,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2433,
											"end": 2444,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2433,
											"end": 2444,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2433,
											"end": 2444,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2433,
											"end": 2444,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2451,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2451,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2451,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2451,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4472,
											"end": 4898,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 4472,
											"end": 4898,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4705,
											"end": 4717,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 4705,
											"end": 4715,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 4705,
											"end": 4717,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4705,
											"end": 4717,
											"name": "tag",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 4705,
											"end": 4717,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4697,
											"end": 4717,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4697,
											"end": 4717,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4697,
											"end": 4701,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4697,
											"end": 4717,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4697,
											"end": 4717,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4697,
											"end": 4717,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 4697,
											"end": 4757,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4697,
											"end": 4757,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 4697,
											"end": 4757,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4697,
											"end": 4757,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4721,
											"end": 4757,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 4738,
											"end": 4742,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4744,
											"end": 4756,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 4744,
											"end": 4754,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 4744,
											"end": 4756,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4744,
											"end": 4756,
											"name": "tag",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 4744,
											"end": 4756,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4721,
											"end": 4737,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 4721,
											"end": 4757,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4721,
											"end": 4757,
											"name": "tag",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 4721,
											"end": 4757,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4697,
											"end": 4757,
											"name": "tag",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 4697,
											"end": 4757,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4676,
											"end": 4829,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 4676,
											"end": 4829,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4676,
											"end": 4829,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4676,
											"end": 4829,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4676,
											"end": 4829,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4676,
											"end": 4829,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4676,
											"end": 4829,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4676,
											"end": 4829,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4676,
											"end": 4829,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4676,
											"end": 4829,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 4676,
											"end": 4829,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4676,
											"end": 4829,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 4676,
											"end": 4829,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4676,
											"end": 4829,
											"name": "tag",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 4676,
											"end": 4829,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4676,
											"end": 4829,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4676,
											"end": 4829,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4676,
											"end": 4829,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4676,
											"end": 4829,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4676,
											"end": 4829,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4676,
											"end": 4829,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4676,
											"end": 4829,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4676,
											"end": 4829,
											"name": "tag",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 4676,
											"end": 4829,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4839,
											"end": 4891,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 4862,
											"end": 4866,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4868,
											"end": 4870,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4872,
											"end": 4875,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4877,
											"end": 4884,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4886,
											"end": 4890,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4839,
											"end": 4861,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 4839,
											"end": 4891,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4839,
											"end": 4891,
											"name": "tag",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 4839,
											"end": 4891,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4472,
											"end": 4898,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4472,
											"end": 4898,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4472,
											"end": 4898,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4472,
											"end": 4898,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4472,
											"end": 4898,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4472,
											"end": 4898,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2977,
											"end": 3485,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 2977,
											"end": 3485,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3128,
											"end": 3144,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 3187,
											"end": 3190,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3187,
											"end": 3197,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3168,
											"end": 3176,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3168,
											"end": 3183,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3168,
											"end": 3197,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 3160,
											"end": 3243,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 3160,
											"end": 3243,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3160,
											"end": 3243,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3160,
											"end": 3243,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3160,
											"end": 3243,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3160,
											"end": 3243,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3160,
											"end": 3243,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3160,
											"end": 3243,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3160,
											"end": 3243,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3160,
											"end": 3243,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 3160,
											"end": 3243,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3160,
											"end": 3243,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 3160,
											"end": 3243,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3160,
											"end": 3243,
											"name": "tag",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 3160,
											"end": 3243,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3160,
											"end": 3243,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3160,
											"end": 3243,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3160,
											"end": 3243,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3160,
											"end": 3243,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3160,
											"end": 3243,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3160,
											"end": 3243,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3160,
											"end": 3243,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3160,
											"end": 3243,
											"name": "tag",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 3160,
											"end": 3243,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3254,
											"end": 3284,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3301,
											"end": 3309,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3301,
											"end": 3316,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3287,
											"end": 3317,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3287,
											"end": 3317,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3287,
											"end": 3317,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 3287,
											"end": 3317,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3287,
											"end": 3317,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 3287,
											"end": 3317,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3287,
											"end": 3317,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 3287,
											"end": 3317,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 3287,
											"end": 3317,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3287,
											"end": 3317,
											"name": "tag",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 3287,
											"end": 3317,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3287,
											"end": 3317,
											"name": "tag",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 3287,
											"end": 3317,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3287,
											"end": 3317,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3287,
											"end": 3317,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3287,
											"end": 3317,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3287,
											"end": 3317,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3287,
											"end": 3317,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3287,
											"end": 3317,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3287,
											"end": 3317,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3287,
											"end": 3317,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3287,
											"end": 3317,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 3287,
											"end": 3317,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3287,
											"end": 3317,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3287,
											"end": 3317,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3287,
											"end": 3317,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3287,
											"end": 3317,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3287,
											"end": 3317,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3287,
											"end": 3317,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3287,
											"end": 3317,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3287,
											"end": 3317,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 3287,
											"end": 3317,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3287,
											"end": 3317,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3287,
											"end": 3317,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3287,
											"end": 3317,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3287,
											"end": 3317,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3287,
											"end": 3317,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3287,
											"end": 3317,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 3287,
											"end": 3317,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3287,
											"end": 3317,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3287,
											"end": 3317,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3287,
											"end": 3317,
											"name": "CALLDATACOPY",
											"source": 1
										},
										{
											"begin": 3287,
											"end": 3317,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3287,
											"end": 3317,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3287,
											"end": 3317,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3287,
											"end": 3317,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3287,
											"end": 3317,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3287,
											"end": 3317,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3287,
											"end": 3317,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3287,
											"end": 3317,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3287,
											"end": 3317,
											"name": "tag",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 3287,
											"end": 3317,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3287,
											"end": 3317,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3254,
											"end": 3317,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3254,
											"end": 3317,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3333,
											"end": 3342,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3328,
											"end": 3448,
											"name": "tag",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 3328,
											"end": 3448,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3352,
											"end": 3360,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3352,
											"end": 3367,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3348,
											"end": 3349,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3348,
											"end": 3367,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 3328,
											"end": 3448,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3328,
											"end": 3448,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 3328,
											"end": 3448,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3407,
											"end": 3437,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 3417,
											"end": 3425,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3426,
											"end": 3427,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3417,
											"end": 3428,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3417,
											"end": 3428,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3417,
											"end": 3428,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3417,
											"end": 3428,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 3417,
											"end": 3428,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 3417,
											"end": 3428,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3417,
											"end": 3428,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 3417,
											"end": 3428,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 3417,
											"end": 3428,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3417,
											"end": 3428,
											"name": "tag",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 3417,
											"end": 3428,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3417,
											"end": 3428,
											"name": "tag",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 3417,
											"end": 3428,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3417,
											"end": 3428,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3417,
											"end": 3428,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 3417,
											"end": 3428,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3417,
											"end": 3428,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3417,
											"end": 3428,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3417,
											"end": 3428,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3430,
											"end": 3433,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3434,
											"end": 3435,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3430,
											"end": 3436,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3430,
											"end": 3436,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3430,
											"end": 3436,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3430,
											"end": 3436,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 3430,
											"end": 3436,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 3430,
											"end": 3436,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3430,
											"end": 3436,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 3430,
											"end": 3436,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 3430,
											"end": 3436,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3430,
											"end": 3436,
											"name": "tag",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 3430,
											"end": 3436,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3430,
											"end": 3436,
											"name": "tag",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 3430,
											"end": 3436,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3430,
											"end": 3436,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3430,
											"end": 3436,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 3430,
											"end": 3436,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3430,
											"end": 3436,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3430,
											"end": 3436,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3430,
											"end": 3436,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3407,
											"end": 3416,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 3407,
											"end": 3437,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3407,
											"end": 3437,
											"name": "tag",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 3407,
											"end": 3437,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3388,
											"end": 3401,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3402,
											"end": 3403,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3388,
											"end": 3404,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3388,
											"end": 3404,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3388,
											"end": 3404,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3388,
											"end": 3404,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 3388,
											"end": 3404,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 3388,
											"end": 3404,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3388,
											"end": 3404,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 3388,
											"end": 3404,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 3388,
											"end": 3404,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3388,
											"end": 3404,
											"name": "tag",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 3388,
											"end": 3404,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3388,
											"end": 3404,
											"name": "tag",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 3388,
											"end": 3404,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3388,
											"end": 3404,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3388,
											"end": 3404,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 3388,
											"end": 3404,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3388,
											"end": 3404,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3388,
											"end": 3404,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3388,
											"end": 3437,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3388,
											"end": 3437,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3388,
											"end": 3437,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3388,
											"end": 3437,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3388,
											"end": 3437,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3369,
											"end": 3372,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3369,
											"end": 3372,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 3369,
											"end": 3372,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3369,
											"end": 3372,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 3369,
											"end": 3372,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3369,
											"end": 3372,
											"name": "tag",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 3369,
											"end": 3372,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3369,
											"end": 3372,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3369,
											"end": 3372,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3328,
											"end": 3448,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 3328,
											"end": 3448,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3328,
											"end": 3448,
											"name": "tag",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 3328,
											"end": 3448,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3328,
											"end": 3448,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3465,
											"end": 3478,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3458,
											"end": 3478,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3458,
											"end": 3478,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3458,
											"end": 3478,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2977,
											"end": 3485,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2977,
											"end": 3485,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2977,
											"end": 3485,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2977,
											"end": 3485,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2977,
											"end": 3485,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3553,
											"end": 3706,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 3553,
											"end": 3706,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3647,
											"end": 3699,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 3666,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 3666,
											"end": 3676,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 3666,
											"end": 3678,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3666,
											"end": 3678,
											"name": "tag",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 3666,
											"end": 3678,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3680,
											"end": 3688,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3690,
											"end": 3698,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3647,
											"end": 3665,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 3647,
											"end": 3699,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3647,
											"end": 3699,
											"name": "tag",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 3647,
											"end": 3699,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3553,
											"end": 3706,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3553,
											"end": 3706,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3553,
											"end": 3706,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3773,
											"end": 3939,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 3773,
											"end": 3939,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3872,
											"end": 3876,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3895,
											"end": 3913,
											"name": "PUSH",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 3895,
											"end": 3922,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3914,
											"end": 3921,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3895,
											"end": 3922,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3895,
											"end": 3922,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3895,
											"end": 3922,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3895,
											"end": 3922,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3895,
											"end": 3922,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3895,
											"end": 3922,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3895,
											"end": 3922,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3895,
											"end": 3922,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3895,
											"end": 3922,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3895,
											"end": 3922,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3895,
											"end": 3922,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3895,
											"end": 3922,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3895,
											"end": 3922,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3895,
											"end": 3922,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3895,
											"end": 3922,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3895,
											"end": 3932,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3895,
											"end": 3932,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3895,
											"end": 3932,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3895,
											"end": 3932,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3895,
											"end": 3932,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3895,
											"end": 3932,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3895,
											"end": 3932,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3895,
											"end": 3932,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3895,
											"end": 3932,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3895,
											"end": 3932,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3895,
											"end": 3932,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3895,
											"end": 3932,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3895,
											"end": 3932,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3895,
											"end": 3932,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3895,
											"end": 3932,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3895,
											"end": 3932,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3895,
											"end": 3932,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3895,
											"end": 3932,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3895,
											"end": 3932,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3895,
											"end": 3932,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3895,
											"end": 3932,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 3895,
											"end": 3932,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 3895,
											"end": 3932,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3895,
											"end": 3932,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 3895,
											"end": 3932,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 3895,
											"end": 3932,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3888,
											"end": 3932,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3888,
											"end": 3932,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3773,
											"end": 3939,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3773,
											"end": 3939,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3773,
											"end": 3939,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3773,
											"end": 3939,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3773,
											"end": 3939,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4006,
											"end": 4400,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 4006,
											"end": 4400,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4214,
											"end": 4226,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 4214,
											"end": 4224,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 4214,
											"end": 4226,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4214,
											"end": 4226,
											"name": "tag",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 4214,
											"end": 4226,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4206,
											"end": 4226,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4206,
											"end": 4226,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4206,
											"end": 4210,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4206,
											"end": 4226,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4206,
											"end": 4226,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4206,
											"end": 4226,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 4206,
											"end": 4266,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4206,
											"end": 4266,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 4206,
											"end": 4266,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4206,
											"end": 4266,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4230,
											"end": 4266,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 4247,
											"end": 4251,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4253,
											"end": 4265,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 4253,
											"end": 4263,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 4253,
											"end": 4265,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4253,
											"end": 4265,
											"name": "tag",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 4253,
											"end": 4265,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4230,
											"end": 4246,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 4230,
											"end": 4266,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4230,
											"end": 4266,
											"name": "tag",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 4230,
											"end": 4266,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4206,
											"end": 4266,
											"name": "tag",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 4206,
											"end": 4266,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4185,
											"end": 4338,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 4185,
											"end": 4338,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4185,
											"end": 4338,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4185,
											"end": 4338,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4185,
											"end": 4338,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4185,
											"end": 4338,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4185,
											"end": 4338,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4185,
											"end": 4338,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4185,
											"end": 4338,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4185,
											"end": 4338,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 4185,
											"end": 4338,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4185,
											"end": 4338,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 4185,
											"end": 4338,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4185,
											"end": 4338,
											"name": "tag",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 4185,
											"end": 4338,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4185,
											"end": 4338,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4185,
											"end": 4338,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4185,
											"end": 4338,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4185,
											"end": 4338,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4185,
											"end": 4338,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4185,
											"end": 4338,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4185,
											"end": 4338,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4185,
											"end": 4338,
											"name": "tag",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 4185,
											"end": 4338,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4393,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 4366,
											"end": 4370,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4372,
											"end": 4374,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4376,
											"end": 4378,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4380,
											"end": 4386,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4388,
											"end": 4392,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4365,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 4348,
											"end": 4393,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4348,
											"end": 4393,
											"name": "tag",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 4348,
											"end": 4393,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4006,
											"end": 4400,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4006,
											"end": 4400,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4006,
											"end": 4400,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4006,
											"end": 4400,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4006,
											"end": 4400,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4006,
											"end": 4400,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1060,
											"end": 1226,
											"name": "tag",
											"source": 7,
											"value": "61"
										},
										{
											"begin": 1060,
											"end": 1226,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1145,
											"end": 1149,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1183,
											"end": 1219,
											"name": "PUSH",
											"source": 7,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1168,
											"end": 1219,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1168,
											"end": 1219,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 1168,
											"end": 1219,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1168,
											"end": 1179,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1168,
											"end": 1219,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1168,
											"end": 1219,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 1168,
											"end": 1219,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1168,
											"end": 1219,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1161,
											"end": 1219,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1161,
											"end": 1219,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1060,
											"end": 1226,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1060,
											"end": 1226,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1060,
											"end": 1226,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1060,
											"end": 1226,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 850,
											"end": 946,
											"name": "tag",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 850,
											"end": 946,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 903,
											"end": 910,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 929,
											"end": 939,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 922,
											"end": 939,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 922,
											"end": 939,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 850,
											"end": 946,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 850,
											"end": 946,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 6641,
											"end": 7756,
											"name": "tag",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 6641,
											"end": 7756,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6861,
											"end": 6868,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6861,
											"end": 6875,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6847,
											"end": 6850,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6847,
											"end": 6857,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6847,
											"end": 6875,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 6839,
											"end": 6920,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 6839,
											"end": 6920,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6839,
											"end": 6920,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6839,
											"end": 6920,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6839,
											"end": 6920,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6839,
											"end": 6920,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6839,
											"end": 6920,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6839,
											"end": 6920,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6839,
											"end": 6920,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6839,
											"end": 6920,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 6839,
											"end": 6920,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6839,
											"end": 6920,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 6839,
											"end": 6920,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6839,
											"end": 6920,
											"name": "tag",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 6839,
											"end": 6920,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6839,
											"end": 6920,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6839,
											"end": 6920,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6839,
											"end": 6920,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6839,
											"end": 6920,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6839,
											"end": 6920,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6839,
											"end": 6920,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6839,
											"end": 6920,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6839,
											"end": 6920,
											"name": "tag",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 6839,
											"end": 6920,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6952,
											"end": 6953,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6938,
											"end": 6954,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6938,
											"end": 6954,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6938,
											"end": 6940,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6938,
											"end": 6954,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6938,
											"end": 6954,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6938,
											"end": 6954,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 6938,
											"end": 6954,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6930,
											"end": 6996,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 6930,
											"end": 6996,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6930,
											"end": 6996,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6930,
											"end": 6996,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6930,
											"end": 6996,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6930,
											"end": 6996,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6930,
											"end": 6996,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6930,
											"end": 6996,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6930,
											"end": 6996,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6930,
											"end": 6996,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 6930,
											"end": 6996,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6930,
											"end": 6996,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 6930,
											"end": 6996,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6930,
											"end": 6996,
											"name": "tag",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 6930,
											"end": 6996,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6930,
											"end": 6996,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6930,
											"end": 6996,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6930,
											"end": 6996,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6930,
											"end": 6996,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6930,
											"end": 6996,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6930,
											"end": 6996,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6930,
											"end": 6996,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6930,
											"end": 6996,
											"name": "tag",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 6930,
											"end": 6996,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7007,
											"end": 7023,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7026,
											"end": 7038,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 7026,
											"end": 7036,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 7026,
											"end": 7038,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7026,
											"end": 7038,
											"name": "tag",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 7026,
											"end": 7038,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7007,
											"end": 7038,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7007,
											"end": 7038,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7049,
											"end": 7109,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 7070,
											"end": 7078,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7080,
											"end": 7084,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 7086,
											"end": 7088,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 7090,
											"end": 7093,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 7095,
											"end": 7102,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 7104,
											"end": 7108,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 7049,
											"end": 7069,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 7049,
											"end": 7109,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7049,
											"end": 7109,
											"name": "tag",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 7049,
											"end": 7109,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7125,
											"end": 7134,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7120,
											"end": 7531,
											"name": "tag",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 7120,
											"end": 7531,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7144,
											"end": 7147,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7144,
											"end": 7154,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7140,
											"end": 7141,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7140,
											"end": 7154,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 7120,
											"end": 7531,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7120,
											"end": 7531,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 7120,
											"end": 7531,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7175,
											"end": 7185,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7188,
											"end": 7191,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7192,
											"end": 7193,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7188,
											"end": 7194,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7188,
											"end": 7194,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7188,
											"end": 7194,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7188,
											"end": 7194,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 7188,
											"end": 7194,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 7188,
											"end": 7194,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7188,
											"end": 7194,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 7188,
											"end": 7194,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 7188,
											"end": 7194,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7188,
											"end": 7194,
											"name": "tag",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 7188,
											"end": 7194,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7188,
											"end": 7194,
											"name": "tag",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 7188,
											"end": 7194,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7188,
											"end": 7194,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7188,
											"end": 7194,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 7188,
											"end": 7194,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7188,
											"end": 7194,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7188,
											"end": 7194,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7188,
											"end": 7194,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7175,
											"end": 7194,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7175,
											"end": 7194,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7208,
											"end": 7222,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7225,
											"end": 7232,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7233,
											"end": 7234,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7225,
											"end": 7235,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7225,
											"end": 7235,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7225,
											"end": 7235,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7225,
											"end": 7235,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 7225,
											"end": 7235,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 7225,
											"end": 7235,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7225,
											"end": 7235,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 7225,
											"end": 7235,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 7225,
											"end": 7235,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7225,
											"end": 7235,
											"name": "tag",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 7225,
											"end": 7235,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7225,
											"end": 7235,
											"name": "tag",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 7225,
											"end": 7235,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7225,
											"end": 7235,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7225,
											"end": 7235,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 7225,
											"end": 7235,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7225,
											"end": 7235,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7225,
											"end": 7235,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7225,
											"end": 7235,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7208,
											"end": 7235,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7208,
											"end": 7235,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7250,
											"end": 7269,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7272,
											"end": 7281,
											"name": "PUSH",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 7272,
											"end": 7285,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7282,
											"end": 7284,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7272,
											"end": 7285,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7272,
											"end": 7285,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7272,
											"end": 7285,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7272,
											"end": 7285,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7272,
											"end": 7285,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7272,
											"end": 7285,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7272,
											"end": 7285,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7272,
											"end": 7285,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7272,
											"end": 7285,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7272,
											"end": 7285,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7272,
											"end": 7285,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7272,
											"end": 7291,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7286,
											"end": 7290,
											"name": "DUP12",
											"source": 1
										},
										{
											"begin": 7272,
											"end": 7291,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7272,
											"end": 7291,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7272,
											"end": 7291,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7272,
											"end": 7291,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7272,
											"end": 7291,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7272,
											"end": 7291,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7272,
											"end": 7291,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7272,
											"end": 7291,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7272,
											"end": 7291,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7272,
											"end": 7291,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7272,
											"end": 7291,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7272,
											"end": 7291,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7272,
											"end": 7291,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7272,
											"end": 7291,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7272,
											"end": 7291,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7272,
											"end": 7291,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7250,
											"end": 7291,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7250,
											"end": 7291,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7328,
											"end": 7334,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7313,
											"end": 7324,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7313,
											"end": 7334,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 7313,
											"end": 7334,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7305,
											"end": 7381,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 7305,
											"end": 7381,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7305,
											"end": 7381,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7305,
											"end": 7381,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7305,
											"end": 7381,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7305,
											"end": 7381,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7305,
											"end": 7381,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7305,
											"end": 7381,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7305,
											"end": 7381,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7305,
											"end": 7381,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 7305,
											"end": 7381,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7305,
											"end": 7381,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 7305,
											"end": 7381,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7305,
											"end": 7381,
											"name": "tag",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 7305,
											"end": 7381,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7305,
											"end": 7381,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7305,
											"end": 7381,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7305,
											"end": 7381,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7305,
											"end": 7381,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7305,
											"end": 7381,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7305,
											"end": 7381,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7305,
											"end": 7381,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7305,
											"end": 7381,
											"name": "tag",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 7305,
											"end": 7381,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7459,
											"end": 7465,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7445,
											"end": 7456,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7445,
											"end": 7465,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7423,
											"end": 7432,
											"name": "PUSH",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 7423,
											"end": 7436,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7433,
											"end": 7435,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7423,
											"end": 7436,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7423,
											"end": 7436,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7423,
											"end": 7436,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7423,
											"end": 7436,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7423,
											"end": 7436,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7423,
											"end": 7436,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7423,
											"end": 7436,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7423,
											"end": 7436,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7423,
											"end": 7436,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7423,
											"end": 7436,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7423,
											"end": 7436,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7423,
											"end": 7442,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7437,
											"end": 7441,
											"name": "DUP13",
											"source": 1
										},
										{
											"begin": 7423,
											"end": 7442,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7423,
											"end": 7442,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7423,
											"end": 7442,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7423,
											"end": 7442,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7423,
											"end": 7442,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7423,
											"end": 7442,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7423,
											"end": 7442,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7423,
											"end": 7442,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7423,
											"end": 7442,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7423,
											"end": 7442,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7423,
											"end": 7442,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7423,
											"end": 7442,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7423,
											"end": 7442,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7423,
											"end": 7442,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7423,
											"end": 7442,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7423,
											"end": 7465,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7423,
											"end": 7465,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7423,
											"end": 7465,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 7423,
											"end": 7465,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7514,
											"end": 7520,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7493,
											"end": 7502,
											"name": "PUSH",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 7493,
											"end": 7506,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7503,
											"end": 7505,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7493,
											"end": 7506,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7493,
											"end": 7506,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7493,
											"end": 7506,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7493,
											"end": 7506,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7493,
											"end": 7506,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7493,
											"end": 7506,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7493,
											"end": 7506,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7493,
											"end": 7506,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7493,
											"end": 7506,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7493,
											"end": 7506,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7493,
											"end": 7506,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7493,
											"end": 7510,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7507,
											"end": 7509,
											"name": "DUP12",
											"source": 1
										},
										{
											"begin": 7493,
											"end": 7510,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7493,
											"end": 7510,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7493,
											"end": 7510,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7493,
											"end": 7510,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7493,
											"end": 7510,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7493,
											"end": 7510,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7493,
											"end": 7510,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7493,
											"end": 7510,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7493,
											"end": 7510,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7493,
											"end": 7510,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7493,
											"end": 7510,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7493,
											"end": 7510,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7493,
											"end": 7510,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7493,
											"end": 7510,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7493,
											"end": 7510,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7493,
											"end": 7510,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7493,
											"end": 7520,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7493,
											"end": 7520,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7493,
											"end": 7520,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7493,
											"end": 7520,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 7493,
											"end": 7520,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7493,
											"end": 7520,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7493,
											"end": 7520,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 7493,
											"end": 7520,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7493,
											"end": 7520,
											"name": "tag",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 7493,
											"end": 7520,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7493,
											"end": 7520,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7493,
											"end": 7520,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7493,
											"end": 7520,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7493,
											"end": 7520,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7493,
											"end": 7520,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7493,
											"end": 7520,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 7493,
											"end": 7520,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7161,
											"end": 7531,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7161,
											"end": 7531,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7161,
											"end": 7531,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7156,
											"end": 7159,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7156,
											"end": 7159,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 7156,
											"end": 7159,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7156,
											"end": 7159,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 7156,
											"end": 7159,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7156,
											"end": 7159,
											"name": "tag",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 7156,
											"end": 7159,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7156,
											"end": 7159,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7156,
											"end": 7159,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7120,
											"end": 7531,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 7120,
											"end": 7531,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7120,
											"end": 7531,
											"name": "tag",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 7120,
											"end": 7531,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7120,
											"end": 7531,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7576,
											"end": 7578,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7546,
											"end": 7593,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7546,
											"end": 7593,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7570,
											"end": 7574,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 7546,
											"end": 7593,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7546,
											"end": 7593,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7560,
											"end": 7568,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7546,
											"end": 7593,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7546,
											"end": 7593,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7546,
											"end": 7593,
											"name": "PUSH",
											"source": 1,
											"value": "4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB"
										},
										{
											"begin": 7580,
											"end": 7583,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 7585,
											"end": 7592,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 7546,
											"end": 7593,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7546,
											"end": 7593,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7546,
											"end": 7593,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 7546,
											"end": 7593,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7546,
											"end": 7593,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7546,
											"end": 7593,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7546,
											"end": 7593,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 7546,
											"end": 7593,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7546,
											"end": 7593,
											"name": "tag",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 7546,
											"end": 7593,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7546,
											"end": 7593,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7546,
											"end": 7593,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7546,
											"end": 7593,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7546,
											"end": 7593,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7546,
											"end": 7593,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7546,
											"end": 7593,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7546,
											"end": 7593,
											"name": "LOG4",
											"source": 1
										},
										{
											"begin": 7604,
											"end": 7663,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 7624,
											"end": 7632,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7634,
											"end": 7638,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 7640,
											"end": 7642,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 7644,
											"end": 7647,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 7649,
											"end": 7656,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 7658,
											"end": 7662,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 7604,
											"end": 7623,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 7604,
											"end": 7663,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7604,
											"end": 7663,
											"name": "tag",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 7604,
											"end": 7663,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7674,
											"end": 7749,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 7710,
											"end": 7718,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7720,
											"end": 7724,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 7726,
											"end": 7728,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 7730,
											"end": 7733,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 7735,
											"end": 7742,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 7744,
											"end": 7748,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 7674,
											"end": 7709,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 7674,
											"end": 7749,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7674,
											"end": 7749,
											"name": "tag",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 7674,
											"end": 7749,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6829,
											"end": 7756,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6641,
											"end": 7756,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6641,
											"end": 7756,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6641,
											"end": 7756,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6641,
											"end": 7756,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6641,
											"end": 7756,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6641,
											"end": 7756,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 13318,
											"end": 13641,
											"name": "tag",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 13318,
											"end": 13641,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13468,
											"end": 13476,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13459,
											"end": 13476,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13459,
											"end": 13476,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13459,
											"end": 13464,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13459,
											"end": 13476,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13459,
											"end": 13476,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13459,
											"end": 13476,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 13459,
											"end": 13476,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 13451,
											"end": 13522,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 13451,
											"end": 13522,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 13451,
											"end": 13522,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 13451,
											"end": 13522,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 13451,
											"end": 13522,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13451,
											"end": 13522,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13451,
											"end": 13522,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13451,
											"end": 13522,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 13451,
											"end": 13522,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13451,
											"end": 13522,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 13451,
											"end": 13522,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13451,
											"end": 13522,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 13451,
											"end": 13522,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 13451,
											"end": 13522,
											"name": "tag",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 13451,
											"end": 13522,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13451,
											"end": 13522,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 13451,
											"end": 13522,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 13451,
											"end": 13522,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13451,
											"end": 13522,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13451,
											"end": 13522,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 13451,
											"end": 13522,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13451,
											"end": 13522,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 13451,
											"end": 13522,
											"name": "tag",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 13451,
											"end": 13522,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13570,
											"end": 13578,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13532,
											"end": 13550,
											"name": "PUSH",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 13532,
											"end": 13557,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13551,
											"end": 13556,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 13532,
											"end": 13557,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13532,
											"end": 13557,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13532,
											"end": 13557,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13532,
											"end": 13557,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13532,
											"end": 13557,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13532,
											"end": 13557,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13532,
											"end": 13557,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13532,
											"end": 13557,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13532,
											"end": 13557,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13532,
											"end": 13557,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13532,
											"end": 13557,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13532,
											"end": 13557,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13532,
											"end": 13557,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13532,
											"end": 13557,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13532,
											"end": 13557,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 13532,
											"end": 13567,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13558,
											"end": 13566,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 13532,
											"end": 13567,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13532,
											"end": 13567,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13532,
											"end": 13567,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13532,
											"end": 13567,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13532,
											"end": 13567,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13532,
											"end": 13567,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13532,
											"end": 13567,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13532,
											"end": 13567,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13532,
											"end": 13567,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13532,
											"end": 13567,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13532,
											"end": 13567,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13532,
											"end": 13567,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13532,
											"end": 13567,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13532,
											"end": 13567,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13532,
											"end": 13567,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 13532,
											"end": 13567,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13532,
											"end": 13578,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 13532,
											"end": 13578,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 13532,
											"end": 13578,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13532,
											"end": 13578,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 13532,
											"end": 13578,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13532,
											"end": 13578,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 13532,
											"end": 13578,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 13532,
											"end": 13578,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 13532,
											"end": 13578,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13532,
											"end": 13578,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13532,
											"end": 13578,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13532,
											"end": 13578,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 13532,
											"end": 13578,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 13532,
											"end": 13578,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 13532,
											"end": 13578,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 13532,
											"end": 13578,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13532,
											"end": 13578,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 13532,
											"end": 13578,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13615,
											"end": 13623,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13593,
											"end": 13634,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13593,
											"end": 13634,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13608,
											"end": 13613,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13593,
											"end": 13634,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13593,
											"end": 13634,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13593,
											"end": 13634,
											"name": "PUSH",
											"source": 1,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 13625,
											"end": 13633,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13593,
											"end": 13634,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 13593,
											"end": 13634,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 13593,
											"end": 13634,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 13593,
											"end": 13634,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13593,
											"end": 13634,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13593,
											"end": 13634,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 13593,
											"end": 13634,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 13593,
											"end": 13634,
											"name": "tag",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 13593,
											"end": 13634,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13593,
											"end": 13634,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 13593,
											"end": 13634,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 13593,
											"end": 13634,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13593,
											"end": 13634,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13593,
											"end": 13634,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 13593,
											"end": 13634,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13593,
											"end": 13634,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 13318,
											"end": 13641,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13318,
											"end": 13641,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13318,
											"end": 13641,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13318,
											"end": 13641,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5348,
											"end": 6295,
											"name": "tag",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 5348,
											"end": 6295,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5543,
											"end": 5544,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5529,
											"end": 5545,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5529,
											"end": 5545,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5529,
											"end": 5531,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5529,
											"end": 5545,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5529,
											"end": 5545,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5529,
											"end": 5545,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 5529,
											"end": 5545,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5521,
											"end": 5587,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 5521,
											"end": 5587,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5521,
											"end": 5587,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5521,
											"end": 5587,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5521,
											"end": 5587,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5521,
											"end": 5587,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5521,
											"end": 5587,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5521,
											"end": 5587,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5521,
											"end": 5587,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5521,
											"end": 5587,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 5521,
											"end": 5587,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5521,
											"end": 5587,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 5521,
											"end": 5587,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5521,
											"end": 5587,
											"name": "tag",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 5521,
											"end": 5587,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5521,
											"end": 5587,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5521,
											"end": 5587,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5521,
											"end": 5587,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5521,
											"end": 5587,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5521,
											"end": 5587,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5521,
											"end": 5587,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5521,
											"end": 5587,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5521,
											"end": 5587,
											"name": "tag",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 5521,
											"end": 5587,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5598,
											"end": 5614,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5617,
											"end": 5629,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 5617,
											"end": 5627,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 5617,
											"end": 5629,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5617,
											"end": 5629,
											"name": "tag",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 5617,
											"end": 5629,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5598,
											"end": 5629,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5598,
											"end": 5629,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5639,
											"end": 5659,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5662,
											"end": 5683,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 5680,
											"end": 5682,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5662,
											"end": 5679,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 5662,
											"end": 5683,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5662,
											"end": 5683,
											"name": "tag",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 5662,
											"end": 5683,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5639,
											"end": 5683,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5639,
											"end": 5683,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5693,
											"end": 5717,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5720,
											"end": 5745,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 5738,
											"end": 5744,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5720,
											"end": 5737,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 5720,
											"end": 5745,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5720,
											"end": 5745,
											"name": "tag",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 5720,
											"end": 5745,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5693,
											"end": 5745,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5693,
											"end": 5745,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5756,
											"end": 5816,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "158"
										},
										{
											"begin": 5777,
											"end": 5785,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5787,
											"end": 5791,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 5793,
											"end": 5795,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 5797,
											"end": 5800,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5802,
											"end": 5809,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5811,
											"end": 5815,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 5756,
											"end": 5776,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 5756,
											"end": 5816,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5756,
											"end": 5816,
											"name": "tag",
											"source": 1,
											"value": "158"
										},
										{
											"begin": 5756,
											"end": 5816,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5827,
											"end": 5846,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5849,
											"end": 5858,
											"name": "PUSH",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 5849,
											"end": 5862,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5859,
											"end": 5861,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 5849,
											"end": 5862,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5849,
											"end": 5862,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5849,
											"end": 5862,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5849,
											"end": 5862,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5849,
											"end": 5862,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5849,
											"end": 5862,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5849,
											"end": 5862,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5849,
											"end": 5862,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5849,
											"end": 5862,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5849,
											"end": 5862,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5849,
											"end": 5862,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 5849,
											"end": 5868,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5863,
											"end": 5867,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 5849,
											"end": 5868,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5849,
											"end": 5868,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5849,
											"end": 5868,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5849,
											"end": 5868,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5849,
											"end": 5868,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5849,
											"end": 5868,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5849,
											"end": 5868,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5849,
											"end": 5868,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5849,
											"end": 5868,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5849,
											"end": 5868,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5849,
											"end": 5868,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5849,
											"end": 5868,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5849,
											"end": 5868,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5849,
											"end": 5868,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5849,
											"end": 5868,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 5849,
											"end": 5868,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5827,
											"end": 5868,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5827,
											"end": 5868,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5901,
											"end": 5907,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5886,
											"end": 5897,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5886,
											"end": 5907,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 5886,
											"end": 5907,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5878,
											"end": 5954,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 5878,
											"end": 5954,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5878,
											"end": 5954,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5878,
											"end": 5954,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5878,
											"end": 5954,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5878,
											"end": 5954,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5878,
											"end": 5954,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5878,
											"end": 5954,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5878,
											"end": 5954,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5878,
											"end": 5954,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 5878,
											"end": 5954,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5878,
											"end": 5954,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 5878,
											"end": 5954,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5878,
											"end": 5954,
											"name": "tag",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 5878,
											"end": 5954,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5878,
											"end": 5954,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5878,
											"end": 5954,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5878,
											"end": 5954,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5878,
											"end": 5954,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5878,
											"end": 5954,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5878,
											"end": 5954,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5878,
											"end": 5954,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5878,
											"end": 5954,
											"name": "tag",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 5878,
											"end": 5954,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6024,
											"end": 6030,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6010,
											"end": 6021,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6010,
											"end": 6030,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5988,
											"end": 5997,
											"name": "PUSH",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 5988,
											"end": 6001,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5998,
											"end": 6000,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 5988,
											"end": 6001,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5988,
											"end": 6001,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5988,
											"end": 6001,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5988,
											"end": 6001,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5988,
											"end": 6001,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5988,
											"end": 6001,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5988,
											"end": 6001,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5988,
											"end": 6001,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5988,
											"end": 6001,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5988,
											"end": 6001,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5988,
											"end": 6001,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 5988,
											"end": 6007,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6002,
											"end": 6006,
											"name": "DUP12",
											"source": 1
										},
										{
											"begin": 5988,
											"end": 6007,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5988,
											"end": 6007,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5988,
											"end": 6007,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5988,
											"end": 6007,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5988,
											"end": 6007,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5988,
											"end": 6007,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5988,
											"end": 6007,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5988,
											"end": 6007,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5988,
											"end": 6007,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5988,
											"end": 6007,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5988,
											"end": 6007,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5988,
											"end": 6007,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5988,
											"end": 6007,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5988,
											"end": 6007,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5988,
											"end": 6007,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 5988,
											"end": 6030,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5988,
											"end": 6030,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5988,
											"end": 6030,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 5988,
											"end": 6030,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6071,
											"end": 6077,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6050,
											"end": 6059,
											"name": "PUSH",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 6050,
											"end": 6063,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6060,
											"end": 6062,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 6050,
											"end": 6063,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6050,
											"end": 6063,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6050,
											"end": 6063,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6050,
											"end": 6063,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6050,
											"end": 6063,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6050,
											"end": 6063,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6050,
											"end": 6063,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6050,
											"end": 6063,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6050,
											"end": 6063,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6050,
											"end": 6063,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6050,
											"end": 6063,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6050,
											"end": 6067,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6064,
											"end": 6066,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 6050,
											"end": 6067,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6050,
											"end": 6067,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6050,
											"end": 6067,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6050,
											"end": 6067,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6050,
											"end": 6067,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6050,
											"end": 6067,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6050,
											"end": 6067,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6050,
											"end": 6067,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6050,
											"end": 6067,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6050,
											"end": 6067,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6050,
											"end": 6067,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6050,
											"end": 6067,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6050,
											"end": 6067,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6050,
											"end": 6067,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6050,
											"end": 6067,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6050,
											"end": 6067,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6050,
											"end": 6077,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6050,
											"end": 6077,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6050,
											"end": 6077,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6050,
											"end": 6077,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "161"
										},
										{
											"begin": 6050,
											"end": 6077,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6050,
											"end": 6077,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6050,
											"end": 6077,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 6050,
											"end": 6077,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6050,
											"end": 6077,
											"name": "tag",
											"source": 1,
											"value": "161"
										},
										{
											"begin": 6050,
											"end": 6077,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6050,
											"end": 6077,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6050,
											"end": 6077,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6050,
											"end": 6077,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6050,
											"end": 6077,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6050,
											"end": 6077,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6050,
											"end": 6077,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 6050,
											"end": 6077,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6124,
											"end": 6126,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 6093,
											"end": 6139,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6093,
											"end": 6139,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6118,
											"end": 6122,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 6093,
											"end": 6139,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6093,
											"end": 6139,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6108,
											"end": 6116,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6093,
											"end": 6139,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6093,
											"end": 6139,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6093,
											"end": 6139,
											"name": "PUSH",
											"source": 1,
											"value": "C3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62"
										},
										{
											"begin": 6128,
											"end": 6130,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 6132,
											"end": 6138,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 6093,
											"end": 6139,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6093,
											"end": 6139,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6093,
											"end": 6139,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 6093,
											"end": 6139,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6093,
											"end": 6139,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6093,
											"end": 6139,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6093,
											"end": 6139,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 6093,
											"end": 6139,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6093,
											"end": 6139,
											"name": "tag",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 6093,
											"end": 6139,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6093,
											"end": 6139,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6093,
											"end": 6139,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6093,
											"end": 6139,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6093,
											"end": 6139,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6093,
											"end": 6139,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6093,
											"end": 6139,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6093,
											"end": 6139,
											"name": "LOG4",
											"source": 1
										},
										{
											"begin": 6150,
											"end": 6209,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 6170,
											"end": 6178,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6180,
											"end": 6184,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 6186,
											"end": 6188,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 6190,
											"end": 6193,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6195,
											"end": 6202,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6204,
											"end": 6208,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 6150,
											"end": 6169,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 6150,
											"end": 6209,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6150,
											"end": 6209,
											"name": "tag",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 6150,
											"end": 6209,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6220,
											"end": 6288,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "165"
										},
										{
											"begin": 6251,
											"end": 6259,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6261,
											"end": 6265,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 6267,
											"end": 6269,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 6271,
											"end": 6273,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 6275,
											"end": 6281,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 6283,
											"end": 6287,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 6220,
											"end": 6250,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 6220,
											"end": 6288,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6220,
											"end": 6288,
											"name": "tag",
											"source": 1,
											"value": "165"
										},
										{
											"begin": 6220,
											"end": 6288,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5511,
											"end": 6295,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5511,
											"end": 6295,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5511,
											"end": 6295,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5511,
											"end": 6295,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5348,
											"end": 6295,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5348,
											"end": 6295,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5348,
											"end": 6295,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5348,
											"end": 6295,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5348,
											"end": 6295,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5348,
											"end": 6295,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 14577,
											"end": 14791,
											"name": "tag",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 14577,
											"end": 14791,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14577,
											"end": 14791,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14577,
											"end": 14791,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14577,
											"end": 14791,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14577,
											"end": 14791,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14577,
											"end": 14791,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14577,
											"end": 14791,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14577,
											"end": 14791,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 15724,
											"end": 15937,
											"name": "tag",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 15724,
											"end": 15937,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15724,
											"end": 15937,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15724,
											"end": 15937,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15724,
											"end": 15937,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15724,
											"end": 15937,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15724,
											"end": 15937,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15724,
											"end": 15937,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15724,
											"end": 15937,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 16696,
											"end": 17510,
											"name": "tag",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 16696,
											"end": 17510,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16928,
											"end": 16943,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "170"
										},
										{
											"begin": 16928,
											"end": 16930,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 16928,
											"end": 16941,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16928,
											"end": 16941,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 16928,
											"end": 16941,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "171"
										},
										{
											"begin": 16928,
											"end": 16943,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 16928,
											"end": 16943,
											"name": "tag",
											"source": 1,
											"value": "170"
										},
										{
											"begin": 16928,
											"end": 16943,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16924,
											"end": 17504,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 16924,
											"end": 17504,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "172"
										},
										{
											"begin": 16924,
											"end": 17504,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 16991,
											"end": 16993,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 16963,
											"end": 17017,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16963,
											"end": 17017,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 16963,
											"end": 17017,
											"name": "PUSH",
											"source": 1,
											"value": "BC197C81"
										},
										{
											"begin": 17018,
											"end": 17026,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 17028,
											"end": 17032,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 17034,
											"end": 17037,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 17039,
											"end": 17046,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 17048,
											"end": 17052,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 16963,
											"end": 17053,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 16963,
											"end": 17053,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 16963,
											"end": 17053,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 16963,
											"end": 17053,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 16963,
											"end": 17053,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 16963,
											"end": 17053,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 16963,
											"end": 17053,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 16963,
											"end": 17053,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16963,
											"end": 17053,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16963,
											"end": 17053,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 16963,
											"end": 17053,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16963,
											"end": 17053,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 16963,
											"end": 17053,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 16963,
											"end": 17053,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 16963,
											"end": 17053,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 16963,
											"end": 17053,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 16963,
											"end": 17053,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16963,
											"end": 17053,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16963,
											"end": 17053,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "174"
										},
										{
											"begin": 16963,
											"end": 17053,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 16963,
											"end": 17053,
											"name": "tag",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 16963,
											"end": 17053,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16963,
											"end": 17053,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 16963,
											"end": 17053,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 16963,
											"end": 17053,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 16963,
											"end": 17053,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16963,
											"end": 17053,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 16963,
											"end": 17053,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 16963,
											"end": 17053,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16963,
											"end": 17053,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16963,
											"end": 17053,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 16963,
											"end": 17053,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16963,
											"end": 17053,
											"name": "EXTCODESIZE",
											"source": 1
										},
										{
											"begin": 16963,
											"end": 17053,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 16963,
											"end": 17053,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16963,
											"end": 17053,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 16963,
											"end": 17053,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "175"
										},
										{
											"begin": 16963,
											"end": 17053,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 16963,
											"end": 17053,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16963,
											"end": 17053,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16963,
											"end": 17053,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 16963,
											"end": 17053,
											"name": "tag",
											"source": 1,
											"value": "175"
										},
										{
											"begin": 16963,
											"end": 17053,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16963,
											"end": 17053,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16963,
											"end": 17053,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 16963,
											"end": 17053,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 16963,
											"end": 17053,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 16963,
											"end": 17053,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16963,
											"end": 17053,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16963,
											"end": 17053,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16963,
											"end": 17053,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16963,
											"end": 17053,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 16963,
											"end": 17053,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "176"
										},
										{
											"begin": 16963,
											"end": 17053,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 16963,
											"end": 17053,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16963,
											"end": 17053,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 16963,
											"end": 17053,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 16963,
											"end": 17053,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 16963,
											"end": 17053,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 16963,
											"end": 17053,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 16963,
											"end": 17053,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 16963,
											"end": 17053,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16963,
											"end": 17053,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16963,
											"end": 17053,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 16963,
											"end": 17053,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16963,
											"end": 17053,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16963,
											"end": 17053,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16963,
											"end": 17053,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 16963,
											"end": 17053,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16963,
											"end": 17053,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16963,
											"end": 17053,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16963,
											"end": 17053,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16963,
											"end": 17053,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16963,
											"end": 17053,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "177"
										},
										{
											"begin": 16963,
											"end": 17053,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16963,
											"end": 17053,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16963,
											"end": 17053,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "178"
										},
										{
											"begin": 16963,
											"end": 17053,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 16963,
											"end": 17053,
											"name": "tag",
											"source": 1,
											"value": "177"
										},
										{
											"begin": 16963,
											"end": 17053,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16963,
											"end": 17053,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 16963,
											"end": 17053,
											"name": "tag",
											"source": 1,
											"value": "176"
										},
										{
											"begin": 16963,
											"end": 17053,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16959,
											"end": 17494,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "179"
										},
										{
											"begin": 16959,
											"end": 17494,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 16959,
											"end": 17494,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "183"
										},
										{
											"begin": 16959,
											"end": 17494,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "184"
										},
										{
											"begin": 16959,
											"end": 17494,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 16959,
											"end": 17494,
											"name": "tag",
											"source": 1,
											"value": "183"
										},
										{
											"begin": 16959,
											"end": 17494,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16959,
											"end": 17494,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16959,
											"end": 17494,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A0"
										},
										{
											"begin": 16959,
											"end": 17494,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 16959,
											"end": 17494,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 16959,
											"end": 17494,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "182"
										},
										{
											"begin": 16959,
											"end": 17494,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 16959,
											"end": 17494,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16959,
											"end": 17494,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "185"
										},
										{
											"begin": 16959,
											"end": 17494,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "186"
										},
										{
											"begin": 16959,
											"end": 17494,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 16959,
											"end": 17494,
											"name": "tag",
											"source": 1,
											"value": "185"
										},
										{
											"begin": 16959,
											"end": 17494,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16959,
											"end": 17494,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16959,
											"end": 17494,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "187"
										},
										{
											"begin": 16959,
											"end": 17494,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 16959,
											"end": 17494,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16959,
											"end": 17494,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "181"
										},
										{
											"begin": 16959,
											"end": 17494,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16959,
											"end": 17494,
											"name": "tag",
											"source": 1,
											"value": "187"
										},
										{
											"begin": 16959,
											"end": 17494,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17370,
											"end": 17376,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 17363,
											"end": 17377,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 17363,
											"end": 17377,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 17363,
											"end": 17377,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17363,
											"end": 17377,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17363,
											"end": 17377,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17363,
											"end": 17377,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 17363,
											"end": 17377,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17363,
											"end": 17377,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "188"
										},
										{
											"begin": 17363,
											"end": 17377,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 17363,
											"end": 17377,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17363,
											"end": 17377,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 17363,
											"end": 17377,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 17363,
											"end": 17377,
											"name": "tag",
											"source": 1,
											"value": "188"
										},
										{
											"begin": 17363,
											"end": 17377,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17363,
											"end": 17377,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 17363,
											"end": 17377,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 17363,
											"end": 17377,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 17363,
											"end": 17377,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 17363,
											"end": 17377,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 17363,
											"end": 17377,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17363,
											"end": 17377,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 16959,
											"end": 17494,
											"name": "tag",
											"source": 1,
											"value": "182"
										},
										{
											"begin": 16959,
											"end": 17494,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16959,
											"end": 17494,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16959,
											"end": 17494,
											"name": "tag",
											"source": 1,
											"value": "181"
										},
										{
											"begin": 16959,
											"end": 17494,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17417,
											"end": 17479,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 17417,
											"end": 17479,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 17417,
											"end": 17479,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17417,
											"end": 17479,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17417,
											"end": 17479,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17417,
											"end": 17479,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 17417,
											"end": 17479,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17417,
											"end": 17479,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "189"
										},
										{
											"begin": 17417,
											"end": 17479,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17417,
											"end": 17479,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "190"
										},
										{
											"begin": 17417,
											"end": 17479,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 17417,
											"end": 17479,
											"name": "tag",
											"source": 1,
											"value": "189"
										},
										{
											"begin": 17417,
											"end": 17479,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17417,
											"end": 17479,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 17417,
											"end": 17479,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 17417,
											"end": 17479,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 17417,
											"end": 17479,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 17417,
											"end": 17479,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 17417,
											"end": 17479,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17417,
											"end": 17479,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 16959,
											"end": 17494,
											"name": "tag",
											"source": 1,
											"value": "179"
										},
										{
											"begin": 16959,
											"end": 17494,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17144,
											"end": 17203,
											"name": "PUSH",
											"source": 1,
											"value": "BC197C81"
										},
										{
											"begin": 17144,
											"end": 17203,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 17144,
											"end": 17203,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 17132,
											"end": 17203,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17132,
											"end": 17203,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 17132,
											"end": 17203,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 17132,
											"end": 17140,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17132,
											"end": 17203,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17132,
											"end": 17203,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 17132,
											"end": 17203,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 17132,
											"end": 17203,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 17128,
											"end": 17296,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 17128,
											"end": 17296,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 17227,
											"end": 17277,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 17227,
											"end": 17277,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 17227,
											"end": 17277,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17227,
											"end": 17277,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17227,
											"end": 17277,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17227,
											"end": 17277,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 17227,
											"end": 17277,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17227,
											"end": 17277,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "193"
										},
										{
											"begin": 17227,
											"end": 17277,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17227,
											"end": 17277,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "194"
										},
										{
											"begin": 17227,
											"end": 17277,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 17227,
											"end": 17277,
											"name": "tag",
											"source": 1,
											"value": "193"
										},
										{
											"begin": 17227,
											"end": 17277,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17227,
											"end": 17277,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 17227,
											"end": 17277,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 17227,
											"end": 17277,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 17227,
											"end": 17277,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 17227,
											"end": 17277,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 17227,
											"end": 17277,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17227,
											"end": 17277,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 17128,
											"end": 17296,
											"name": "tag",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 17128,
											"end": 17296,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17054,
											"end": 17310,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16924,
											"end": 17504,
											"name": "tag",
											"source": 1,
											"value": "172"
										},
										{
											"begin": 16924,
											"end": 17504,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16696,
											"end": 17510,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16696,
											"end": 17510,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16696,
											"end": 17510,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16696,
											"end": 17510,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16696,
											"end": 17510,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16696,
											"end": 17510,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16696,
											"end": 17510,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 17516,
											"end": 17709,
											"name": "tag",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 17516,
											"end": 17709,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17582,
											"end": 17598,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 17610,
											"end": 17632,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17649,
											"end": 17650,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 17635,
											"end": 17651,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17635,
											"end": 17651,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17635,
											"end": 17651,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 17635,
											"end": 17651,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 17635,
											"end": 17651,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "196"
										},
										{
											"begin": 17635,
											"end": 17651,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 17635,
											"end": 17651,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "197"
										},
										{
											"begin": 17635,
											"end": 17651,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 17635,
											"end": 17651,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 17635,
											"end": 17651,
											"name": "tag",
											"source": 1,
											"value": "197"
										},
										{
											"begin": 17635,
											"end": 17651,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17635,
											"end": 17651,
											"name": "tag",
											"source": 1,
											"value": "196"
										},
										{
											"begin": 17635,
											"end": 17651,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17635,
											"end": 17651,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 17635,
											"end": 17651,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 17635,
											"end": 17651,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17635,
											"end": 17651,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 17635,
											"end": 17651,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17635,
											"end": 17651,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17635,
											"end": 17651,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 17635,
											"end": 17651,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 17635,
											"end": 17651,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 17635,
											"end": 17651,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 17635,
											"end": 17651,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17635,
											"end": 17651,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17635,
											"end": 17651,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17635,
											"end": 17651,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 17635,
											"end": 17651,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17635,
											"end": 17651,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 17635,
											"end": 17651,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 17635,
											"end": 17651,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "198"
										},
										{
											"begin": 17635,
											"end": 17651,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 17635,
											"end": 17651,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17635,
											"end": 17651,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 17635,
											"end": 17651,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17635,
											"end": 17651,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 17635,
											"end": 17651,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17635,
											"end": 17651,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 17635,
											"end": 17651,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 17635,
											"end": 17651,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 17635,
											"end": 17651,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 17635,
											"end": 17651,
											"name": "CALLDATACOPY",
											"source": 1
										},
										{
											"begin": 17635,
											"end": 17651,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 17635,
											"end": 17651,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17635,
											"end": 17651,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17635,
											"end": 17651,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 17635,
											"end": 17651,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17635,
											"end": 17651,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17635,
											"end": 17651,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17635,
											"end": 17651,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17635,
											"end": 17651,
											"name": "tag",
											"source": 1,
											"value": "198"
										},
										{
											"begin": 17635,
											"end": 17651,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17635,
											"end": 17651,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17610,
											"end": 17651,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17610,
											"end": 17651,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17672,
											"end": 17679,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17661,
											"end": 17666,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17667,
											"end": 17668,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17661,
											"end": 17669,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17661,
											"end": 17669,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 17661,
											"end": 17669,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17661,
											"end": 17669,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 17661,
											"end": 17669,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "199"
										},
										{
											"begin": 17661,
											"end": 17669,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 17661,
											"end": 17669,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "200"
										},
										{
											"begin": 17661,
											"end": 17669,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 17661,
											"end": 17669,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 17661,
											"end": 17669,
											"name": "tag",
											"source": 1,
											"value": "200"
										},
										{
											"begin": 17661,
											"end": 17669,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17661,
											"end": 17669,
											"name": "tag",
											"source": 1,
											"value": "199"
										},
										{
											"begin": 17661,
											"end": 17669,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17661,
											"end": 17669,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 17661,
											"end": 17669,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 17661,
											"end": 17669,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 17661,
											"end": 17669,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17661,
											"end": 17669,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17661,
											"end": 17679,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17661,
											"end": 17679,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17661,
											"end": 17679,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17661,
											"end": 17679,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17661,
											"end": 17679,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17697,
											"end": 17702,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 17690,
											"end": 17702,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 17690,
											"end": 17702,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17690,
											"end": 17702,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17516,
											"end": 17709,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 17516,
											"end": 17709,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17516,
											"end": 17709,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17516,
											"end": 17709,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 15943,
											"end": 16690,
											"name": "tag",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 15943,
											"end": 16690,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16150,
											"end": 16165,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "202"
										},
										{
											"begin": 16150,
											"end": 16152,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 16150,
											"end": 16163,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16150,
											"end": 16163,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 16150,
											"end": 16163,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "171"
										},
										{
											"begin": 16150,
											"end": 16165,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 16150,
											"end": 16165,
											"name": "tag",
											"source": 1,
											"value": "202"
										},
										{
											"begin": 16150,
											"end": 16165,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16146,
											"end": 16684,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 16146,
											"end": 16684,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "203"
										},
										{
											"begin": 16146,
											"end": 16684,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 16213,
											"end": 16215,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 16185,
											"end": 16234,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16185,
											"end": 16234,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 16185,
											"end": 16234,
											"name": "PUSH",
											"source": 1,
											"value": "F23A6E61"
										},
										{
											"begin": 16235,
											"end": 16243,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 16245,
											"end": 16249,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 16251,
											"end": 16253,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 16255,
											"end": 16261,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 16263,
											"end": 16267,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 16185,
											"end": 16268,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 16185,
											"end": 16268,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 16185,
											"end": 16268,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 16185,
											"end": 16268,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 16185,
											"end": 16268,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 16185,
											"end": 16268,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 16185,
											"end": 16268,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 16185,
											"end": 16268,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16185,
											"end": 16268,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16185,
											"end": 16268,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 16185,
											"end": 16268,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16185,
											"end": 16268,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "204"
										},
										{
											"begin": 16185,
											"end": 16268,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 16185,
											"end": 16268,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 16185,
											"end": 16268,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 16185,
											"end": 16268,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 16185,
											"end": 16268,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16185,
											"end": 16268,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16185,
											"end": 16268,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "205"
										},
										{
											"begin": 16185,
											"end": 16268,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 16185,
											"end": 16268,
											"name": "tag",
											"source": 1,
											"value": "204"
										},
										{
											"begin": 16185,
											"end": 16268,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16185,
											"end": 16268,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 16185,
											"end": 16268,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 16185,
											"end": 16268,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 16185,
											"end": 16268,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16185,
											"end": 16268,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 16185,
											"end": 16268,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 16185,
											"end": 16268,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16185,
											"end": 16268,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16185,
											"end": 16268,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 16185,
											"end": 16268,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16185,
											"end": 16268,
											"name": "EXTCODESIZE",
											"source": 1
										},
										{
											"begin": 16185,
											"end": 16268,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 16185,
											"end": 16268,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16185,
											"end": 16268,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 16185,
											"end": 16268,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "206"
										},
										{
											"begin": 16185,
											"end": 16268,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 16185,
											"end": 16268,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16185,
											"end": 16268,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16185,
											"end": 16268,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 16185,
											"end": 16268,
											"name": "tag",
											"source": 1,
											"value": "206"
										},
										{
											"begin": 16185,
											"end": 16268,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16185,
											"end": 16268,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16185,
											"end": 16268,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 16185,
											"end": 16268,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 16185,
											"end": 16268,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 16185,
											"end": 16268,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16185,
											"end": 16268,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16185,
											"end": 16268,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16185,
											"end": 16268,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16185,
											"end": 16268,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 16185,
											"end": 16268,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "207"
										},
										{
											"begin": 16185,
											"end": 16268,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 16185,
											"end": 16268,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16185,
											"end": 16268,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 16185,
											"end": 16268,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 16185,
											"end": 16268,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 16185,
											"end": 16268,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 16185,
											"end": 16268,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 16185,
											"end": 16268,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 16185,
											"end": 16268,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16185,
											"end": 16268,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16185,
											"end": 16268,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 16185,
											"end": 16268,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16185,
											"end": 16268,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16185,
											"end": 16268,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16185,
											"end": 16268,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 16185,
											"end": 16268,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16185,
											"end": 16268,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16185,
											"end": 16268,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16185,
											"end": 16268,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16185,
											"end": 16268,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16185,
											"end": 16268,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "208"
										},
										{
											"begin": 16185,
											"end": 16268,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16185,
											"end": 16268,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16185,
											"end": 16268,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "178"
										},
										{
											"begin": 16185,
											"end": 16268,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 16185,
											"end": 16268,
											"name": "tag",
											"source": 1,
											"value": "208"
										},
										{
											"begin": 16185,
											"end": 16268,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16185,
											"end": 16268,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 16185,
											"end": 16268,
											"name": "tag",
											"source": 1,
											"value": "207"
										},
										{
											"begin": 16185,
											"end": 16268,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16181,
											"end": 16674,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "209"
										},
										{
											"begin": 16181,
											"end": 16674,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 16181,
											"end": 16674,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "213"
										},
										{
											"begin": 16181,
											"end": 16674,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "184"
										},
										{
											"begin": 16181,
											"end": 16674,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 16181,
											"end": 16674,
											"name": "tag",
											"source": 1,
											"value": "213"
										},
										{
											"begin": 16181,
											"end": 16674,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16181,
											"end": 16674,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16181,
											"end": 16674,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A0"
										},
										{
											"begin": 16181,
											"end": 16674,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 16181,
											"end": 16674,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 16181,
											"end": 16674,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "212"
										},
										{
											"begin": 16181,
											"end": 16674,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 16181,
											"end": 16674,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16181,
											"end": 16674,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "214"
										},
										{
											"begin": 16181,
											"end": 16674,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "186"
										},
										{
											"begin": 16181,
											"end": 16674,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 16181,
											"end": 16674,
											"name": "tag",
											"source": 1,
											"value": "214"
										},
										{
											"begin": 16181,
											"end": 16674,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16181,
											"end": 16674,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16181,
											"end": 16674,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "215"
										},
										{
											"begin": 16181,
											"end": 16674,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 16181,
											"end": 16674,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16181,
											"end": 16674,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "211"
										},
										{
											"begin": 16181,
											"end": 16674,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16181,
											"end": 16674,
											"name": "tag",
											"source": 1,
											"value": "215"
										},
										{
											"begin": 16181,
											"end": 16674,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16550,
											"end": 16556,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16543,
											"end": 16557,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 16543,
											"end": 16557,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 16543,
											"end": 16557,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16543,
											"end": 16557,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16543,
											"end": 16557,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16543,
											"end": 16557,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 16543,
											"end": 16557,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16543,
											"end": 16557,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "216"
										},
										{
											"begin": 16543,
											"end": 16557,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16543,
											"end": 16557,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16543,
											"end": 16557,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 16543,
											"end": 16557,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 16543,
											"end": 16557,
											"name": "tag",
											"source": 1,
											"value": "216"
										},
										{
											"begin": 16543,
											"end": 16557,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16543,
											"end": 16557,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 16543,
											"end": 16557,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 16543,
											"end": 16557,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16543,
											"end": 16557,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16543,
											"end": 16557,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 16543,
											"end": 16557,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16543,
											"end": 16557,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 16181,
											"end": 16674,
											"name": "tag",
											"source": 1,
											"value": "212"
										},
										{
											"begin": 16181,
											"end": 16674,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16181,
											"end": 16674,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16181,
											"end": 16674,
											"name": "tag",
											"source": 1,
											"value": "211"
										},
										{
											"begin": 16181,
											"end": 16674,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16597,
											"end": 16659,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 16597,
											"end": 16659,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 16597,
											"end": 16659,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16597,
											"end": 16659,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16597,
											"end": 16659,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16597,
											"end": 16659,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 16597,
											"end": 16659,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16597,
											"end": 16659,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "217"
										},
										{
											"begin": 16597,
											"end": 16659,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16597,
											"end": 16659,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "190"
										},
										{
											"begin": 16597,
											"end": 16659,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 16597,
											"end": 16659,
											"name": "tag",
											"source": 1,
											"value": "217"
										},
										{
											"begin": 16597,
											"end": 16659,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16597,
											"end": 16659,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 16597,
											"end": 16659,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 16597,
											"end": 16659,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16597,
											"end": 16659,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16597,
											"end": 16659,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 16597,
											"end": 16659,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16597,
											"end": 16659,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 16181,
											"end": 16674,
											"name": "tag",
											"source": 1,
											"value": "209"
										},
										{
											"begin": 16181,
											"end": 16674,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16329,
											"end": 16383,
											"name": "PUSH",
											"source": 1,
											"value": "F23A6E61"
										},
										{
											"begin": 16329,
											"end": 16383,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 16329,
											"end": 16383,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 16317,
											"end": 16383,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16317,
											"end": 16383,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 16317,
											"end": 16383,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 16317,
											"end": 16325,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16317,
											"end": 16383,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16317,
											"end": 16383,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 16317,
											"end": 16383,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 16317,
											"end": 16383,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 16313,
											"end": 16476,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "219"
										},
										{
											"begin": 16313,
											"end": 16476,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 16407,
											"end": 16457,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 16407,
											"end": 16457,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 16407,
											"end": 16457,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16407,
											"end": 16457,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16407,
											"end": 16457,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16407,
											"end": 16457,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 16407,
											"end": 16457,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16407,
											"end": 16457,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "220"
										},
										{
											"begin": 16407,
											"end": 16457,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16407,
											"end": 16457,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "194"
										},
										{
											"begin": 16407,
											"end": 16457,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 16407,
											"end": 16457,
											"name": "tag",
											"source": 1,
											"value": "220"
										},
										{
											"begin": 16407,
											"end": 16457,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16407,
											"end": 16457,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 16407,
											"end": 16457,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 16407,
											"end": 16457,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16407,
											"end": 16457,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16407,
											"end": 16457,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 16407,
											"end": 16457,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16407,
											"end": 16457,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 16313,
											"end": 16476,
											"name": "tag",
											"source": 1,
											"value": "219"
										},
										{
											"begin": 16313,
											"end": 16476,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16269,
											"end": 16490,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16146,
											"end": 16684,
											"name": "tag",
											"source": 1,
											"value": "203"
										},
										{
											"begin": 16146,
											"end": 16684,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15943,
											"end": 16690,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15943,
											"end": 16690,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15943,
											"end": 16690,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15943,
											"end": 16690,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15943,
											"end": 16690,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15943,
											"end": 16690,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15943,
											"end": 16690,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1186,
											"end": 1506,
											"name": "tag",
											"source": 5,
											"value": "171"
										},
										{
											"begin": 1186,
											"end": 1506,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1246,
											"end": 1250,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1498,
											"end": 1499,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1476,
											"end": 1483,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1476,
											"end": 1495,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1476,
											"end": 1495,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1476,
											"end": 1495,
											"name": "EXTCODESIZE",
											"source": 5
										},
										{
											"begin": 1476,
											"end": 1499,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 1469,
											"end": 1499,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1469,
											"end": 1499,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1186,
											"end": 1506,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1186,
											"end": 1506,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1186,
											"end": 1506,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1186,
											"end": 1506,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 24,
											"end": 746,
											"name": "tag",
											"source": 9,
											"value": "223"
										},
										{
											"begin": 24,
											"end": 746,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 120,
											"end": 125,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 145,
											"end": 226,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "225"
										},
										{
											"begin": 161,
											"end": 225,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "226"
										},
										{
											"begin": 218,
											"end": 224,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 161,
											"end": 225,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "227"
										},
										{
											"begin": 161,
											"end": 225,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 161,
											"end": 225,
											"name": "tag",
											"source": 9,
											"value": "226"
										},
										{
											"begin": 161,
											"end": 225,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 145,
											"end": 226,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "228"
										},
										{
											"begin": 145,
											"end": 226,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 145,
											"end": 226,
											"name": "tag",
											"source": 9,
											"value": "225"
										},
										{
											"begin": 145,
											"end": 226,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 136,
											"end": 226,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 136,
											"end": 226,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 246,
											"end": 251,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 275,
											"end": 281,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 268,
											"end": 273,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 261,
											"end": 282,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 309,
											"end": 313,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 302,
											"end": 307,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 298,
											"end": 314,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 291,
											"end": 314,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 291,
											"end": 314,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 335,
											"end": 341,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 385,
											"end": 388,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 377,
											"end": 381,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 369,
											"end": 375,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 365,
											"end": 382,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 360,
											"end": 363,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 356,
											"end": 383,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 353,
											"end": 389,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 350,
											"end": 493,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 350,
											"end": 493,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "229"
										},
										{
											"begin": 350,
											"end": 493,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 404,
											"end": 483,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "230"
										},
										{
											"begin": 404,
											"end": 483,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "231"
										},
										{
											"begin": 404,
											"end": 483,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 404,
											"end": 483,
											"name": "tag",
											"source": 9,
											"value": "230"
										},
										{
											"begin": 404,
											"end": 483,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 350,
											"end": 493,
											"name": "tag",
											"source": 9,
											"value": "229"
										},
										{
											"begin": 350,
											"end": 493,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 517,
											"end": 518,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 502,
											"end": 740,
											"name": "tag",
											"source": 9,
											"value": "232"
										},
										{
											"begin": 502,
											"end": 740,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 527,
											"end": 533,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 524,
											"end": 525,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 521,
											"end": 534,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 502,
											"end": 740,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 502,
											"end": 740,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "234"
										},
										{
											"begin": 502,
											"end": 740,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 595,
											"end": 598,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 624,
											"end": 661,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "235"
										},
										{
											"begin": 657,
											"end": 660,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 645,
											"end": 655,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 624,
											"end": 661,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "236"
										},
										{
											"begin": 624,
											"end": 661,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 624,
											"end": 661,
											"name": "tag",
											"source": 9,
											"value": "235"
										},
										{
											"begin": 624,
											"end": 661,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 619,
											"end": 622,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 612,
											"end": 662,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 691,
											"end": 695,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 686,
											"end": 689,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 682,
											"end": 696,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 675,
											"end": 696,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 675,
											"end": 696,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 725,
											"end": 729,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 720,
											"end": 723,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 716,
											"end": 730,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 709,
											"end": 730,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 709,
											"end": 730,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 562,
											"end": 740,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 549,
											"end": 550,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 546,
											"end": 547,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 542,
											"end": 551,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 537,
											"end": 551,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 537,
											"end": 551,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 502,
											"end": 740,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "232"
										},
										{
											"begin": 502,
											"end": 740,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 502,
											"end": 740,
											"name": "tag",
											"source": 9,
											"value": "234"
										},
										{
											"begin": 502,
											"end": 740,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 506,
											"end": 520,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 126,
											"end": 746,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 126,
											"end": 746,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 24,
											"end": 746,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 24,
											"end": 746,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 24,
											"end": 746,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 24,
											"end": 746,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 24,
											"end": 746,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 24,
											"end": 746,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 769,
											"end": 1491,
											"name": "tag",
											"source": 9,
											"value": "237"
										},
										{
											"begin": 769,
											"end": 1491,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 865,
											"end": 870,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 890,
											"end": 971,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "239"
										},
										{
											"begin": 906,
											"end": 970,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "240"
										},
										{
											"begin": 963,
											"end": 969,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 906,
											"end": 970,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "241"
										},
										{
											"begin": 906,
											"end": 970,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 906,
											"end": 970,
											"name": "tag",
											"source": 9,
											"value": "240"
										},
										{
											"begin": 906,
											"end": 970,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 890,
											"end": 971,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "228"
										},
										{
											"begin": 890,
											"end": 971,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 890,
											"end": 971,
											"name": "tag",
											"source": 9,
											"value": "239"
										},
										{
											"begin": 890,
											"end": 971,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 881,
											"end": 971,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 881,
											"end": 971,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 991,
											"end": 996,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1020,
											"end": 1026,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1013,
											"end": 1018,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1006,
											"end": 1027,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1054,
											"end": 1058,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1047,
											"end": 1052,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1043,
											"end": 1059,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1036,
											"end": 1059,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1036,
											"end": 1059,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1080,
											"end": 1086,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1130,
											"end": 1133,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1122,
											"end": 1126,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1114,
											"end": 1120,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 1110,
											"end": 1127,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 1105,
											"end": 1108,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1101,
											"end": 1128,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1098,
											"end": 1134,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 1095,
											"end": 1238,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1095,
											"end": 1238,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "242"
										},
										{
											"begin": 1095,
											"end": 1238,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1149,
											"end": 1228,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "243"
										},
										{
											"begin": 1149,
											"end": 1228,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "231"
										},
										{
											"begin": 1149,
											"end": 1228,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1149,
											"end": 1228,
											"name": "tag",
											"source": 9,
											"value": "243"
										},
										{
											"begin": 1149,
											"end": 1228,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1095,
											"end": 1238,
											"name": "tag",
											"source": 9,
											"value": "242"
										},
										{
											"begin": 1095,
											"end": 1238,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1262,
											"end": 1263,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1247,
											"end": 1485,
											"name": "tag",
											"source": 9,
											"value": "244"
										},
										{
											"begin": 1247,
											"end": 1485,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1272,
											"end": 1278,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1269,
											"end": 1270,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1266,
											"end": 1279,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 1247,
											"end": 1485,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1247,
											"end": 1485,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "246"
										},
										{
											"begin": 1247,
											"end": 1485,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1340,
											"end": 1343,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1369,
											"end": 1406,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "247"
										},
										{
											"begin": 1402,
											"end": 1405,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 1390,
											"end": 1400,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1369,
											"end": 1406,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "248"
										},
										{
											"begin": 1369,
											"end": 1406,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1369,
											"end": 1406,
											"name": "tag",
											"source": 9,
											"value": "247"
										},
										{
											"begin": 1369,
											"end": 1406,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1364,
											"end": 1367,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1357,
											"end": 1407,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1436,
											"end": 1440,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1431,
											"end": 1434,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1427,
											"end": 1441,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1420,
											"end": 1441,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 1420,
											"end": 1441,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1470,
											"end": 1474,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1465,
											"end": 1468,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1461,
											"end": 1475,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1454,
											"end": 1475,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1454,
											"end": 1475,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1307,
											"end": 1485,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1294,
											"end": 1295,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 1291,
											"end": 1292,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1287,
											"end": 1296,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1282,
											"end": 1296,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1282,
											"end": 1296,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1247,
											"end": 1485,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "244"
										},
										{
											"begin": 1247,
											"end": 1485,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1247,
											"end": 1485,
											"name": "tag",
											"source": 9,
											"value": "246"
										},
										{
											"begin": 1247,
											"end": 1485,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1251,
											"end": 1265,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 871,
											"end": 1491,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 871,
											"end": 1491,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 769,
											"end": 1491,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 769,
											"end": 1491,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 769,
											"end": 1491,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 769,
											"end": 1491,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 769,
											"end": 1491,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 769,
											"end": 1491,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 1497,
											"end": 1907,
											"name": "tag",
											"source": 9,
											"value": "249"
										},
										{
											"begin": 1497,
											"end": 1907,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1574,
											"end": 1579,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1599,
											"end": 1664,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "251"
										},
										{
											"begin": 1615,
											"end": 1663,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "252"
										},
										{
											"begin": 1656,
											"end": 1662,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1615,
											"end": 1663,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "253"
										},
										{
											"begin": 1615,
											"end": 1663,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1615,
											"end": 1663,
											"name": "tag",
											"source": 9,
											"value": "252"
										},
										{
											"begin": 1615,
											"end": 1663,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1599,
											"end": 1664,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "228"
										},
										{
											"begin": 1599,
											"end": 1664,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1599,
											"end": 1664,
											"name": "tag",
											"source": 9,
											"value": "251"
										},
										{
											"begin": 1599,
											"end": 1664,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1590,
											"end": 1664,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1590,
											"end": 1664,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1687,
											"end": 1693,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1680,
											"end": 1685,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1673,
											"end": 1694,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1725,
											"end": 1729,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1718,
											"end": 1723,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1714,
											"end": 1730,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1763,
											"end": 1766,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1754,
											"end": 1760,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1749,
											"end": 1752,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1745,
											"end": 1761,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1742,
											"end": 1767,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 1739,
											"end": 1851,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1739,
											"end": 1851,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "254"
										},
										{
											"begin": 1739,
											"end": 1851,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1770,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "255"
										},
										{
											"begin": 1770,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "256"
										},
										{
											"begin": 1770,
											"end": 1849,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1770,
											"end": 1849,
											"name": "tag",
											"source": 9,
											"value": "255"
										},
										{
											"begin": 1770,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1739,
											"end": 1851,
											"name": "tag",
											"source": 9,
											"value": "254"
										},
										{
											"begin": 1739,
											"end": 1851,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1860,
											"end": 1901,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "257"
										},
										{
											"begin": 1894,
											"end": 1900,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1889,
											"end": 1892,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1884,
											"end": 1887,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1860,
											"end": 1901,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "258"
										},
										{
											"begin": 1860,
											"end": 1901,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1860,
											"end": 1901,
											"name": "tag",
											"source": 9,
											"value": "257"
										},
										{
											"begin": 1860,
											"end": 1901,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1580,
											"end": 1907,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1497,
											"end": 1907,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 1497,
											"end": 1907,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1497,
											"end": 1907,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1497,
											"end": 1907,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1497,
											"end": 1907,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1497,
											"end": 1907,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 1913,
											"end": 2052,
											"name": "tag",
											"source": 9,
											"value": "236"
										},
										{
											"begin": 1913,
											"end": 2052,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1959,
											"end": 1964,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1997,
											"end": 2003,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1984,
											"end": 2004,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 1975,
											"end": 2004,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1975,
											"end": 2004,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2013,
											"end": 2046,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "260"
										},
										{
											"begin": 2040,
											"end": 2045,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2013,
											"end": 2046,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "261"
										},
										{
											"begin": 2013,
											"end": 2046,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 2013,
											"end": 2046,
											"name": "tag",
											"source": 9,
											"value": "260"
										},
										{
											"begin": 2013,
											"end": 2046,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1913,
											"end": 2052,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1913,
											"end": 2052,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1913,
											"end": 2052,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1913,
											"end": 2052,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1913,
											"end": 2052,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 2075,
											"end": 2445,
											"name": "tag",
											"source": 9,
											"value": "262"
										},
										{
											"begin": 2075,
											"end": 2445,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2146,
											"end": 2151,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2195,
											"end": 2198,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2188,
											"end": 2192,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 2180,
											"end": 2186,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2176,
											"end": 2193,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2172,
											"end": 2199,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 2162,
											"end": 2284,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "264"
										},
										{
											"begin": 2162,
											"end": 2284,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2203,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "265"
										},
										{
											"begin": 2203,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "266"
										},
										{
											"begin": 2203,
											"end": 2282,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 2203,
											"end": 2282,
											"name": "tag",
											"source": 9,
											"value": "265"
										},
										{
											"begin": 2203,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2162,
											"end": 2284,
											"name": "tag",
											"source": 9,
											"value": "264"
										},
										{
											"begin": 2162,
											"end": 2284,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2320,
											"end": 2326,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2307,
											"end": 2327,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 2345,
											"end": 2439,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "267"
										},
										{
											"begin": 2435,
											"end": 2438,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2427,
											"end": 2433,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2420,
											"end": 2424,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2412,
											"end": 2418,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 2408,
											"end": 2425,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2345,
											"end": 2439,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "223"
										},
										{
											"begin": 2345,
											"end": 2439,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 2345,
											"end": 2439,
											"name": "tag",
											"source": 9,
											"value": "267"
										},
										{
											"begin": 2345,
											"end": 2439,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2336,
											"end": 2439,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2336,
											"end": 2439,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2152,
											"end": 2445,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2075,
											"end": 2445,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2075,
											"end": 2445,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2075,
											"end": 2445,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2075,
											"end": 2445,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2075,
											"end": 2445,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 2468,
											"end": 2838,
											"name": "tag",
											"source": 9,
											"value": "268"
										},
										{
											"begin": 2468,
											"end": 2838,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2539,
											"end": 2544,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2588,
											"end": 2591,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2581,
											"end": 2585,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 2573,
											"end": 2579,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2569,
											"end": 2586,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2565,
											"end": 2592,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 2555,
											"end": 2677,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "270"
										},
										{
											"begin": 2555,
											"end": 2677,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2596,
											"end": 2675,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "271"
										},
										{
											"begin": 2596,
											"end": 2675,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "266"
										},
										{
											"begin": 2596,
											"end": 2675,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 2596,
											"end": 2675,
											"name": "tag",
											"source": 9,
											"value": "271"
										},
										{
											"begin": 2596,
											"end": 2675,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2555,
											"end": 2677,
											"name": "tag",
											"source": 9,
											"value": "270"
										},
										{
											"begin": 2555,
											"end": 2677,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2713,
											"end": 2719,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2700,
											"end": 2720,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 2738,
											"end": 2832,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "272"
										},
										{
											"begin": 2828,
											"end": 2831,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2820,
											"end": 2826,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2813,
											"end": 2817,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2805,
											"end": 2811,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 2801,
											"end": 2818,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2738,
											"end": 2832,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "237"
										},
										{
											"begin": 2738,
											"end": 2832,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 2738,
											"end": 2832,
											"name": "tag",
											"source": 9,
											"value": "272"
										},
										{
											"begin": 2738,
											"end": 2832,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2729,
											"end": 2832,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2729,
											"end": 2832,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2545,
											"end": 2838,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2468,
											"end": 2838,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2468,
											"end": 2838,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2468,
											"end": 2838,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2468,
											"end": 2838,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2468,
											"end": 2838,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 2844,
											"end": 2977,
											"name": "tag",
											"source": 9,
											"value": "273"
										},
										{
											"begin": 2844,
											"end": 2977,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2887,
											"end": 2892,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2925,
											"end": 2931,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2912,
											"end": 2932,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 2903,
											"end": 2932,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2903,
											"end": 2932,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2941,
											"end": 2971,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "275"
										},
										{
											"begin": 2965,
											"end": 2970,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2941,
											"end": 2971,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "276"
										},
										{
											"begin": 2941,
											"end": 2971,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 2941,
											"end": 2971,
											"name": "tag",
											"source": 9,
											"value": "275"
										},
										{
											"begin": 2941,
											"end": 2971,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2844,
											"end": 2977,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2844,
											"end": 2977,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2844,
											"end": 2977,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2844,
											"end": 2977,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2844,
											"end": 2977,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 2983,
											"end": 3120,
											"name": "tag",
											"source": 9,
											"value": "277"
										},
										{
											"begin": 2983,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3028,
											"end": 3033,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3066,
											"end": 3072,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3053,
											"end": 3073,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 3044,
											"end": 3073,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3044,
											"end": 3073,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3082,
											"end": 3114,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "279"
										},
										{
											"begin": 3108,
											"end": 3113,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3082,
											"end": 3114,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "280"
										},
										{
											"begin": 3082,
											"end": 3114,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 3082,
											"end": 3114,
											"name": "tag",
											"source": 9,
											"value": "279"
										},
										{
											"begin": 3082,
											"end": 3114,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2983,
											"end": 3120,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2983,
											"end": 3120,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2983,
											"end": 3120,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2983,
											"end": 3120,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2983,
											"end": 3120,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 3126,
											"end": 3267,
											"name": "tag",
											"source": 9,
											"value": "281"
										},
										{
											"begin": 3126,
											"end": 3267,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3182,
											"end": 3187,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3213,
											"end": 3219,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3207,
											"end": 3220,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3198,
											"end": 3220,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3198,
											"end": 3220,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3229,
											"end": 3261,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "283"
										},
										{
											"begin": 3255,
											"end": 3260,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3229,
											"end": 3261,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "280"
										},
										{
											"begin": 3229,
											"end": 3261,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 3229,
											"end": 3261,
											"name": "tag",
											"source": 9,
											"value": "283"
										},
										{
											"begin": 3229,
											"end": 3261,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3126,
											"end": 3267,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3126,
											"end": 3267,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3126,
											"end": 3267,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3126,
											"end": 3267,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3126,
											"end": 3267,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 3286,
											"end": 3624,
											"name": "tag",
											"source": 9,
											"value": "284"
										},
										{
											"begin": 3286,
											"end": 3624,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3341,
											"end": 3346,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3390,
											"end": 3393,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3383,
											"end": 3387,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 3375,
											"end": 3381,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3371,
											"end": 3388,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3367,
											"end": 3394,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 3357,
											"end": 3479,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "286"
										},
										{
											"begin": 3357,
											"end": 3479,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3398,
											"end": 3477,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "287"
										},
										{
											"begin": 3398,
											"end": 3477,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "266"
										},
										{
											"begin": 3398,
											"end": 3477,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 3398,
											"end": 3477,
											"name": "tag",
											"source": 9,
											"value": "287"
										},
										{
											"begin": 3398,
											"end": 3477,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3357,
											"end": 3479,
											"name": "tag",
											"source": 9,
											"value": "286"
										},
										{
											"begin": 3357,
											"end": 3479,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3515,
											"end": 3521,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3502,
											"end": 3522,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 3540,
											"end": 3618,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "288"
										},
										{
											"begin": 3614,
											"end": 3617,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3606,
											"end": 3612,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3599,
											"end": 3603,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3591,
											"end": 3597,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 3587,
											"end": 3604,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3540,
											"end": 3618,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "249"
										},
										{
											"begin": 3540,
											"end": 3618,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 3540,
											"end": 3618,
											"name": "tag",
											"source": 9,
											"value": "288"
										},
										{
											"begin": 3540,
											"end": 3618,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3531,
											"end": 3618,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3531,
											"end": 3618,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3347,
											"end": 3624,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3286,
											"end": 3624,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3286,
											"end": 3624,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3286,
											"end": 3624,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3286,
											"end": 3624,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3286,
											"end": 3624,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 3630,
											"end": 3769,
											"name": "tag",
											"source": 9,
											"value": "248"
										},
										{
											"begin": 3630,
											"end": 3769,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3676,
											"end": 3681,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3714,
											"end": 3720,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3701,
											"end": 3721,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 3692,
											"end": 3721,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3692,
											"end": 3721,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3730,
											"end": 3763,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "290"
										},
										{
											"begin": 3757,
											"end": 3762,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3730,
											"end": 3763,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "291"
										},
										{
											"begin": 3730,
											"end": 3763,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 3730,
											"end": 3763,
											"name": "tag",
											"source": 9,
											"value": "290"
										},
										{
											"begin": 3730,
											"end": 3763,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3630,
											"end": 3769,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3630,
											"end": 3769,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3630,
											"end": 3769,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3630,
											"end": 3769,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3630,
											"end": 3769,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 3775,
											"end": 4249,
											"name": "tag",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 3775,
											"end": 4249,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3843,
											"end": 3849,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3851,
											"end": 3857,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3900,
											"end": 3902,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3888,
											"end": 3897,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3879,
											"end": 3886,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 3875,
											"end": 3898,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3871,
											"end": 3903,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 3868,
											"end": 3987,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3868,
											"end": 3987,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "293"
										},
										{
											"begin": 3868,
											"end": 3987,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3906,
											"end": 3985,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "294"
										},
										{
											"begin": 3906,
											"end": 3985,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "295"
										},
										{
											"begin": 3906,
											"end": 3985,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 3906,
											"end": 3985,
											"name": "tag",
											"source": 9,
											"value": "294"
										},
										{
											"begin": 3906,
											"end": 3985,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3868,
											"end": 3987,
											"name": "tag",
											"source": 9,
											"value": "293"
										},
										{
											"begin": 3868,
											"end": 3987,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4026,
											"end": 4027,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4051,
											"end": 4104,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "296"
										},
										{
											"begin": 4096,
											"end": 4103,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 4087,
											"end": 4093,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4076,
											"end": 4085,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 4072,
											"end": 4094,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4051,
											"end": 4104,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "236"
										},
										{
											"begin": 4051,
											"end": 4104,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 4051,
											"end": 4104,
											"name": "tag",
											"source": 9,
											"value": "296"
										},
										{
											"begin": 4051,
											"end": 4104,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4041,
											"end": 4104,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4041,
											"end": 4104,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3997,
											"end": 4114,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4153,
											"end": 4155,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4179,
											"end": 4232,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "297"
										},
										{
											"begin": 4224,
											"end": 4231,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 4215,
											"end": 4221,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4204,
											"end": 4213,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 4200,
											"end": 4222,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4179,
											"end": 4232,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "236"
										},
										{
											"begin": 4179,
											"end": 4232,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 4179,
											"end": 4232,
											"name": "tag",
											"source": 9,
											"value": "297"
										},
										{
											"begin": 4179,
											"end": 4232,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4169,
											"end": 4232,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4169,
											"end": 4232,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4124,
											"end": 4242,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3775,
											"end": 4249,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3775,
											"end": 4249,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3775,
											"end": 4249,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3775,
											"end": 4249,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3775,
											"end": 4249,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3775,
											"end": 4249,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 4255,
											"end": 5764,
											"name": "tag",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 4255,
											"end": 5764,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4409,
											"end": 4415,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4417,
											"end": 4423,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4425,
											"end": 4431,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4433,
											"end": 4439,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4441,
											"end": 4447,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4490,
											"end": 4493,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 4478,
											"end": 4487,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 4469,
											"end": 4476,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 4465,
											"end": 4488,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4461,
											"end": 4494,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 4458,
											"end": 4578,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4458,
											"end": 4578,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "299"
										},
										{
											"begin": 4458,
											"end": 4578,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4497,
											"end": 4576,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "300"
										},
										{
											"begin": 4497,
											"end": 4576,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "295"
										},
										{
											"begin": 4497,
											"end": 4576,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 4497,
											"end": 4576,
											"name": "tag",
											"source": 9,
											"value": "300"
										},
										{
											"begin": 4497,
											"end": 4576,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4458,
											"end": 4578,
											"name": "tag",
											"source": 9,
											"value": "299"
										},
										{
											"begin": 4458,
											"end": 4578,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4617,
											"end": 4618,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4642,
											"end": 4695,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "301"
										},
										{
											"begin": 4687,
											"end": 4694,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 4678,
											"end": 4684,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4667,
											"end": 4676,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 4663,
											"end": 4685,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4642,
											"end": 4695,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "236"
										},
										{
											"begin": 4642,
											"end": 4695,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 4642,
											"end": 4695,
											"name": "tag",
											"source": 9,
											"value": "301"
										},
										{
											"begin": 4642,
											"end": 4695,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4632,
											"end": 4695,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 4632,
											"end": 4695,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4588,
											"end": 4705,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4744,
											"end": 4746,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4770,
											"end": 4823,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "302"
										},
										{
											"begin": 4815,
											"end": 4822,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 4806,
											"end": 4812,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4795,
											"end": 4804,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 4791,
											"end": 4813,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4770,
											"end": 4823,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "236"
										},
										{
											"begin": 4770,
											"end": 4823,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 4770,
											"end": 4823,
											"name": "tag",
											"source": 9,
											"value": "302"
										},
										{
											"begin": 4770,
											"end": 4823,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4760,
											"end": 4823,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 4760,
											"end": 4823,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4715,
											"end": 4833,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4900,
											"end": 4902,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4889,
											"end": 4898,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 4885,
											"end": 4903,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4872,
											"end": 4904,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 4931,
											"end": 4949,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4923,
											"end": 4929,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4920,
											"end": 4950,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 4917,
											"end": 5034,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4917,
											"end": 5034,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "303"
										},
										{
											"begin": 4917,
											"end": 5034,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4953,
											"end": 5032,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "304"
										},
										{
											"begin": 4953,
											"end": 5032,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "305"
										},
										{
											"begin": 4953,
											"end": 5032,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 4953,
											"end": 5032,
											"name": "tag",
											"source": 9,
											"value": "304"
										},
										{
											"begin": 4953,
											"end": 5032,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4917,
											"end": 5034,
											"name": "tag",
											"source": 9,
											"value": "303"
										},
										{
											"begin": 4917,
											"end": 5034,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5058,
											"end": 5136,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "306"
										},
										{
											"begin": 5128,
											"end": 5135,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 5119,
											"end": 5125,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5108,
											"end": 5117,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 5104,
											"end": 5126,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5058,
											"end": 5136,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "268"
										},
										{
											"begin": 5058,
											"end": 5136,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 5058,
											"end": 5136,
											"name": "tag",
											"source": 9,
											"value": "306"
										},
										{
											"begin": 5058,
											"end": 5136,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5048,
											"end": 5136,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 5048,
											"end": 5136,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4843,
											"end": 5146,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5213,
											"end": 5215,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 5202,
											"end": 5211,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 5198,
											"end": 5216,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5185,
											"end": 5217,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 5244,
											"end": 5262,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5236,
											"end": 5242,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5233,
											"end": 5263,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 5230,
											"end": 5347,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5230,
											"end": 5347,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "307"
										},
										{
											"begin": 5230,
											"end": 5347,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5266,
											"end": 5345,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "308"
										},
										{
											"begin": 5266,
											"end": 5345,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "305"
										},
										{
											"begin": 5266,
											"end": 5345,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 5266,
											"end": 5345,
											"name": "tag",
											"source": 9,
											"value": "308"
										},
										{
											"begin": 5266,
											"end": 5345,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5230,
											"end": 5347,
											"name": "tag",
											"source": 9,
											"value": "307"
										},
										{
											"begin": 5230,
											"end": 5347,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5371,
											"end": 5449,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "309"
										},
										{
											"begin": 5441,
											"end": 5448,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 5432,
											"end": 5438,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5421,
											"end": 5430,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 5417,
											"end": 5439,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5371,
											"end": 5449,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "268"
										},
										{
											"begin": 5371,
											"end": 5449,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 5371,
											"end": 5449,
											"name": "tag",
											"source": 9,
											"value": "309"
										},
										{
											"begin": 5371,
											"end": 5449,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5361,
											"end": 5449,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5361,
											"end": 5449,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5156,
											"end": 5459,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5526,
											"end": 5529,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 5515,
											"end": 5524,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 5511,
											"end": 5530,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5498,
											"end": 5531,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 5558,
											"end": 5576,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5550,
											"end": 5556,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5547,
											"end": 5577,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 5544,
											"end": 5661,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5544,
											"end": 5661,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "310"
										},
										{
											"begin": 5544,
											"end": 5661,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5580,
											"end": 5659,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "311"
										},
										{
											"begin": 5580,
											"end": 5659,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "305"
										},
										{
											"begin": 5580,
											"end": 5659,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 5580,
											"end": 5659,
											"name": "tag",
											"source": 9,
											"value": "311"
										},
										{
											"begin": 5580,
											"end": 5659,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5544,
											"end": 5661,
											"name": "tag",
											"source": 9,
											"value": "310"
										},
										{
											"begin": 5544,
											"end": 5661,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5685,
											"end": 5747,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "312"
										},
										{
											"begin": 5739,
											"end": 5746,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 5730,
											"end": 5736,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5719,
											"end": 5728,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 5715,
											"end": 5737,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5685,
											"end": 5747,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "284"
										},
										{
											"begin": 5685,
											"end": 5747,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 5685,
											"end": 5747,
											"name": "tag",
											"source": 9,
											"value": "312"
										},
										{
											"begin": 5685,
											"end": 5747,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5675,
											"end": 5747,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5675,
											"end": 5747,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5469,
											"end": 5757,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4255,
											"end": 5764,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4255,
											"end": 5764,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 4255,
											"end": 5764,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4255,
											"end": 5764,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4255,
											"end": 5764,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 4255,
											"end": 5764,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4255,
											"end": 5764,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 4255,
											"end": 5764,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4255,
											"end": 5764,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 5770,
											"end": 6859,
											"name": "tag",
											"source": 9,
											"value": "51"
										},
										{
											"begin": 5770,
											"end": 6859,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5874,
											"end": 5880,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5882,
											"end": 5888,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5890,
											"end": 5896,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5898,
											"end": 5904,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5906,
											"end": 5912,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5955,
											"end": 5958,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 5943,
											"end": 5952,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 5934,
											"end": 5941,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 5930,
											"end": 5953,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5926,
											"end": 5959,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 5923,
											"end": 6043,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5923,
											"end": 6043,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "314"
										},
										{
											"begin": 5923,
											"end": 6043,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5962,
											"end": 6041,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "315"
										},
										{
											"begin": 5962,
											"end": 6041,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "295"
										},
										{
											"begin": 5962,
											"end": 6041,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 5962,
											"end": 6041,
											"name": "tag",
											"source": 9,
											"value": "315"
										},
										{
											"begin": 5962,
											"end": 6041,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5923,
											"end": 6043,
											"name": "tag",
											"source": 9,
											"value": "314"
										},
										{
											"begin": 5923,
											"end": 6043,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6082,
											"end": 6083,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6107,
											"end": 6160,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "316"
										},
										{
											"begin": 6152,
											"end": 6159,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 6143,
											"end": 6149,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6132,
											"end": 6141,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 6128,
											"end": 6150,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6107,
											"end": 6160,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "236"
										},
										{
											"begin": 6107,
											"end": 6160,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 6107,
											"end": 6160,
											"name": "tag",
											"source": 9,
											"value": "316"
										},
										{
											"begin": 6107,
											"end": 6160,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6097,
											"end": 6160,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 6097,
											"end": 6160,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6053,
											"end": 6170,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6209,
											"end": 6211,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6235,
											"end": 6288,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "317"
										},
										{
											"begin": 6280,
											"end": 6287,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 6271,
											"end": 6277,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6260,
											"end": 6269,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 6256,
											"end": 6278,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6235,
											"end": 6288,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "236"
										},
										{
											"begin": 6235,
											"end": 6288,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 6235,
											"end": 6288,
											"name": "tag",
											"source": 9,
											"value": "317"
										},
										{
											"begin": 6235,
											"end": 6288,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6225,
											"end": 6288,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 6225,
											"end": 6288,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6180,
											"end": 6298,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6337,
											"end": 6339,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6363,
											"end": 6416,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "318"
										},
										{
											"begin": 6408,
											"end": 6415,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 6399,
											"end": 6405,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6388,
											"end": 6397,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 6384,
											"end": 6406,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6363,
											"end": 6416,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "248"
										},
										{
											"begin": 6363,
											"end": 6416,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 6363,
											"end": 6416,
											"name": "tag",
											"source": 9,
											"value": "318"
										},
										{
											"begin": 6363,
											"end": 6416,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6353,
											"end": 6416,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 6353,
											"end": 6416,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6308,
											"end": 6426,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6465,
											"end": 6467,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 6491,
											"end": 6544,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "319"
										},
										{
											"begin": 6536,
											"end": 6543,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 6527,
											"end": 6533,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6516,
											"end": 6525,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 6512,
											"end": 6534,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6491,
											"end": 6544,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "248"
										},
										{
											"begin": 6491,
											"end": 6544,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 6491,
											"end": 6544,
											"name": "tag",
											"source": 9,
											"value": "319"
										},
										{
											"begin": 6491,
											"end": 6544,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6481,
											"end": 6544,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6481,
											"end": 6544,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6436,
											"end": 6554,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6621,
											"end": 6624,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 6610,
											"end": 6619,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 6606,
											"end": 6625,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6593,
											"end": 6626,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 6653,
											"end": 6671,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6645,
											"end": 6651,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6642,
											"end": 6672,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 6639,
											"end": 6756,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6639,
											"end": 6756,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "320"
										},
										{
											"begin": 6639,
											"end": 6756,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6675,
											"end": 6754,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "321"
										},
										{
											"begin": 6675,
											"end": 6754,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "305"
										},
										{
											"begin": 6675,
											"end": 6754,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 6675,
											"end": 6754,
											"name": "tag",
											"source": 9,
											"value": "321"
										},
										{
											"begin": 6675,
											"end": 6754,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6639,
											"end": 6756,
											"name": "tag",
											"source": 9,
											"value": "320"
										},
										{
											"begin": 6639,
											"end": 6756,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6780,
											"end": 6842,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "322"
										},
										{
											"begin": 6834,
											"end": 6841,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 6825,
											"end": 6831,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6814,
											"end": 6823,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 6810,
											"end": 6832,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6780,
											"end": 6842,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "284"
										},
										{
											"begin": 6780,
											"end": 6842,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 6780,
											"end": 6842,
											"name": "tag",
											"source": 9,
											"value": "322"
										},
										{
											"begin": 6780,
											"end": 6842,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6770,
											"end": 6842,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6770,
											"end": 6842,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6564,
											"end": 6852,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5770,
											"end": 6859,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5770,
											"end": 6859,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 5770,
											"end": 6859,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5770,
											"end": 6859,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5770,
											"end": 6859,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 5770,
											"end": 6859,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5770,
											"end": 6859,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 5770,
											"end": 6859,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5770,
											"end": 6859,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 6865,
											"end": 7333,
											"name": "tag",
											"source": 9,
											"value": "42"
										},
										{
											"begin": 6865,
											"end": 7333,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6930,
											"end": 6936,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6938,
											"end": 6944,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6987,
											"end": 6989,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6975,
											"end": 6984,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6966,
											"end": 6973,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 6962,
											"end": 6985,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 6958,
											"end": 6990,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 6955,
											"end": 7074,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6955,
											"end": 7074,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "324"
										},
										{
											"begin": 6955,
											"end": 7074,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6993,
											"end": 7072,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "325"
										},
										{
											"begin": 6993,
											"end": 7072,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "295"
										},
										{
											"begin": 6993,
											"end": 7072,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 6993,
											"end": 7072,
											"name": "tag",
											"source": 9,
											"value": "325"
										},
										{
											"begin": 6993,
											"end": 7072,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6955,
											"end": 7074,
											"name": "tag",
											"source": 9,
											"value": "324"
										},
										{
											"begin": 6955,
											"end": 7074,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7113,
											"end": 7114,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7138,
											"end": 7191,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "326"
										},
										{
											"begin": 7183,
											"end": 7190,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 7174,
											"end": 7180,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7163,
											"end": 7172,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 7159,
											"end": 7181,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7138,
											"end": 7191,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "236"
										},
										{
											"begin": 7138,
											"end": 7191,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 7138,
											"end": 7191,
											"name": "tag",
											"source": 9,
											"value": "326"
										},
										{
											"begin": 7138,
											"end": 7191,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7128,
											"end": 7191,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 7128,
											"end": 7191,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7084,
											"end": 7201,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7240,
											"end": 7242,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7266,
											"end": 7316,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "327"
										},
										{
											"begin": 7308,
											"end": 7315,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 7299,
											"end": 7305,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7288,
											"end": 7297,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7266,
											"end": 7316,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "273"
										},
										{
											"begin": 7266,
											"end": 7316,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 7266,
											"end": 7316,
											"name": "tag",
											"source": 9,
											"value": "327"
										},
										{
											"begin": 7266,
											"end": 7316,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7256,
											"end": 7316,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7256,
											"end": 7316,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7211,
											"end": 7326,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6865,
											"end": 7333,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6865,
											"end": 7333,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6865,
											"end": 7333,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6865,
											"end": 7333,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6865,
											"end": 7333,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6865,
											"end": 7333,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 7339,
											"end": 7813,
											"name": "tag",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 7339,
											"end": 7813,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7407,
											"end": 7413,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7415,
											"end": 7421,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7464,
											"end": 7466,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7452,
											"end": 7461,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7443,
											"end": 7450,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 7439,
											"end": 7462,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 7435,
											"end": 7467,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 7432,
											"end": 7551,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 7432,
											"end": 7551,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "329"
										},
										{
											"begin": 7432,
											"end": 7551,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7470,
											"end": 7549,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "330"
										},
										{
											"begin": 7470,
											"end": 7549,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "295"
										},
										{
											"begin": 7470,
											"end": 7549,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 7470,
											"end": 7549,
											"name": "tag",
											"source": 9,
											"value": "330"
										},
										{
											"begin": 7470,
											"end": 7549,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7432,
											"end": 7551,
											"name": "tag",
											"source": 9,
											"value": "329"
										},
										{
											"begin": 7432,
											"end": 7551,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7590,
											"end": 7591,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7615,
											"end": 7668,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "331"
										},
										{
											"begin": 7660,
											"end": 7667,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 7651,
											"end": 7657,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7640,
											"end": 7649,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 7636,
											"end": 7658,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7615,
											"end": 7668,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "236"
										},
										{
											"begin": 7615,
											"end": 7668,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 7615,
											"end": 7668,
											"name": "tag",
											"source": 9,
											"value": "331"
										},
										{
											"begin": 7615,
											"end": 7668,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7605,
											"end": 7668,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 7605,
											"end": 7668,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7561,
											"end": 7678,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7717,
											"end": 7719,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7743,
											"end": 7796,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "332"
										},
										{
											"begin": 7788,
											"end": 7795,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 7779,
											"end": 7785,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7768,
											"end": 7777,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 7764,
											"end": 7786,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7743,
											"end": 7796,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "248"
										},
										{
											"begin": 7743,
											"end": 7796,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 7743,
											"end": 7796,
											"name": "tag",
											"source": 9,
											"value": "332"
										},
										{
											"begin": 7743,
											"end": 7796,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7733,
											"end": 7796,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7733,
											"end": 7796,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7688,
											"end": 7806,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7339,
											"end": 7813,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 7339,
											"end": 7813,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7339,
											"end": 7813,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 7339,
											"end": 7813,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7339,
											"end": 7813,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7339,
											"end": 7813,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 7819,
											"end": 8713,
											"name": "tag",
											"source": 9,
											"value": "36"
										},
										{
											"begin": 7819,
											"end": 8713,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7937,
											"end": 7943,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7945,
											"end": 7951,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7994,
											"end": 7996,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7982,
											"end": 7991,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7973,
											"end": 7980,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 7969,
											"end": 7992,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 7965,
											"end": 7997,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 7962,
											"end": 8081,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 7962,
											"end": 8081,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "334"
										},
										{
											"begin": 7962,
											"end": 8081,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8000,
											"end": 8079,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "335"
										},
										{
											"begin": 8000,
											"end": 8079,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "295"
										},
										{
											"begin": 8000,
											"end": 8079,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 8000,
											"end": 8079,
											"name": "tag",
											"source": 9,
											"value": "335"
										},
										{
											"begin": 8000,
											"end": 8079,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7962,
											"end": 8081,
											"name": "tag",
											"source": 9,
											"value": "334"
										},
										{
											"begin": 7962,
											"end": 8081,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8148,
											"end": 8149,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8137,
											"end": 8146,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8133,
											"end": 8150,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8120,
											"end": 8151,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 8178,
											"end": 8196,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8170,
											"end": 8176,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8167,
											"end": 8197,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 8164,
											"end": 8281,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 8164,
											"end": 8281,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "336"
										},
										{
											"begin": 8164,
											"end": 8281,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8200,
											"end": 8279,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "337"
										},
										{
											"begin": 8200,
											"end": 8279,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "305"
										},
										{
											"begin": 8200,
											"end": 8279,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 8200,
											"end": 8279,
											"name": "tag",
											"source": 9,
											"value": "337"
										},
										{
											"begin": 8200,
											"end": 8279,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8164,
											"end": 8281,
											"name": "tag",
											"source": 9,
											"value": "336"
										},
										{
											"begin": 8164,
											"end": 8281,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8305,
											"end": 8383,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "338"
										},
										{
											"begin": 8375,
											"end": 8382,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 8366,
											"end": 8372,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8355,
											"end": 8364,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 8351,
											"end": 8373,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8305,
											"end": 8383,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "262"
										},
										{
											"begin": 8305,
											"end": 8383,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 8305,
											"end": 8383,
											"name": "tag",
											"source": 9,
											"value": "338"
										},
										{
											"begin": 8305,
											"end": 8383,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8295,
											"end": 8383,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 8295,
											"end": 8383,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8091,
											"end": 8393,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8460,
											"end": 8462,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8449,
											"end": 8458,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8445,
											"end": 8463,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8432,
											"end": 8464,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 8491,
											"end": 8509,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8483,
											"end": 8489,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8480,
											"end": 8510,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 8477,
											"end": 8594,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 8477,
											"end": 8594,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "339"
										},
										{
											"begin": 8477,
											"end": 8594,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8513,
											"end": 8592,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "340"
										},
										{
											"begin": 8513,
											"end": 8592,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "305"
										},
										{
											"begin": 8513,
											"end": 8592,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 8513,
											"end": 8592,
											"name": "tag",
											"source": 9,
											"value": "340"
										},
										{
											"begin": 8513,
											"end": 8592,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8477,
											"end": 8594,
											"name": "tag",
											"source": 9,
											"value": "339"
										},
										{
											"begin": 8477,
											"end": 8594,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8618,
											"end": 8696,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "341"
										},
										{
											"begin": 8688,
											"end": 8695,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 8679,
											"end": 8685,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8668,
											"end": 8677,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 8664,
											"end": 8686,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8618,
											"end": 8696,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "268"
										},
										{
											"begin": 8618,
											"end": 8696,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 8618,
											"end": 8696,
											"name": "tag",
											"source": 9,
											"value": "341"
										},
										{
											"begin": 8618,
											"end": 8696,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8608,
											"end": 8696,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8608,
											"end": 8696,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8403,
											"end": 8706,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7819,
											"end": 8713,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 7819,
											"end": 8713,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7819,
											"end": 8713,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 7819,
											"end": 8713,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7819,
											"end": 8713,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7819,
											"end": 8713,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 8719,
											"end": 9046,
											"name": "tag",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8719,
											"end": 9046,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8777,
											"end": 8783,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8826,
											"end": 8828,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8814,
											"end": 8823,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8805,
											"end": 8812,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 8801,
											"end": 8824,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 8797,
											"end": 8829,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 8794,
											"end": 8913,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 8794,
											"end": 8913,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "343"
										},
										{
											"begin": 8794,
											"end": 8913,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8832,
											"end": 8911,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "344"
										},
										{
											"begin": 8832,
											"end": 8911,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "295"
										},
										{
											"begin": 8832,
											"end": 8911,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 8832,
											"end": 8911,
											"name": "tag",
											"source": 9,
											"value": "344"
										},
										{
											"begin": 8832,
											"end": 8911,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8794,
											"end": 8913,
											"name": "tag",
											"source": 9,
											"value": "343"
										},
										{
											"begin": 8794,
											"end": 8913,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8952,
											"end": 8953,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8977,
											"end": 9029,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "345"
										},
										{
											"begin": 9021,
											"end": 9028,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 9012,
											"end": 9018,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9001,
											"end": 9010,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 8997,
											"end": 9019,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8977,
											"end": 9029,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "277"
										},
										{
											"begin": 8977,
											"end": 9029,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 8977,
											"end": 9029,
											"name": "tag",
											"source": 9,
											"value": "345"
										},
										{
											"begin": 8977,
											"end": 9029,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8967,
											"end": 9029,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8967,
											"end": 9029,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8923,
											"end": 9039,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8719,
											"end": 9046,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 8719,
											"end": 9046,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8719,
											"end": 9046,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8719,
											"end": 9046,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8719,
											"end": 9046,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 9052,
											"end": 9401,
											"name": "tag",
											"source": 9,
											"value": "178"
										},
										{
											"begin": 9052,
											"end": 9401,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9121,
											"end": 9127,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9170,
											"end": 9172,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9158,
											"end": 9167,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9149,
											"end": 9156,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 9145,
											"end": 9168,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 9141,
											"end": 9173,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 9138,
											"end": 9257,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 9138,
											"end": 9257,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "347"
										},
										{
											"begin": 9138,
											"end": 9257,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 9176,
											"end": 9255,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "348"
										},
										{
											"begin": 9176,
											"end": 9255,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "295"
										},
										{
											"begin": 9176,
											"end": 9255,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 9176,
											"end": 9255,
											"name": "tag",
											"source": 9,
											"value": "348"
										},
										{
											"begin": 9176,
											"end": 9255,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9138,
											"end": 9257,
											"name": "tag",
											"source": 9,
											"value": "347"
										},
										{
											"begin": 9138,
											"end": 9257,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9296,
											"end": 9297,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9321,
											"end": 9384,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "349"
										},
										{
											"begin": 9376,
											"end": 9383,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 9367,
											"end": 9373,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9356,
											"end": 9365,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 9352,
											"end": 9374,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9321,
											"end": 9384,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "281"
										},
										{
											"begin": 9321,
											"end": 9384,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 9321,
											"end": 9384,
											"name": "tag",
											"source": 9,
											"value": "349"
										},
										{
											"begin": 9321,
											"end": 9384,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9311,
											"end": 9384,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9311,
											"end": 9384,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9267,
											"end": 9394,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9052,
											"end": 9401,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 9052,
											"end": 9401,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9052,
											"end": 9401,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9052,
											"end": 9401,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9052,
											"end": 9401,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 9407,
											"end": 9736,
											"name": "tag",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 9407,
											"end": 9736,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9466,
											"end": 9472,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9515,
											"end": 9517,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9503,
											"end": 9512,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9494,
											"end": 9501,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 9490,
											"end": 9513,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 9486,
											"end": 9518,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 9483,
											"end": 9602,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 9483,
											"end": 9602,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "351"
										},
										{
											"begin": 9483,
											"end": 9602,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 9521,
											"end": 9600,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "352"
										},
										{
											"begin": 9521,
											"end": 9600,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "295"
										},
										{
											"begin": 9521,
											"end": 9600,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 9521,
											"end": 9600,
											"name": "tag",
											"source": 9,
											"value": "352"
										},
										{
											"begin": 9521,
											"end": 9600,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9483,
											"end": 9602,
											"name": "tag",
											"source": 9,
											"value": "351"
										},
										{
											"begin": 9483,
											"end": 9602,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9641,
											"end": 9642,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9666,
											"end": 9719,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "353"
										},
										{
											"begin": 9711,
											"end": 9718,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 9702,
											"end": 9708,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9691,
											"end": 9700,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 9687,
											"end": 9709,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9666,
											"end": 9719,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "248"
										},
										{
											"begin": 9666,
											"end": 9719,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 9666,
											"end": 9719,
											"name": "tag",
											"source": 9,
											"value": "353"
										},
										{
											"begin": 9666,
											"end": 9719,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9656,
											"end": 9719,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9656,
											"end": 9719,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9612,
											"end": 9729,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9407,
											"end": 9736,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 9407,
											"end": 9736,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9407,
											"end": 9736,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9407,
											"end": 9736,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9407,
											"end": 9736,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 9742,
											"end": 9921,
											"name": "tag",
											"source": 9,
											"value": "354"
										},
										{
											"begin": 9742,
											"end": 9921,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9811,
											"end": 9821,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9832,
											"end": 9878,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "356"
										},
										{
											"begin": 9874,
											"end": 9877,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9866,
											"end": 9872,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9832,
											"end": 9878,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "357"
										},
										{
											"begin": 9832,
											"end": 9878,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 9832,
											"end": 9878,
											"name": "tag",
											"source": 9,
											"value": "356"
										},
										{
											"begin": 9832,
											"end": 9878,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9910,
											"end": 9914,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9905,
											"end": 9908,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9901,
											"end": 9915,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9887,
											"end": 9915,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9887,
											"end": 9915,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9742,
											"end": 9921,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 9742,
											"end": 9921,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9742,
											"end": 9921,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9742,
											"end": 9921,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9742,
											"end": 9921,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 9927,
											"end": 10045,
											"name": "tag",
											"source": 9,
											"value": "358"
										},
										{
											"begin": 9927,
											"end": 10045,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10014,
											"end": 10038,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "360"
										},
										{
											"begin": 10032,
											"end": 10037,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10014,
											"end": 10038,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "361"
										},
										{
											"begin": 10014,
											"end": 10038,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 10014,
											"end": 10038,
											"name": "tag",
											"source": 9,
											"value": "360"
										},
										{
											"begin": 10014,
											"end": 10038,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10009,
											"end": 10012,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10002,
											"end": 10039,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9927,
											"end": 10045,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9927,
											"end": 10045,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9927,
											"end": 10045,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 10081,
											"end": 10813,
											"name": "tag",
											"source": 9,
											"value": "362"
										},
										{
											"begin": 10081,
											"end": 10813,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10200,
											"end": 10203,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10229,
											"end": 10283,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "364"
										},
										{
											"begin": 10277,
											"end": 10282,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10229,
											"end": 10283,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "365"
										},
										{
											"begin": 10229,
											"end": 10283,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 10229,
											"end": 10283,
											"name": "tag",
											"source": 9,
											"value": "364"
										},
										{
											"begin": 10229,
											"end": 10283,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10299,
											"end": 10385,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "366"
										},
										{
											"begin": 10378,
											"end": 10384,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10373,
											"end": 10376,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 10299,
											"end": 10385,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "367"
										},
										{
											"begin": 10299,
											"end": 10385,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 10299,
											"end": 10385,
											"name": "tag",
											"source": 9,
											"value": "366"
										},
										{
											"begin": 10299,
											"end": 10385,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10292,
											"end": 10385,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 10292,
											"end": 10385,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10409,
											"end": 10465,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "368"
										},
										{
											"begin": 10459,
											"end": 10464,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10409,
											"end": 10465,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "369"
										},
										{
											"begin": 10409,
											"end": 10465,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 10409,
											"end": 10465,
											"name": "tag",
											"source": 9,
											"value": "368"
										},
										{
											"begin": 10409,
											"end": 10465,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10488,
											"end": 10495,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 10519,
											"end": 10520,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10504,
											"end": 10788,
											"name": "tag",
											"source": 9,
											"value": "370"
										},
										{
											"begin": 10504,
											"end": 10788,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10529,
											"end": 10535,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10526,
											"end": 10527,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10523,
											"end": 10536,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 10504,
											"end": 10788,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 10504,
											"end": 10788,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "372"
										},
										{
											"begin": 10504,
											"end": 10788,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 10605,
											"end": 10611,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10599,
											"end": 10612,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 10632,
											"end": 10695,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "373"
										},
										{
											"begin": 10691,
											"end": 10694,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 10676,
											"end": 10689,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10632,
											"end": 10695,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "354"
										},
										{
											"begin": 10632,
											"end": 10695,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 10632,
											"end": 10695,
											"name": "tag",
											"source": 9,
											"value": "373"
										},
										{
											"begin": 10632,
											"end": 10695,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10625,
											"end": 10695,
											"name": "SWAP8",
											"source": 9
										},
										{
											"begin": 10625,
											"end": 10695,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10718,
											"end": 10778,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "374"
										},
										{
											"begin": 10771,
											"end": 10777,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10718,
											"end": 10778,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "375"
										},
										{
											"begin": 10718,
											"end": 10778,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 10718,
											"end": 10778,
											"name": "tag",
											"source": 9,
											"value": "374"
										},
										{
											"begin": 10718,
											"end": 10778,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10708,
											"end": 10778,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 10708,
											"end": 10778,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10564,
											"end": 10788,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10551,
											"end": 10552,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 10548,
											"end": 10549,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10544,
											"end": 10553,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10539,
											"end": 10553,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10539,
											"end": 10553,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10504,
											"end": 10788,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "370"
										},
										{
											"begin": 10504,
											"end": 10788,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10504,
											"end": 10788,
											"name": "tag",
											"source": 9,
											"value": "372"
										},
										{
											"begin": 10504,
											"end": 10788,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10508,
											"end": 10522,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10804,
											"end": 10807,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 10797,
											"end": 10807,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 10797,
											"end": 10807,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10205,
											"end": 10813,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10205,
											"end": 10813,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10205,
											"end": 10813,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10081,
											"end": 10813,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 10081,
											"end": 10813,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10081,
											"end": 10813,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10081,
											"end": 10813,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10081,
											"end": 10813,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 10819,
											"end": 10928,
											"name": "tag",
											"source": 9,
											"value": "376"
										},
										{
											"begin": 10819,
											"end": 10928,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10900,
											"end": 10921,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "378"
										},
										{
											"begin": 10915,
											"end": 10920,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10900,
											"end": 10921,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "379"
										},
										{
											"begin": 10900,
											"end": 10921,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 10900,
											"end": 10921,
											"name": "tag",
											"source": 9,
											"value": "378"
										},
										{
											"begin": 10900,
											"end": 10921,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10895,
											"end": 10898,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10888,
											"end": 10922,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10819,
											"end": 10928,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10819,
											"end": 10928,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10819,
											"end": 10928,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 10934,
											"end": 11294,
											"name": "tag",
											"source": 9,
											"value": "380"
										},
										{
											"begin": 10934,
											"end": 11294,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11020,
											"end": 11023,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11048,
											"end": 11086,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "382"
										},
										{
											"begin": 11080,
											"end": 11085,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11048,
											"end": 11086,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "383"
										},
										{
											"begin": 11048,
											"end": 11086,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 11048,
											"end": 11086,
											"name": "tag",
											"source": 9,
											"value": "382"
										},
										{
											"begin": 11048,
											"end": 11086,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11102,
											"end": 11172,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "384"
										},
										{
											"begin": 11165,
											"end": 11171,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11160,
											"end": 11163,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 11102,
											"end": 11172,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "385"
										},
										{
											"begin": 11102,
											"end": 11172,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 11102,
											"end": 11172,
											"name": "tag",
											"source": 9,
											"value": "384"
										},
										{
											"begin": 11102,
											"end": 11172,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11095,
											"end": 11172,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 11095,
											"end": 11172,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11181,
											"end": 11233,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "386"
										},
										{
											"begin": 11226,
											"end": 11232,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11221,
											"end": 11224,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 11214,
											"end": 11218,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 11207,
											"end": 11212,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 11203,
											"end": 11219,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11181,
											"end": 11233,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "387"
										},
										{
											"begin": 11181,
											"end": 11233,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 11181,
											"end": 11233,
											"name": "tag",
											"source": 9,
											"value": "386"
										},
										{
											"begin": 11181,
											"end": 11233,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11258,
											"end": 11287,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "388"
										},
										{
											"begin": 11280,
											"end": 11286,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11258,
											"end": 11287,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "389"
										},
										{
											"begin": 11258,
											"end": 11287,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 11258,
											"end": 11287,
											"name": "tag",
											"source": 9,
											"value": "388"
										},
										{
											"begin": 11258,
											"end": 11287,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11253,
											"end": 11256,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 11249,
											"end": 11288,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11242,
											"end": 11288,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11242,
											"end": 11288,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11024,
											"end": 11294,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10934,
											"end": 11294,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 10934,
											"end": 11294,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10934,
											"end": 11294,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10934,
											"end": 11294,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10934,
											"end": 11294,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 11300,
											"end": 11664,
											"name": "tag",
											"source": 9,
											"value": "390"
										},
										{
											"begin": 11300,
											"end": 11664,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11388,
											"end": 11391,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11416,
											"end": 11455,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "392"
										},
										{
											"begin": 11449,
											"end": 11454,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11416,
											"end": 11455,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "393"
										},
										{
											"begin": 11416,
											"end": 11455,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 11416,
											"end": 11455,
											"name": "tag",
											"source": 9,
											"value": "392"
										},
										{
											"begin": 11416,
											"end": 11455,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11471,
											"end": 11542,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "394"
										},
										{
											"begin": 11535,
											"end": 11541,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11530,
											"end": 11533,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 11471,
											"end": 11542,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "395"
										},
										{
											"begin": 11471,
											"end": 11542,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 11471,
											"end": 11542,
											"name": "tag",
											"source": 9,
											"value": "394"
										},
										{
											"begin": 11471,
											"end": 11542,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11464,
											"end": 11542,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 11464,
											"end": 11542,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11551,
											"end": 11603,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "396"
										},
										{
											"begin": 11596,
											"end": 11602,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11591,
											"end": 11594,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 11584,
											"end": 11588,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 11577,
											"end": 11582,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 11573,
											"end": 11589,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11551,
											"end": 11603,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "387"
										},
										{
											"begin": 11551,
											"end": 11603,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 11551,
											"end": 11603,
											"name": "tag",
											"source": 9,
											"value": "396"
										},
										{
											"begin": 11551,
											"end": 11603,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11628,
											"end": 11657,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "397"
										},
										{
											"begin": 11650,
											"end": 11656,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11628,
											"end": 11657,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "389"
										},
										{
											"begin": 11628,
											"end": 11657,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 11628,
											"end": 11657,
											"name": "tag",
											"source": 9,
											"value": "397"
										},
										{
											"begin": 11628,
											"end": 11657,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11623,
											"end": 11626,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 11619,
											"end": 11658,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11612,
											"end": 11658,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11612,
											"end": 11658,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11392,
											"end": 11664,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11300,
											"end": 11664,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 11300,
											"end": 11664,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11300,
											"end": 11664,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11300,
											"end": 11664,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11300,
											"end": 11664,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 11670,
											"end": 12036,
											"name": "tag",
											"source": 9,
											"value": "398"
										},
										{
											"begin": 11670,
											"end": 12036,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11812,
											"end": 11815,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11833,
											"end": 11900,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "400"
										},
										{
											"begin": 11897,
											"end": 11899,
											"name": "PUSH",
											"source": 9,
											"value": "28"
										},
										{
											"begin": 11892,
											"end": 11895,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 11833,
											"end": 11900,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "395"
										},
										{
											"begin": 11833,
											"end": 11900,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 11833,
											"end": 11900,
											"name": "tag",
											"source": 9,
											"value": "400"
										},
										{
											"begin": 11833,
											"end": 11900,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11826,
											"end": 11900,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11826,
											"end": 11900,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11909,
											"end": 12002,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "401"
										},
										{
											"begin": 11998,
											"end": 12001,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11909,
											"end": 12002,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "402"
										},
										{
											"begin": 11909,
											"end": 12002,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 11909,
											"end": 12002,
											"name": "tag",
											"source": 9,
											"value": "401"
										},
										{
											"begin": 11909,
											"end": 12002,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12027,
											"end": 12029,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 12022,
											"end": 12025,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12018,
											"end": 12030,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12011,
											"end": 12030,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12011,
											"end": 12030,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11670,
											"end": 12036,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11670,
											"end": 12036,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11670,
											"end": 12036,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11670,
											"end": 12036,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 12042,
											"end": 12408,
											"name": "tag",
											"source": 9,
											"value": "403"
										},
										{
											"begin": 12042,
											"end": 12408,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12184,
											"end": 12187,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12205,
											"end": 12272,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "405"
										},
										{
											"begin": 12269,
											"end": 12271,
											"name": "PUSH",
											"source": 9,
											"value": "2A"
										},
										{
											"begin": 12264,
											"end": 12267,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12205,
											"end": 12272,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "395"
										},
										{
											"begin": 12205,
											"end": 12272,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 12205,
											"end": 12272,
											"name": "tag",
											"source": 9,
											"value": "405"
										},
										{
											"begin": 12205,
											"end": 12272,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12198,
											"end": 12272,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12198,
											"end": 12272,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12281,
											"end": 12374,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "406"
										},
										{
											"begin": 12370,
											"end": 12373,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12281,
											"end": 12374,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "407"
										},
										{
											"begin": 12281,
											"end": 12374,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 12281,
											"end": 12374,
											"name": "tag",
											"source": 9,
											"value": "406"
										},
										{
											"begin": 12281,
											"end": 12374,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12399,
											"end": 12401,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 12394,
											"end": 12397,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12390,
											"end": 12402,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12383,
											"end": 12402,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12383,
											"end": 12402,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12042,
											"end": 12408,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12042,
											"end": 12408,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12042,
											"end": 12408,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12042,
											"end": 12408,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 12414,
											"end": 12780,
											"name": "tag",
											"source": 9,
											"value": "408"
										},
										{
											"begin": 12414,
											"end": 12780,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12556,
											"end": 12559,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12577,
											"end": 12644,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "410"
										},
										{
											"begin": 12641,
											"end": 12643,
											"name": "PUSH",
											"source": 9,
											"value": "2E"
										},
										{
											"begin": 12636,
											"end": 12639,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12577,
											"end": 12644,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "395"
										},
										{
											"begin": 12577,
											"end": 12644,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 12577,
											"end": 12644,
											"name": "tag",
											"source": 9,
											"value": "410"
										},
										{
											"begin": 12577,
											"end": 12644,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12570,
											"end": 12644,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12570,
											"end": 12644,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12653,
											"end": 12746,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "411"
										},
										{
											"begin": 12742,
											"end": 12745,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12653,
											"end": 12746,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "412"
										},
										{
											"begin": 12653,
											"end": 12746,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 12653,
											"end": 12746,
											"name": "tag",
											"source": 9,
											"value": "411"
										},
										{
											"begin": 12653,
											"end": 12746,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12771,
											"end": 12773,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 12766,
											"end": 12769,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12762,
											"end": 12774,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12755,
											"end": 12774,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12755,
											"end": 12774,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12414,
											"end": 12780,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12414,
											"end": 12780,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12414,
											"end": 12780,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12414,
											"end": 12780,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 12786,
											"end": 13152,
											"name": "tag",
											"source": 9,
											"value": "413"
										},
										{
											"begin": 12786,
											"end": 13152,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12928,
											"end": 12931,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12949,
											"end": 13016,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "415"
										},
										{
											"begin": 13013,
											"end": 13015,
											"name": "PUSH",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 13008,
											"end": 13011,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12949,
											"end": 13016,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "395"
										},
										{
											"begin": 12949,
											"end": 13016,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 12949,
											"end": 13016,
											"name": "tag",
											"source": 9,
											"value": "415"
										},
										{
											"begin": 12949,
											"end": 13016,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12942,
											"end": 13016,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12942,
											"end": 13016,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13025,
											"end": 13118,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "416"
										},
										{
											"begin": 13114,
											"end": 13117,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13025,
											"end": 13118,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "417"
										},
										{
											"begin": 13025,
											"end": 13118,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 13025,
											"end": 13118,
											"name": "tag",
											"source": 9,
											"value": "416"
										},
										{
											"begin": 13025,
											"end": 13118,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13143,
											"end": 13145,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 13138,
											"end": 13141,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13134,
											"end": 13146,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13127,
											"end": 13146,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13127,
											"end": 13146,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12786,
											"end": 13152,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12786,
											"end": 13152,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12786,
											"end": 13152,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12786,
											"end": 13152,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 13158,
											"end": 13524,
											"name": "tag",
											"source": 9,
											"value": "418"
										},
										{
											"begin": 13158,
											"end": 13524,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13300,
											"end": 13303,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13321,
											"end": 13388,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "420"
										},
										{
											"begin": 13385,
											"end": 13387,
											"name": "PUSH",
											"source": 9,
											"value": "2A"
										},
										{
											"begin": 13380,
											"end": 13383,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 13321,
											"end": 13388,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "395"
										},
										{
											"begin": 13321,
											"end": 13388,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 13321,
											"end": 13388,
											"name": "tag",
											"source": 9,
											"value": "420"
										},
										{
											"begin": 13321,
											"end": 13388,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13314,
											"end": 13388,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 13314,
											"end": 13388,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13397,
											"end": 13490,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "421"
										},
										{
											"begin": 13486,
											"end": 13489,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13397,
											"end": 13490,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "422"
										},
										{
											"begin": 13397,
											"end": 13490,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 13397,
											"end": 13490,
											"name": "tag",
											"source": 9,
											"value": "421"
										},
										{
											"begin": 13397,
											"end": 13490,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13515,
											"end": 13517,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 13510,
											"end": 13513,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13506,
											"end": 13518,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13499,
											"end": 13518,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13499,
											"end": 13518,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13158,
											"end": 13524,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 13158,
											"end": 13524,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13158,
											"end": 13524,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13158,
											"end": 13524,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 13530,
											"end": 13896,
											"name": "tag",
											"source": 9,
											"value": "423"
										},
										{
											"begin": 13530,
											"end": 13896,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13672,
											"end": 13675,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13693,
											"end": 13760,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "425"
										},
										{
											"begin": 13757,
											"end": 13759,
											"name": "PUSH",
											"source": 9,
											"value": "29"
										},
										{
											"begin": 13752,
											"end": 13755,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 13693,
											"end": 13760,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "395"
										},
										{
											"begin": 13693,
											"end": 13760,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 13693,
											"end": 13760,
											"name": "tag",
											"source": 9,
											"value": "425"
										},
										{
											"begin": 13693,
											"end": 13760,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13686,
											"end": 13760,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 13686,
											"end": 13760,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13769,
											"end": 13862,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "426"
										},
										{
											"begin": 13858,
											"end": 13861,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13769,
											"end": 13862,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "427"
										},
										{
											"begin": 13769,
											"end": 13862,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 13769,
											"end": 13862,
											"name": "tag",
											"source": 9,
											"value": "426"
										},
										{
											"begin": 13769,
											"end": 13862,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13887,
											"end": 13889,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 13882,
											"end": 13885,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13878,
											"end": 13890,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13871,
											"end": 13890,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13871,
											"end": 13890,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13530,
											"end": 13896,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 13530,
											"end": 13896,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13530,
											"end": 13896,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13530,
											"end": 13896,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 13902,
											"end": 14268,
											"name": "tag",
											"source": 9,
											"value": "428"
										},
										{
											"begin": 13902,
											"end": 14268,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14044,
											"end": 14047,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14065,
											"end": 14132,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "430"
										},
										{
											"begin": 14129,
											"end": 14131,
											"name": "PUSH",
											"source": 9,
											"value": "29"
										},
										{
											"begin": 14124,
											"end": 14127,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 14065,
											"end": 14132,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "395"
										},
										{
											"begin": 14065,
											"end": 14132,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 14065,
											"end": 14132,
											"name": "tag",
											"source": 9,
											"value": "430"
										},
										{
											"begin": 14065,
											"end": 14132,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14058,
											"end": 14132,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14058,
											"end": 14132,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14141,
											"end": 14234,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "431"
										},
										{
											"begin": 14230,
											"end": 14233,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14141,
											"end": 14234,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "432"
										},
										{
											"begin": 14141,
											"end": 14234,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 14141,
											"end": 14234,
											"name": "tag",
											"source": 9,
											"value": "431"
										},
										{
											"begin": 14141,
											"end": 14234,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14259,
											"end": 14261,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 14254,
											"end": 14257,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14250,
											"end": 14262,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14243,
											"end": 14262,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14243,
											"end": 14262,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13902,
											"end": 14268,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 13902,
											"end": 14268,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13902,
											"end": 14268,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13902,
											"end": 14268,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 14274,
											"end": 14640,
											"name": "tag",
											"source": 9,
											"value": "433"
										},
										{
											"begin": 14274,
											"end": 14640,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14416,
											"end": 14419,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14437,
											"end": 14504,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "435"
										},
										{
											"begin": 14501,
											"end": 14503,
											"name": "PUSH",
											"source": 9,
											"value": "28"
										},
										{
											"begin": 14496,
											"end": 14499,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 14437,
											"end": 14504,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "395"
										},
										{
											"begin": 14437,
											"end": 14504,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 14437,
											"end": 14504,
											"name": "tag",
											"source": 9,
											"value": "435"
										},
										{
											"begin": 14437,
											"end": 14504,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14430,
											"end": 14504,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14430,
											"end": 14504,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14513,
											"end": 14606,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "436"
										},
										{
											"begin": 14602,
											"end": 14605,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14513,
											"end": 14606,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "437"
										},
										{
											"begin": 14513,
											"end": 14606,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 14513,
											"end": 14606,
											"name": "tag",
											"source": 9,
											"value": "436"
										},
										{
											"begin": 14513,
											"end": 14606,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14631,
											"end": 14633,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 14626,
											"end": 14629,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14622,
											"end": 14634,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14615,
											"end": 14634,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14615,
											"end": 14634,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14274,
											"end": 14640,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14274,
											"end": 14640,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14274,
											"end": 14640,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14274,
											"end": 14640,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 14646,
											"end": 15012,
											"name": "tag",
											"source": 9,
											"value": "438"
										},
										{
											"begin": 14646,
											"end": 15012,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14788,
											"end": 14791,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14809,
											"end": 14876,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "440"
										},
										{
											"begin": 14873,
											"end": 14875,
											"name": "PUSH",
											"source": 9,
											"value": "34"
										},
										{
											"begin": 14868,
											"end": 14871,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 14809,
											"end": 14876,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "395"
										},
										{
											"begin": 14809,
											"end": 14876,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 14809,
											"end": 14876,
											"name": "tag",
											"source": 9,
											"value": "440"
										},
										{
											"begin": 14809,
											"end": 14876,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14802,
											"end": 14876,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14802,
											"end": 14876,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14885,
											"end": 14978,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "441"
										},
										{
											"begin": 14974,
											"end": 14977,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14885,
											"end": 14978,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "442"
										},
										{
											"begin": 14885,
											"end": 14978,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 14885,
											"end": 14978,
											"name": "tag",
											"source": 9,
											"value": "441"
										},
										{
											"begin": 14885,
											"end": 14978,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15003,
											"end": 15005,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 14998,
											"end": 15001,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14994,
											"end": 15006,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14987,
											"end": 15006,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14987,
											"end": 15006,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14646,
											"end": 15012,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14646,
											"end": 15012,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14646,
											"end": 15012,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14646,
											"end": 15012,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 15018,
											"end": 15126,
											"name": "tag",
											"source": 9,
											"value": "357"
										},
										{
											"begin": 15018,
											"end": 15126,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15095,
											"end": 15119,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "444"
										},
										{
											"begin": 15113,
											"end": 15118,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 15095,
											"end": 15119,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "445"
										},
										{
											"begin": 15095,
											"end": 15119,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 15095,
											"end": 15119,
											"name": "tag",
											"source": 9,
											"value": "444"
										},
										{
											"begin": 15095,
											"end": 15119,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15090,
											"end": 15093,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15083,
											"end": 15120,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 15018,
											"end": 15126,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15018,
											"end": 15126,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15018,
											"end": 15126,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 15132,
											"end": 15250,
											"name": "tag",
											"source": 9,
											"value": "446"
										},
										{
											"begin": 15132,
											"end": 15250,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15219,
											"end": 15243,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "448"
										},
										{
											"begin": 15237,
											"end": 15242,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 15219,
											"end": 15243,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "445"
										},
										{
											"begin": 15219,
											"end": 15243,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 15219,
											"end": 15243,
											"name": "tag",
											"source": 9,
											"value": "448"
										},
										{
											"begin": 15219,
											"end": 15243,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15214,
											"end": 15217,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15207,
											"end": 15244,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 15132,
											"end": 15250,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15132,
											"end": 15250,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15132,
											"end": 15250,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 15256,
											"end": 16309,
											"name": "tag",
											"source": 9,
											"value": "174"
										},
										{
											"begin": 15256,
											"end": 16309,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15579,
											"end": 15583,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15617,
											"end": 15620,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 15606,
											"end": 15615,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15602,
											"end": 15621,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15594,
											"end": 15621,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15594,
											"end": 15621,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15631,
											"end": 15702,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "450"
										},
										{
											"begin": 15699,
											"end": 15700,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15688,
											"end": 15697,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 15684,
											"end": 15701,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15675,
											"end": 15681,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 15631,
											"end": 15702,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "358"
										},
										{
											"begin": 15631,
											"end": 15702,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 15631,
											"end": 15702,
											"name": "tag",
											"source": 9,
											"value": "450"
										},
										{
											"begin": 15631,
											"end": 15702,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15712,
											"end": 15784,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "451"
										},
										{
											"begin": 15780,
											"end": 15782,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 15769,
											"end": 15778,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 15765,
											"end": 15783,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15756,
											"end": 15762,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 15712,
											"end": 15784,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "358"
										},
										{
											"begin": 15712,
											"end": 15784,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 15712,
											"end": 15784,
											"name": "tag",
											"source": 9,
											"value": "451"
										},
										{
											"begin": 15712,
											"end": 15784,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15831,
											"end": 15840,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 15825,
											"end": 15829,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 15821,
											"end": 15841,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 15816,
											"end": 15818,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 15805,
											"end": 15814,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 15801,
											"end": 15819,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15794,
											"end": 15842,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 15859,
											"end": 15967,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "452"
										},
										{
											"begin": 15962,
											"end": 15966,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 15953,
											"end": 15959,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 15859,
											"end": 15967,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "362"
										},
										{
											"begin": 15859,
											"end": 15967,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 15859,
											"end": 15967,
											"name": "tag",
											"source": 9,
											"value": "452"
										},
										{
											"begin": 15859,
											"end": 15967,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15851,
											"end": 15967,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15851,
											"end": 15967,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16014,
											"end": 16023,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16008,
											"end": 16012,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16004,
											"end": 16024,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 15999,
											"end": 16001,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 15988,
											"end": 15997,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 15984,
											"end": 16002,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15977,
											"end": 16025,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 16042,
											"end": 16150,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "453"
										},
										{
											"begin": 16145,
											"end": 16149,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16136,
											"end": 16142,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 16042,
											"end": 16150,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "362"
										},
										{
											"begin": 16042,
											"end": 16150,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 16042,
											"end": 16150,
											"name": "tag",
											"source": 9,
											"value": "453"
										},
										{
											"begin": 16042,
											"end": 16150,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16034,
											"end": 16150,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16034,
											"end": 16150,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16198,
											"end": 16207,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16192,
											"end": 16196,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16188,
											"end": 16208,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 16182,
											"end": 16185,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 16171,
											"end": 16180,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 16167,
											"end": 16186,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16160,
											"end": 16209,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 16226,
											"end": 16302,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "454"
										},
										{
											"begin": 16297,
											"end": 16301,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16288,
											"end": 16294,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 16226,
											"end": 16302,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "380"
										},
										{
											"begin": 16226,
											"end": 16302,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 16226,
											"end": 16302,
											"name": "tag",
											"source": 9,
											"value": "454"
										},
										{
											"begin": 16226,
											"end": 16302,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16218,
											"end": 16302,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16218,
											"end": 16302,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15256,
											"end": 16309,
											"name": "SWAP7",
											"source": 9
										},
										{
											"begin": 15256,
											"end": 16309,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 15256,
											"end": 16309,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15256,
											"end": 16309,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15256,
											"end": 16309,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15256,
											"end": 16309,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15256,
											"end": 16309,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15256,
											"end": 16309,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15256,
											"end": 16309,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 16315,
											"end": 17066,
											"name": "tag",
											"source": 9,
											"value": "205"
										},
										{
											"begin": 16315,
											"end": 17066,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16538,
											"end": 16542,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16576,
											"end": 16579,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 16565,
											"end": 16574,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 16561,
											"end": 16580,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16553,
											"end": 16580,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16553,
											"end": 16580,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16590,
											"end": 16661,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "456"
										},
										{
											"begin": 16658,
											"end": 16659,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16647,
											"end": 16656,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 16643,
											"end": 16660,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16634,
											"end": 16640,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 16590,
											"end": 16661,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "358"
										},
										{
											"begin": 16590,
											"end": 16661,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 16590,
											"end": 16661,
											"name": "tag",
											"source": 9,
											"value": "456"
										},
										{
											"begin": 16590,
											"end": 16661,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16671,
											"end": 16743,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "457"
										},
										{
											"begin": 16739,
											"end": 16741,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 16728,
											"end": 16737,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 16724,
											"end": 16742,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16715,
											"end": 16721,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 16671,
											"end": 16743,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "358"
										},
										{
											"begin": 16671,
											"end": 16743,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 16671,
											"end": 16743,
											"name": "tag",
											"source": 9,
											"value": "457"
										},
										{
											"begin": 16671,
											"end": 16743,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16753,
											"end": 16825,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "458"
										},
										{
											"begin": 16821,
											"end": 16823,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 16810,
											"end": 16819,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 16806,
											"end": 16824,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16797,
											"end": 16803,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 16753,
											"end": 16825,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "446"
										},
										{
											"begin": 16753,
											"end": 16825,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 16753,
											"end": 16825,
											"name": "tag",
											"source": 9,
											"value": "458"
										},
										{
											"begin": 16753,
											"end": 16825,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16835,
											"end": 16907,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "459"
										},
										{
											"begin": 16903,
											"end": 16905,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 16892,
											"end": 16901,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 16888,
											"end": 16906,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16879,
											"end": 16885,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 16835,
											"end": 16907,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "446"
										},
										{
											"begin": 16835,
											"end": 16907,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 16835,
											"end": 16907,
											"name": "tag",
											"source": 9,
											"value": "459"
										},
										{
											"begin": 16835,
											"end": 16907,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16955,
											"end": 16964,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16949,
											"end": 16953,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16945,
											"end": 16965,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 16939,
											"end": 16942,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 16928,
											"end": 16937,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 16924,
											"end": 16943,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16917,
											"end": 16966,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 16983,
											"end": 17059,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "460"
										},
										{
											"begin": 17054,
											"end": 17058,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 17045,
											"end": 17051,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 16983,
											"end": 17059,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "380"
										},
										{
											"begin": 16983,
											"end": 17059,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 16983,
											"end": 17059,
											"name": "tag",
											"source": 9,
											"value": "460"
										},
										{
											"begin": 16983,
											"end": 17059,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16975,
											"end": 17059,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16975,
											"end": 17059,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16315,
											"end": 17066,
											"name": "SWAP7",
											"source": 9
										},
										{
											"begin": 16315,
											"end": 17066,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 16315,
											"end": 17066,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16315,
											"end": 17066,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16315,
											"end": 17066,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16315,
											"end": 17066,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16315,
											"end": 17066,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16315,
											"end": 17066,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16315,
											"end": 17066,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 17072,
											"end": 17445,
											"name": "tag",
											"source": 9,
											"value": "39"
										},
										{
											"begin": 17072,
											"end": 17445,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17215,
											"end": 17219,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 17253,
											"end": 17255,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 17242,
											"end": 17251,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 17238,
											"end": 17256,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 17230,
											"end": 17256,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17230,
											"end": 17256,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17302,
											"end": 17311,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 17296,
											"end": 17300,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 17292,
											"end": 17312,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 17288,
											"end": 17289,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 17277,
											"end": 17286,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 17273,
											"end": 17290,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 17266,
											"end": 17313,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 17330,
											"end": 17438,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "462"
										},
										{
											"begin": 17433,
											"end": 17437,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 17424,
											"end": 17430,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 17330,
											"end": 17438,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "362"
										},
										{
											"begin": 17330,
											"end": 17438,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 17330,
											"end": 17438,
											"name": "tag",
											"source": 9,
											"value": "462"
										},
										{
											"begin": 17330,
											"end": 17438,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17322,
											"end": 17438,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17322,
											"end": 17438,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17072,
											"end": 17445,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 17072,
											"end": 17445,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 17072,
											"end": 17445,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17072,
											"end": 17445,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17072,
											"end": 17445,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 17451,
											"end": 18085,
											"name": "tag",
											"source": 9,
											"value": "141"
										},
										{
											"begin": 17451,
											"end": 18085,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17672,
											"end": 17676,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 17710,
											"end": 17712,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 17699,
											"end": 17708,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 17695,
											"end": 17713,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 17687,
											"end": 17713,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17687,
											"end": 17713,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17759,
											"end": 17768,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 17753,
											"end": 17757,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 17749,
											"end": 17769,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 17745,
											"end": 17746,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 17734,
											"end": 17743,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 17730,
											"end": 17747,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 17723,
											"end": 17770,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 17787,
											"end": 17895,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "464"
										},
										{
											"begin": 17890,
											"end": 17894,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 17881,
											"end": 17887,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 17787,
											"end": 17895,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "362"
										},
										{
											"begin": 17787,
											"end": 17895,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 17787,
											"end": 17895,
											"name": "tag",
											"source": 9,
											"value": "464"
										},
										{
											"begin": 17787,
											"end": 17895,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17779,
											"end": 17895,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17779,
											"end": 17895,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17942,
											"end": 17951,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 17936,
											"end": 17940,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 17932,
											"end": 17952,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 17927,
											"end": 17929,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 17916,
											"end": 17925,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 17912,
											"end": 17930,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 17905,
											"end": 17953,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 17970,
											"end": 18078,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "465"
										},
										{
											"begin": 18073,
											"end": 18077,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 18064,
											"end": 18070,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 17970,
											"end": 18078,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "362"
										},
										{
											"begin": 17970,
											"end": 18078,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 17970,
											"end": 18078,
											"name": "tag",
											"source": 9,
											"value": "465"
										},
										{
											"begin": 17970,
											"end": 18078,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17962,
											"end": 18078,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17962,
											"end": 18078,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17451,
											"end": 18085,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 17451,
											"end": 18085,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 17451,
											"end": 18085,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17451,
											"end": 18085,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17451,
											"end": 18085,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17451,
											"end": 18085,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 18091,
											"end": 18301,
											"name": "tag",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 18091,
											"end": 18301,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18178,
											"end": 18182,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 18216,
											"end": 18218,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 18205,
											"end": 18214,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 18201,
											"end": 18219,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 18193,
											"end": 18219,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 18193,
											"end": 18219,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18229,
											"end": 18294,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "467"
										},
										{
											"begin": 18291,
											"end": 18292,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 18280,
											"end": 18289,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 18276,
											"end": 18293,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 18267,
											"end": 18273,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 18229,
											"end": 18294,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "376"
										},
										{
											"begin": 18229,
											"end": 18294,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 18229,
											"end": 18294,
											"name": "tag",
											"source": 9,
											"value": "467"
										},
										{
											"begin": 18229,
											"end": 18294,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18091,
											"end": 18301,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 18091,
											"end": 18301,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 18091,
											"end": 18301,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18091,
											"end": 18301,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18091,
											"end": 18301,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 18307,
											"end": 18620,
											"name": "tag",
											"source": 9,
											"value": "29"
										},
										{
											"begin": 18307,
											"end": 18620,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18420,
											"end": 18424,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 18458,
											"end": 18460,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 18447,
											"end": 18456,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 18443,
											"end": 18461,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 18435,
											"end": 18461,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 18435,
											"end": 18461,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18507,
											"end": 18516,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 18501,
											"end": 18505,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 18497,
											"end": 18517,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 18493,
											"end": 18494,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 18482,
											"end": 18491,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 18478,
											"end": 18495,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 18471,
											"end": 18518,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 18535,
											"end": 18613,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "469"
										},
										{
											"begin": 18608,
											"end": 18612,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 18599,
											"end": 18605,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 18535,
											"end": 18613,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "390"
										},
										{
											"begin": 18535,
											"end": 18613,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 18535,
											"end": 18613,
											"name": "tag",
											"source": 9,
											"value": "469"
										},
										{
											"begin": 18535,
											"end": 18613,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18527,
											"end": 18613,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 18527,
											"end": 18613,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18307,
											"end": 18620,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 18307,
											"end": 18620,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 18307,
											"end": 18620,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18307,
											"end": 18620,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18307,
											"end": 18620,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 18626,
											"end": 19045,
											"name": "tag",
											"source": 9,
											"value": "194"
										},
										{
											"begin": 18626,
											"end": 19045,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18792,
											"end": 18796,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 18830,
											"end": 18832,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 18819,
											"end": 18828,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 18815,
											"end": 18833,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 18807,
											"end": 18833,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 18807,
											"end": 18833,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18879,
											"end": 18888,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 18873,
											"end": 18877,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 18869,
											"end": 18889,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 18865,
											"end": 18866,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 18854,
											"end": 18863,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 18850,
											"end": 18867,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 18843,
											"end": 18890,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 18907,
											"end": 19038,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "471"
										},
										{
											"begin": 19033,
											"end": 19037,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 18907,
											"end": 19038,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "398"
										},
										{
											"begin": 18907,
											"end": 19038,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 18907,
											"end": 19038,
											"name": "tag",
											"source": 9,
											"value": "471"
										},
										{
											"begin": 18907,
											"end": 19038,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18899,
											"end": 19038,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 18899,
											"end": 19038,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18626,
											"end": 19045,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 18626,
											"end": 19045,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 18626,
											"end": 19045,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18626,
											"end": 19045,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 19051,
											"end": 19470,
											"name": "tag",
											"source": 9,
											"value": "56"
										},
										{
											"begin": 19051,
											"end": 19470,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 19217,
											"end": 19221,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 19255,
											"end": 19257,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 19244,
											"end": 19253,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 19240,
											"end": 19258,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 19232,
											"end": 19258,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 19232,
											"end": 19258,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 19304,
											"end": 19313,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 19298,
											"end": 19302,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 19294,
											"end": 19314,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 19290,
											"end": 19291,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 19279,
											"end": 19288,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 19275,
											"end": 19292,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 19268,
											"end": 19315,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 19332,
											"end": 19463,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "473"
										},
										{
											"begin": 19458,
											"end": 19462,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 19332,
											"end": 19463,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "403"
										},
										{
											"begin": 19332,
											"end": 19463,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 19332,
											"end": 19463,
											"name": "tag",
											"source": 9,
											"value": "473"
										},
										{
											"begin": 19332,
											"end": 19463,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 19324,
											"end": 19463,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 19324,
											"end": 19463,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 19051,
											"end": 19470,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 19051,
											"end": 19470,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 19051,
											"end": 19470,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 19051,
											"end": 19470,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 19476,
											"end": 19895,
											"name": "tag",
											"source": 9,
											"value": "77"
										},
										{
											"begin": 19476,
											"end": 19895,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 19642,
											"end": 19646,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 19680,
											"end": 19682,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 19669,
											"end": 19678,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 19665,
											"end": 19683,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 19657,
											"end": 19683,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 19657,
											"end": 19683,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 19729,
											"end": 19738,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 19723,
											"end": 19727,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 19719,
											"end": 19739,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 19715,
											"end": 19716,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 19704,
											"end": 19713,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 19700,
											"end": 19717,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 19693,
											"end": 19740,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 19757,
											"end": 19888,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "475"
										},
										{
											"begin": 19883,
											"end": 19887,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 19757,
											"end": 19888,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "408"
										},
										{
											"begin": 19757,
											"end": 19888,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 19757,
											"end": 19888,
											"name": "tag",
											"source": 9,
											"value": "475"
										},
										{
											"begin": 19757,
											"end": 19888,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 19749,
											"end": 19888,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 19749,
											"end": 19888,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 19476,
											"end": 19895,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 19476,
											"end": 19895,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 19476,
											"end": 19895,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 19476,
											"end": 19895,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 19901,
											"end": 20320,
											"name": "tag",
											"source": 9,
											"value": "123"
										},
										{
											"begin": 19901,
											"end": 20320,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 20067,
											"end": 20071,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 20105,
											"end": 20107,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 20094,
											"end": 20103,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 20090,
											"end": 20108,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 20082,
											"end": 20108,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 20082,
											"end": 20108,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 20154,
											"end": 20163,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 20148,
											"end": 20152,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 20144,
											"end": 20164,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 20140,
											"end": 20141,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 20129,
											"end": 20138,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 20125,
											"end": 20142,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 20118,
											"end": 20165,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 20182,
											"end": 20313,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "477"
										},
										{
											"begin": 20308,
											"end": 20312,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 20182,
											"end": 20313,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "413"
										},
										{
											"begin": 20182,
											"end": 20313,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 20182,
											"end": 20313,
											"name": "tag",
											"source": 9,
											"value": "477"
										},
										{
											"begin": 20182,
											"end": 20313,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 20174,
											"end": 20313,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 20174,
											"end": 20313,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 19901,
											"end": 20320,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 19901,
											"end": 20320,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 19901,
											"end": 20320,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 19901,
											"end": 20320,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 20326,
											"end": 20745,
											"name": "tag",
											"source": 9,
											"value": "136"
										},
										{
											"begin": 20326,
											"end": 20745,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 20492,
											"end": 20496,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 20530,
											"end": 20532,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 20519,
											"end": 20528,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 20515,
											"end": 20533,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 20507,
											"end": 20533,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 20507,
											"end": 20533,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 20579,
											"end": 20588,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 20573,
											"end": 20577,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 20569,
											"end": 20589,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 20565,
											"end": 20566,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 20554,
											"end": 20563,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 20550,
											"end": 20567,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 20543,
											"end": 20590,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 20607,
											"end": 20738,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "479"
										},
										{
											"begin": 20733,
											"end": 20737,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 20607,
											"end": 20738,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "418"
										},
										{
											"begin": 20607,
											"end": 20738,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 20607,
											"end": 20738,
											"name": "tag",
											"source": 9,
											"value": "479"
										},
										{
											"begin": 20607,
											"end": 20738,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 20599,
											"end": 20738,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 20599,
											"end": 20738,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 20326,
											"end": 20745,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 20326,
											"end": 20745,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 20326,
											"end": 20745,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 20326,
											"end": 20745,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 20751,
											"end": 21170,
											"name": "tag",
											"source": 9,
											"value": "149"
										},
										{
											"begin": 20751,
											"end": 21170,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 20917,
											"end": 20921,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 20955,
											"end": 20957,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 20944,
											"end": 20953,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 20940,
											"end": 20958,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 20932,
											"end": 20958,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 20932,
											"end": 20958,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 21004,
											"end": 21013,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 20998,
											"end": 21002,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 20994,
											"end": 21014,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 20990,
											"end": 20991,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 20979,
											"end": 20988,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 20975,
											"end": 20992,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 20968,
											"end": 21015,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 21032,
											"end": 21163,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "481"
										},
										{
											"begin": 21158,
											"end": 21162,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 21032,
											"end": 21163,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "423"
										},
										{
											"begin": 21032,
											"end": 21163,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 21032,
											"end": 21163,
											"name": "tag",
											"source": 9,
											"value": "481"
										},
										{
											"begin": 21032,
											"end": 21163,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 21024,
											"end": 21163,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 21024,
											"end": 21163,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 20751,
											"end": 21170,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 20751,
											"end": 21170,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 20751,
											"end": 21170,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 20751,
											"end": 21170,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 21176,
											"end": 21595,
											"name": "tag",
											"source": 9,
											"value": "83"
										},
										{
											"begin": 21176,
											"end": 21595,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 21342,
											"end": 21346,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 21380,
											"end": 21382,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 21369,
											"end": 21378,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 21365,
											"end": 21383,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 21357,
											"end": 21383,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 21357,
											"end": 21383,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 21429,
											"end": 21438,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 21423,
											"end": 21427,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 21419,
											"end": 21439,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 21415,
											"end": 21416,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 21404,
											"end": 21413,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 21400,
											"end": 21417,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 21393,
											"end": 21440,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 21457,
											"end": 21588,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "483"
										},
										{
											"begin": 21583,
											"end": 21587,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 21457,
											"end": 21588,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "428"
										},
										{
											"begin": 21457,
											"end": 21588,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 21457,
											"end": 21588,
											"name": "tag",
											"source": 9,
											"value": "483"
										},
										{
											"begin": 21457,
											"end": 21588,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 21449,
											"end": 21588,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 21449,
											"end": 21588,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 21176,
											"end": 21595,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 21176,
											"end": 21595,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 21176,
											"end": 21595,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 21176,
											"end": 21595,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 21601,
											"end": 22020,
											"name": "tag",
											"source": 9,
											"value": "120"
										},
										{
											"begin": 21601,
											"end": 22020,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 21767,
											"end": 21771,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 21805,
											"end": 21807,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 21794,
											"end": 21803,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 21790,
											"end": 21808,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 21782,
											"end": 21808,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 21782,
											"end": 21808,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 21854,
											"end": 21863,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 21848,
											"end": 21852,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 21844,
											"end": 21864,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 21840,
											"end": 21841,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 21829,
											"end": 21838,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 21825,
											"end": 21842,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 21818,
											"end": 21865,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 21882,
											"end": 22013,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "485"
										},
										{
											"begin": 22008,
											"end": 22012,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 21882,
											"end": 22013,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "433"
										},
										{
											"begin": 21882,
											"end": 22013,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 21882,
											"end": 22013,
											"name": "tag",
											"source": 9,
											"value": "485"
										},
										{
											"begin": 21882,
											"end": 22013,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 21874,
											"end": 22013,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 21874,
											"end": 22013,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 21601,
											"end": 22020,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 21601,
											"end": 22020,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 21601,
											"end": 22020,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 21601,
											"end": 22020,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 22026,
											"end": 22445,
											"name": "tag",
											"source": 9,
											"value": "190"
										},
										{
											"begin": 22026,
											"end": 22445,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 22192,
											"end": 22196,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 22230,
											"end": 22232,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 22219,
											"end": 22228,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 22215,
											"end": 22233,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 22207,
											"end": 22233,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 22207,
											"end": 22233,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 22279,
											"end": 22288,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 22273,
											"end": 22277,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 22269,
											"end": 22289,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 22265,
											"end": 22266,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 22254,
											"end": 22263,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 22250,
											"end": 22267,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 22243,
											"end": 22290,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 22307,
											"end": 22438,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "487"
										},
										{
											"begin": 22433,
											"end": 22437,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 22307,
											"end": 22438,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "438"
										},
										{
											"begin": 22307,
											"end": 22438,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 22307,
											"end": 22438,
											"name": "tag",
											"source": 9,
											"value": "487"
										},
										{
											"begin": 22307,
											"end": 22438,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 22299,
											"end": 22438,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 22299,
											"end": 22438,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 22026,
											"end": 22445,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 22026,
											"end": 22445,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 22026,
											"end": 22445,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 22026,
											"end": 22445,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 22451,
											"end": 22673,
											"name": "tag",
											"source": 9,
											"value": "17"
										},
										{
											"begin": 22451,
											"end": 22673,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 22544,
											"end": 22548,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 22582,
											"end": 22584,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 22571,
											"end": 22580,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 22567,
											"end": 22585,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 22559,
											"end": 22585,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 22559,
											"end": 22585,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 22595,
											"end": 22666,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "489"
										},
										{
											"begin": 22663,
											"end": 22664,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 22652,
											"end": 22661,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 22648,
											"end": 22665,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 22639,
											"end": 22645,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 22595,
											"end": 22666,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "446"
										},
										{
											"begin": 22595,
											"end": 22666,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 22595,
											"end": 22666,
											"name": "tag",
											"source": 9,
											"value": "489"
										},
										{
											"begin": 22595,
											"end": 22666,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 22451,
											"end": 22673,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 22451,
											"end": 22673,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 22451,
											"end": 22673,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 22451,
											"end": 22673,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 22451,
											"end": 22673,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 22679,
											"end": 23011,
											"name": "tag",
											"source": 9,
											"value": "163"
										},
										{
											"begin": 22679,
											"end": 23011,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 22800,
											"end": 22804,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 22838,
											"end": 22840,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 22827,
											"end": 22836,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 22823,
											"end": 22841,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 22815,
											"end": 22841,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 22815,
											"end": 22841,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 22851,
											"end": 22922,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "491"
										},
										{
											"begin": 22919,
											"end": 22920,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 22908,
											"end": 22917,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 22904,
											"end": 22921,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 22895,
											"end": 22901,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 22851,
											"end": 22922,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "446"
										},
										{
											"begin": 22851,
											"end": 22922,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 22851,
											"end": 22922,
											"name": "tag",
											"source": 9,
											"value": "491"
										},
										{
											"begin": 22851,
											"end": 22922,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 22932,
											"end": 23004,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "492"
										},
										{
											"begin": 23000,
											"end": 23002,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 22989,
											"end": 22998,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 22985,
											"end": 23003,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 22976,
											"end": 22982,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 22932,
											"end": 23004,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "446"
										},
										{
											"begin": 22932,
											"end": 23004,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 22932,
											"end": 23004,
											"name": "tag",
											"source": 9,
											"value": "492"
										},
										{
											"begin": 22932,
											"end": 23004,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 22679,
											"end": 23011,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 22679,
											"end": 23011,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 22679,
											"end": 23011,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 22679,
											"end": 23011,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 22679,
											"end": 23011,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 22679,
											"end": 23011,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 23017,
											"end": 23146,
											"name": "tag",
											"source": 9,
											"value": "228"
										},
										{
											"begin": 23017,
											"end": 23146,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 23051,
											"end": 23057,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 23078,
											"end": 23098,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "494"
										},
										{
											"begin": 23078,
											"end": 23098,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "495"
										},
										{
											"begin": 23078,
											"end": 23098,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 23078,
											"end": 23098,
											"name": "tag",
											"source": 9,
											"value": "494"
										},
										{
											"begin": 23078,
											"end": 23098,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 23068,
											"end": 23098,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 23068,
											"end": 23098,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 23107,
											"end": 23140,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "496"
										},
										{
											"begin": 23135,
											"end": 23139,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 23127,
											"end": 23133,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 23107,
											"end": 23140,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "497"
										},
										{
											"begin": 23107,
											"end": 23140,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 23107,
											"end": 23140,
											"name": "tag",
											"source": 9,
											"value": "496"
										},
										{
											"begin": 23107,
											"end": 23140,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 23017,
											"end": 23146,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 23017,
											"end": 23146,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 23017,
											"end": 23146,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 23017,
											"end": 23146,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 23152,
											"end": 23227,
											"name": "tag",
											"source": 9,
											"value": "495"
										},
										{
											"begin": 23152,
											"end": 23227,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 23185,
											"end": 23191,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 23218,
											"end": 23220,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 23212,
											"end": 23221,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 23202,
											"end": 23221,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 23202,
											"end": 23221,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 23152,
											"end": 23227,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 23152,
											"end": 23227,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 23233,
											"end": 23544,
											"name": "tag",
											"source": 9,
											"value": "227"
										},
										{
											"begin": 23233,
											"end": 23544,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 23310,
											"end": 23314,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 23400,
											"end": 23418,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23392,
											"end": 23398,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 23389,
											"end": 23419,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 23386,
											"end": 23442,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 23386,
											"end": 23442,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "500"
										},
										{
											"begin": 23386,
											"end": 23442,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 23422,
											"end": 23440,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "501"
										},
										{
											"begin": 23422,
											"end": 23440,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "86"
										},
										{
											"begin": 23422,
											"end": 23440,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 23422,
											"end": 23440,
											"name": "tag",
											"source": 9,
											"value": "501"
										},
										{
											"begin": 23422,
											"end": 23440,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 23386,
											"end": 23442,
											"name": "tag",
											"source": 9,
											"value": "500"
										},
										{
											"begin": 23386,
											"end": 23442,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 23472,
											"end": 23476,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 23464,
											"end": 23470,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 23460,
											"end": 23477,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 23452,
											"end": 23477,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 23452,
											"end": 23477,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 23532,
											"end": 23536,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 23526,
											"end": 23530,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 23522,
											"end": 23537,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 23514,
											"end": 23537,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 23514,
											"end": 23537,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 23233,
											"end": 23544,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 23233,
											"end": 23544,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 23233,
											"end": 23544,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 23233,
											"end": 23544,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 23550,
											"end": 23861,
											"name": "tag",
											"source": 9,
											"value": "241"
										},
										{
											"begin": 23550,
											"end": 23861,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 23627,
											"end": 23631,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 23717,
											"end": 23735,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23709,
											"end": 23715,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 23706,
											"end": 23736,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 23703,
											"end": 23759,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 23703,
											"end": 23759,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "503"
										},
										{
											"begin": 23703,
											"end": 23759,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 23739,
											"end": 23757,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "504"
										},
										{
											"begin": 23739,
											"end": 23757,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "86"
										},
										{
											"begin": 23739,
											"end": 23757,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 23739,
											"end": 23757,
											"name": "tag",
											"source": 9,
											"value": "504"
										},
										{
											"begin": 23739,
											"end": 23757,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 23703,
											"end": 23759,
											"name": "tag",
											"source": 9,
											"value": "503"
										},
										{
											"begin": 23703,
											"end": 23759,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 23789,
											"end": 23793,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 23781,
											"end": 23787,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 23777,
											"end": 23794,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 23769,
											"end": 23794,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 23769,
											"end": 23794,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 23849,
											"end": 23853,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 23843,
											"end": 23847,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 23839,
											"end": 23854,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 23831,
											"end": 23854,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 23831,
											"end": 23854,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 23550,
											"end": 23861,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 23550,
											"end": 23861,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 23550,
											"end": 23861,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 23550,
											"end": 23861,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 23867,
											"end": 24174,
											"name": "tag",
											"source": 9,
											"value": "253"
										},
										{
											"begin": 23867,
											"end": 24174,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 23928,
											"end": 23932,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 24018,
											"end": 24036,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24010,
											"end": 24016,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 24007,
											"end": 24037,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 24004,
											"end": 24060,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 24004,
											"end": 24060,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "506"
										},
										{
											"begin": 24004,
											"end": 24060,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 24040,
											"end": 24058,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "507"
										},
										{
											"begin": 24040,
											"end": 24058,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "86"
										},
										{
											"begin": 24040,
											"end": 24058,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 24040,
											"end": 24058,
											"name": "tag",
											"source": 9,
											"value": "507"
										},
										{
											"begin": 24040,
											"end": 24058,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 24004,
											"end": 24060,
											"name": "tag",
											"source": 9,
											"value": "506"
										},
										{
											"begin": 24004,
											"end": 24060,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 24078,
											"end": 24107,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "508"
										},
										{
											"begin": 24100,
											"end": 24106,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 24078,
											"end": 24107,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "389"
										},
										{
											"begin": 24078,
											"end": 24107,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 24078,
											"end": 24107,
											"name": "tag",
											"source": 9,
											"value": "508"
										},
										{
											"begin": 24078,
											"end": 24107,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 24070,
											"end": 24107,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 24070,
											"end": 24107,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 24162,
											"end": 24166,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 24156,
											"end": 24160,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 24152,
											"end": 24167,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 24144,
											"end": 24167,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 24144,
											"end": 24167,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 23867,
											"end": 24174,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 23867,
											"end": 24174,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 23867,
											"end": 24174,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 23867,
											"end": 24174,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 24180,
											"end": 24312,
											"name": "tag",
											"source": 9,
											"value": "369"
										},
										{
											"begin": 24180,
											"end": 24312,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 24247,
											"end": 24251,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 24270,
											"end": 24273,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 24262,
											"end": 24273,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 24262,
											"end": 24273,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 24300,
											"end": 24304,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 24295,
											"end": 24298,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 24291,
											"end": 24305,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 24283,
											"end": 24305,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 24283,
											"end": 24305,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 24180,
											"end": 24312,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 24180,
											"end": 24312,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 24180,
											"end": 24312,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 24180,
											"end": 24312,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 24318,
											"end": 24432,
											"name": "tag",
											"source": 9,
											"value": "365"
										},
										{
											"begin": 24318,
											"end": 24432,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 24385,
											"end": 24391,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 24419,
											"end": 24424,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 24413,
											"end": 24425,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 24403,
											"end": 24425,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 24403,
											"end": 24425,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 24318,
											"end": 24432,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 24318,
											"end": 24432,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 24318,
											"end": 24432,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 24318,
											"end": 24432,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 24438,
											"end": 24536,
											"name": "tag",
											"source": 9,
											"value": "383"
										},
										{
											"begin": 24438,
											"end": 24536,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 24489,
											"end": 24495,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 24523,
											"end": 24528,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 24517,
											"end": 24529,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 24507,
											"end": 24529,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 24507,
											"end": 24529,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 24438,
											"end": 24536,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 24438,
											"end": 24536,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 24438,
											"end": 24536,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 24438,
											"end": 24536,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 24542,
											"end": 24641,
											"name": "tag",
											"source": 9,
											"value": "393"
										},
										{
											"begin": 24542,
											"end": 24641,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 24594,
											"end": 24600,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 24628,
											"end": 24633,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 24622,
											"end": 24634,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 24612,
											"end": 24634,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 24612,
											"end": 24634,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 24542,
											"end": 24641,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 24542,
											"end": 24641,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 24542,
											"end": 24641,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 24542,
											"end": 24641,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 24647,
											"end": 24760,
											"name": "tag",
											"source": 9,
											"value": "375"
										},
										{
											"begin": 24647,
											"end": 24760,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 24717,
											"end": 24721,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 24749,
											"end": 24753,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 24744,
											"end": 24747,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 24740,
											"end": 24754,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 24732,
											"end": 24754,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 24732,
											"end": 24754,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 24647,
											"end": 24760,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 24647,
											"end": 24760,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 24647,
											"end": 24760,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 24647,
											"end": 24760,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 24766,
											"end": 24950,
											"name": "tag",
											"source": 9,
											"value": "367"
										},
										{
											"begin": 24766,
											"end": 24950,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 24865,
											"end": 24876,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 24899,
											"end": 24905,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 24894,
											"end": 24897,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 24887,
											"end": 24906,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 24939,
											"end": 24943,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 24934,
											"end": 24937,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 24930,
											"end": 24944,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 24915,
											"end": 24944,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 24915,
											"end": 24944,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 24766,
											"end": 24950,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 24766,
											"end": 24950,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 24766,
											"end": 24950,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 24766,
											"end": 24950,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 24766,
											"end": 24950,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 24956,
											"end": 25124,
											"name": "tag",
											"source": 9,
											"value": "385"
										},
										{
											"begin": 24956,
											"end": 25124,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 25039,
											"end": 25050,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 25073,
											"end": 25079,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 25068,
											"end": 25071,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 25061,
											"end": 25080,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 25113,
											"end": 25117,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 25108,
											"end": 25111,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 25104,
											"end": 25118,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 25089,
											"end": 25118,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 25089,
											"end": 25118,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 24956,
											"end": 25124,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 24956,
											"end": 25124,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 24956,
											"end": 25124,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 24956,
											"end": 25124,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 24956,
											"end": 25124,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 25130,
											"end": 25299,
											"name": "tag",
											"source": 9,
											"value": "395"
										},
										{
											"begin": 25130,
											"end": 25299,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 25214,
											"end": 25225,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 25248,
											"end": 25254,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 25243,
											"end": 25246,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 25236,
											"end": 25255,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 25288,
											"end": 25292,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 25283,
											"end": 25286,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 25279,
											"end": 25293,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 25264,
											"end": 25293,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 25264,
											"end": 25293,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 25130,
											"end": 25299,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 25130,
											"end": 25299,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 25130,
											"end": 25299,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 25130,
											"end": 25299,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 25130,
											"end": 25299,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 25305,
											"end": 25610,
											"name": "tag",
											"source": 9,
											"value": "138"
										},
										{
											"begin": 25305,
											"end": 25610,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 25345,
											"end": 25348,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 25364,
											"end": 25384,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "518"
										},
										{
											"begin": 25382,
											"end": 25383,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 25364,
											"end": 25384,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "445"
										},
										{
											"begin": 25364,
											"end": 25384,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 25364,
											"end": 25384,
											"name": "tag",
											"source": 9,
											"value": "518"
										},
										{
											"begin": 25364,
											"end": 25384,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 25359,
											"end": 25384,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 25359,
											"end": 25384,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 25398,
											"end": 25418,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "519"
										},
										{
											"begin": 25416,
											"end": 25417,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 25398,
											"end": 25418,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "445"
										},
										{
											"begin": 25398,
											"end": 25418,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 25398,
											"end": 25418,
											"name": "tag",
											"source": 9,
											"value": "519"
										},
										{
											"begin": 25398,
											"end": 25418,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 25393,
											"end": 25418,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 25393,
											"end": 25418,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 25552,
											"end": 25553,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 25484,
											"end": 25550,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25480,
											"end": 25554,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 25477,
											"end": 25478,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 25474,
											"end": 25555,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 25471,
											"end": 25578,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 25471,
											"end": 25578,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "520"
										},
										{
											"begin": 25471,
											"end": 25578,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 25558,
											"end": 25576,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "521"
										},
										{
											"begin": 25558,
											"end": 25576,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "522"
										},
										{
											"begin": 25558,
											"end": 25576,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 25558,
											"end": 25576,
											"name": "tag",
											"source": 9,
											"value": "521"
										},
										{
											"begin": 25558,
											"end": 25576,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 25471,
											"end": 25578,
											"name": "tag",
											"source": 9,
											"value": "520"
										},
										{
											"begin": 25471,
											"end": 25578,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 25602,
											"end": 25603,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 25599,
											"end": 25600,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 25595,
											"end": 25604,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 25588,
											"end": 25604,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 25588,
											"end": 25604,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 25305,
											"end": 25610,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 25305,
											"end": 25610,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 25305,
											"end": 25610,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 25305,
											"end": 25610,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 25305,
											"end": 25610,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 25616,
											"end": 25712,
											"name": "tag",
											"source": 9,
											"value": "361"
										},
										{
											"begin": 25616,
											"end": 25712,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 25653,
											"end": 25660,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 25682,
											"end": 25706,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "524"
										},
										{
											"begin": 25700,
											"end": 25705,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 25682,
											"end": 25706,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "525"
										},
										{
											"begin": 25682,
											"end": 25706,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 25682,
											"end": 25706,
											"name": "tag",
											"source": 9,
											"value": "524"
										},
										{
											"begin": 25682,
											"end": 25706,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 25671,
											"end": 25706,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 25671,
											"end": 25706,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 25616,
											"end": 25712,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 25616,
											"end": 25712,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 25616,
											"end": 25712,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 25616,
											"end": 25712,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 25718,
											"end": 25808,
											"name": "tag",
											"source": 9,
											"value": "379"
										},
										{
											"begin": 25718,
											"end": 25808,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 25752,
											"end": 25759,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 25795,
											"end": 25800,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 25788,
											"end": 25801,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 25781,
											"end": 25802,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 25770,
											"end": 25802,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 25770,
											"end": 25802,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 25718,
											"end": 25808,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 25718,
											"end": 25808,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 25718,
											"end": 25808,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 25718,
											"end": 25808,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 25814,
											"end": 25963,
											"name": "tag",
											"source": 9,
											"value": "527"
										},
										{
											"begin": 25814,
											"end": 25963,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 25850,
											"end": 25857,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 25890,
											"end": 25956,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 25883,
											"end": 25888,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 25879,
											"end": 25957,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 25868,
											"end": 25957,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 25868,
											"end": 25957,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 25814,
											"end": 25963,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 25814,
											"end": 25963,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 25814,
											"end": 25963,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 25814,
											"end": 25963,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 25969,
											"end": 26095,
											"name": "tag",
											"source": 9,
											"value": "525"
										},
										{
											"begin": 25969,
											"end": 26095,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 26006,
											"end": 26013,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 26046,
											"end": 26088,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26039,
											"end": 26044,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 26035,
											"end": 26089,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 26024,
											"end": 26089,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 26024,
											"end": 26089,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 25969,
											"end": 26095,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 25969,
											"end": 26095,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 25969,
											"end": 26095,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 25969,
											"end": 26095,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 26101,
											"end": 26178,
											"name": "tag",
											"source": 9,
											"value": "445"
										},
										{
											"begin": 26101,
											"end": 26178,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 26138,
											"end": 26145,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 26167,
											"end": 26172,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 26156,
											"end": 26172,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 26156,
											"end": 26172,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 26101,
											"end": 26178,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 26101,
											"end": 26178,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 26101,
											"end": 26178,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 26101,
											"end": 26178,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 26184,
											"end": 26338,
											"name": "tag",
											"source": 9,
											"value": "258"
										},
										{
											"begin": 26184,
											"end": 26338,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 26268,
											"end": 26274,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 26263,
											"end": 26266,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 26258,
											"end": 26261,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 26245,
											"end": 26275,
											"name": "CALLDATACOPY",
											"source": 9
										},
										{
											"begin": 26330,
											"end": 26331,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 26321,
											"end": 26327,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 26316,
											"end": 26319,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 26312,
											"end": 26328,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 26305,
											"end": 26332,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 26184,
											"end": 26338,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 26184,
											"end": 26338,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 26184,
											"end": 26338,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 26184,
											"end": 26338,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 26344,
											"end": 26651,
											"name": "tag",
											"source": 9,
											"value": "387"
										},
										{
											"begin": 26344,
											"end": 26651,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 26412,
											"end": 26413,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 26422,
											"end": 26535,
											"name": "tag",
											"source": 9,
											"value": "533"
										},
										{
											"begin": 26422,
											"end": 26535,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 26436,
											"end": 26442,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 26433,
											"end": 26434,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 26430,
											"end": 26443,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 26422,
											"end": 26535,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 26422,
											"end": 26535,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "535"
										},
										{
											"begin": 26422,
											"end": 26535,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 26521,
											"end": 26522,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 26516,
											"end": 26519,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 26512,
											"end": 26523,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 26506,
											"end": 26524,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 26502,
											"end": 26503,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 26497,
											"end": 26500,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 26493,
											"end": 26504,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 26486,
											"end": 26525,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 26458,
											"end": 26460,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 26455,
											"end": 26456,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 26451,
											"end": 26461,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 26446,
											"end": 26461,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 26446,
											"end": 26461,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 26422,
											"end": 26535,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "533"
										},
										{
											"begin": 26422,
											"end": 26535,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 26422,
											"end": 26535,
											"name": "tag",
											"source": 9,
											"value": "535"
										},
										{
											"begin": 26422,
											"end": 26535,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 26553,
											"end": 26559,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 26550,
											"end": 26551,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 26547,
											"end": 26560,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 26544,
											"end": 26645,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 26544,
											"end": 26645,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "536"
										},
										{
											"begin": 26544,
											"end": 26645,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 26633,
											"end": 26634,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 26624,
											"end": 26630,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 26619,
											"end": 26622,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 26615,
											"end": 26631,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 26608,
											"end": 26635,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 26544,
											"end": 26645,
											"name": "tag",
											"source": 9,
											"value": "536"
										},
										{
											"begin": 26544,
											"end": 26645,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 26393,
											"end": 26651,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 26344,
											"end": 26651,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 26344,
											"end": 26651,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 26344,
											"end": 26651,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 26344,
											"end": 26651,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 26657,
											"end": 26977,
											"name": "tag",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 26657,
											"end": 26977,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 26701,
											"end": 26707,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 26738,
											"end": 26739,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 26732,
											"end": 26736,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 26728,
											"end": 26740,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 26718,
											"end": 26740,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 26718,
											"end": 26740,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 26785,
											"end": 26786,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 26779,
											"end": 26783,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 26775,
											"end": 26787,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 26806,
											"end": 26824,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 26796,
											"end": 26877,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "538"
										},
										{
											"begin": 26796,
											"end": 26877,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 26862,
											"end": 26866,
											"name": "PUSH",
											"source": 9,
											"value": "7F"
										},
										{
											"begin": 26854,
											"end": 26860,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 26850,
											"end": 26867,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 26840,
											"end": 26867,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 26840,
											"end": 26867,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 26796,
											"end": 26877,
											"name": "tag",
											"source": 9,
											"value": "538"
										},
										{
											"begin": 26796,
											"end": 26877,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 26924,
											"end": 26926,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 26916,
											"end": 26922,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 26913,
											"end": 26927,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 26893,
											"end": 26911,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 26890,
											"end": 26928,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 26887,
											"end": 26971,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 26887,
											"end": 26971,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "539"
										},
										{
											"begin": 26887,
											"end": 26971,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 26943,
											"end": 26961,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "540"
										},
										{
											"begin": 26943,
											"end": 26961,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "541"
										},
										{
											"begin": 26943,
											"end": 26961,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 26943,
											"end": 26961,
											"name": "tag",
											"source": 9,
											"value": "540"
										},
										{
											"begin": 26943,
											"end": 26961,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 26887,
											"end": 26971,
											"name": "tag",
											"source": 9,
											"value": "539"
										},
										{
											"begin": 26887,
											"end": 26971,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 26708,
											"end": 26977,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 26657,
											"end": 26977,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 26657,
											"end": 26977,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 26657,
											"end": 26977,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 26657,
											"end": 26977,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 26983,
											"end": 27264,
											"name": "tag",
											"source": 9,
											"value": "497"
										},
										{
											"begin": 26983,
											"end": 27264,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 27066,
											"end": 27093,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "543"
										},
										{
											"begin": 27088,
											"end": 27092,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 27066,
											"end": 27093,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "389"
										},
										{
											"begin": 27066,
											"end": 27093,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 27066,
											"end": 27093,
											"name": "tag",
											"source": 9,
											"value": "543"
										},
										{
											"begin": 27066,
											"end": 27093,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 27058,
											"end": 27064,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 27054,
											"end": 27094,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 27196,
											"end": 27202,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 27184,
											"end": 27194,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 27181,
											"end": 27203,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 27160,
											"end": 27178,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27148,
											"end": 27158,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 27145,
											"end": 27179,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 27142,
											"end": 27204,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 27139,
											"end": 27227,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 27139,
											"end": 27227,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "544"
										},
										{
											"begin": 27139,
											"end": 27227,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 27207,
											"end": 27225,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "545"
										},
										{
											"begin": 27207,
											"end": 27225,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "86"
										},
										{
											"begin": 27207,
											"end": 27225,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 27207,
											"end": 27225,
											"name": "tag",
											"source": 9,
											"value": "545"
										},
										{
											"begin": 27207,
											"end": 27225,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 27139,
											"end": 27227,
											"name": "tag",
											"source": 9,
											"value": "544"
										},
										{
											"begin": 27139,
											"end": 27227,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 27247,
											"end": 27257,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 27243,
											"end": 27245,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 27236,
											"end": 27258,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 27026,
											"end": 27264,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 26983,
											"end": 27264,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 26983,
											"end": 27264,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 26983,
											"end": 27264,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 27270,
											"end": 27503,
											"name": "tag",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 27270,
											"end": 27503,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 27309,
											"end": 27312,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 27332,
											"end": 27356,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "547"
										},
										{
											"begin": 27350,
											"end": 27355,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 27332,
											"end": 27356,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "445"
										},
										{
											"begin": 27332,
											"end": 27356,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 27332,
											"end": 27356,
											"name": "tag",
											"source": 9,
											"value": "547"
										},
										{
											"begin": 27332,
											"end": 27356,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 27323,
											"end": 27356,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 27323,
											"end": 27356,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 27378,
											"end": 27444,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27371,
											"end": 27376,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 27368,
											"end": 27445,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 27365,
											"end": 27468,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 27365,
											"end": 27468,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "548"
										},
										{
											"begin": 27365,
											"end": 27468,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 27448,
											"end": 27466,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "549"
										},
										{
											"begin": 27448,
											"end": 27466,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "522"
										},
										{
											"begin": 27448,
											"end": 27466,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 27448,
											"end": 27466,
											"name": "tag",
											"source": 9,
											"value": "549"
										},
										{
											"begin": 27448,
											"end": 27466,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 27365,
											"end": 27468,
											"name": "tag",
											"source": 9,
											"value": "548"
										},
										{
											"begin": 27365,
											"end": 27468,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 27495,
											"end": 27496,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 27488,
											"end": 27493,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 27484,
											"end": 27497,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 27477,
											"end": 27497,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 27477,
											"end": 27497,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 27270,
											"end": 27503,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 27270,
											"end": 27503,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 27270,
											"end": 27503,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 27270,
											"end": 27503,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 27509,
											"end": 27689,
											"name": "tag",
											"source": 9,
											"value": "522"
										},
										{
											"begin": 27509,
											"end": 27689,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 27557,
											"end": 27634,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 27554,
											"end": 27555,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 27547,
											"end": 27635,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 27654,
											"end": 27658,
											"name": "PUSH",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 27651,
											"end": 27652,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 27644,
											"end": 27659,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 27678,
											"end": 27682,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 27675,
											"end": 27676,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 27668,
											"end": 27683,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 27695,
											"end": 27875,
											"name": "tag",
											"source": 9,
											"value": "541"
										},
										{
											"begin": 27695,
											"end": 27875,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 27743,
											"end": 27820,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 27740,
											"end": 27741,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 27733,
											"end": 27821,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 27840,
											"end": 27844,
											"name": "PUSH",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 27837,
											"end": 27838,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 27830,
											"end": 27845,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 27864,
											"end": 27868,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 27861,
											"end": 27862,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 27854,
											"end": 27869,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 27881,
											"end": 28061,
											"name": "tag",
											"source": 9,
											"value": "94"
										},
										{
											"begin": 27881,
											"end": 28061,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 27929,
											"end": 28006,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 27926,
											"end": 27927,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 27919,
											"end": 28007,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 28026,
											"end": 28030,
											"name": "PUSH",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 28023,
											"end": 28024,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 28016,
											"end": 28031,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 28050,
											"end": 28054,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 28047,
											"end": 28048,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 28040,
											"end": 28055,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 28067,
											"end": 28247,
											"name": "tag",
											"source": 9,
											"value": "86"
										},
										{
											"begin": 28067,
											"end": 28247,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 28115,
											"end": 28192,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 28112,
											"end": 28113,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 28105,
											"end": 28193,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 28212,
											"end": 28216,
											"name": "PUSH",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 28209,
											"end": 28210,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 28202,
											"end": 28217,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 28236,
											"end": 28240,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 28233,
											"end": 28234,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 28226,
											"end": 28241,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 28253,
											"end": 28436,
											"name": "tag",
											"source": 9,
											"value": "184"
										},
										{
											"begin": 28253,
											"end": 28436,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 28288,
											"end": 28291,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 28326,
											"end": 28327,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 28308,
											"end": 28324,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 28305,
											"end": 28328,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 28302,
											"end": 28430,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 28302,
											"end": 28430,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "555"
										},
										{
											"begin": 28302,
											"end": 28430,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 28364,
											"end": 28365,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 28361,
											"end": 28362,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 28358,
											"end": 28359,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 28343,
											"end": 28366,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 28386,
											"end": 28420,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "556"
										},
										{
											"begin": 28417,
											"end": 28418,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 28411,
											"end": 28419,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 28386,
											"end": 28420,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "557"
										},
										{
											"begin": 28386,
											"end": 28420,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 28386,
											"end": 28420,
											"name": "tag",
											"source": 9,
											"value": "556"
										},
										{
											"begin": 28386,
											"end": 28420,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 28379,
											"end": 28420,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 28379,
											"end": 28420,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 28302,
											"end": 28430,
											"name": "tag",
											"source": 9,
											"value": "555"
										},
										{
											"begin": 28302,
											"end": 28430,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 28253,
											"end": 28436,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 28253,
											"end": 28436,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 28442,
											"end": 28559,
											"name": "tag",
											"source": 9,
											"value": "266"
										},
										{
											"begin": 28442,
											"end": 28559,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 28551,
											"end": 28552,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 28548,
											"end": 28549,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 28541,
											"end": 28553,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 28565,
											"end": 28682,
											"name": "tag",
											"source": 9,
											"value": "231"
										},
										{
											"begin": 28565,
											"end": 28682,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 28674,
											"end": 28675,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 28671,
											"end": 28672,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 28664,
											"end": 28676,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 28688,
											"end": 28805,
											"name": "tag",
											"source": 9,
											"value": "256"
										},
										{
											"begin": 28688,
											"end": 28805,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 28797,
											"end": 28798,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 28794,
											"end": 28795,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 28787,
											"end": 28799,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 28811,
											"end": 28928,
											"name": "tag",
											"source": 9,
											"value": "305"
										},
										{
											"begin": 28811,
											"end": 28928,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 28920,
											"end": 28921,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 28917,
											"end": 28918,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 28910,
											"end": 28922,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 28934,
											"end": 29051,
											"name": "tag",
											"source": 9,
											"value": "295"
										},
										{
											"begin": 28934,
											"end": 29051,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 29043,
											"end": 29044,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 29040,
											"end": 29041,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 29033,
											"end": 29045,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 29057,
											"end": 29159,
											"name": "tag",
											"source": 9,
											"value": "389"
										},
										{
											"begin": 29057,
											"end": 29159,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 29098,
											"end": 29104,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 29149,
											"end": 29151,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 29145,
											"end": 29152,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 29140,
											"end": 29142,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 29133,
											"end": 29138,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 29129,
											"end": 29143,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 29125,
											"end": 29153,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 29115,
											"end": 29153,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 29115,
											"end": 29153,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 29057,
											"end": 29159,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 29057,
											"end": 29159,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 29057,
											"end": 29159,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 29057,
											"end": 29159,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 29165,
											"end": 29271,
											"name": "tag",
											"source": 9,
											"value": "557"
										},
										{
											"begin": 29165,
											"end": 29271,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 29209,
											"end": 29217,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 29258,
											"end": 29263,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 29253,
											"end": 29256,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 29249,
											"end": 29264,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": 29228,
											"end": 29264,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 29228,
											"end": 29264,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 29165,
											"end": 29271,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 29165,
											"end": 29271,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 29165,
											"end": 29271,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 29165,
											"end": 29271,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 29277,
											"end": 29504,
											"name": "tag",
											"source": 9,
											"value": "402"
										},
										{
											"begin": 29277,
											"end": 29504,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 29417,
											"end": 29451,
											"name": "PUSH",
											"source": 9,
											"value": "455243313135353A204552433131353552656365697665722072656A65637465"
										},
										{
											"begin": 29413,
											"end": 29414,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 29405,
											"end": 29411,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 29401,
											"end": 29415,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 29394,
											"end": 29452,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 29486,
											"end": 29496,
											"name": "PUSH",
											"source": 9,
											"value": "6420746F6B656E73000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 29481,
											"end": 29483,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 29473,
											"end": 29479,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 29469,
											"end": 29484,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 29462,
											"end": 29497,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 29277,
											"end": 29504,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 29277,
											"end": 29504,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 29510,
											"end": 29739,
											"name": "tag",
											"source": 9,
											"value": "407"
										},
										{
											"begin": 29510,
											"end": 29739,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 29650,
											"end": 29684,
											"name": "PUSH",
											"source": 9,
											"value": "455243313135353A2061646472657373207A65726F206973206E6F7420612076"
										},
										{
											"begin": 29646,
											"end": 29647,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 29638,
											"end": 29644,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 29634,
											"end": 29648,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 29627,
											"end": 29685,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 29719,
											"end": 29731,
											"name": "PUSH",
											"source": 9,
											"value": "616C6964206F776E657200000000000000000000000000000000000000000000"
										},
										{
											"begin": 29714,
											"end": 29716,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 29706,
											"end": 29712,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 29702,
											"end": 29717,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 29695,
											"end": 29732,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 29510,
											"end": 29739,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 29510,
											"end": 29739,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 29745,
											"end": 29978,
											"name": "tag",
											"source": 9,
											"value": "412"
										},
										{
											"begin": 29745,
											"end": 29978,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 29885,
											"end": 29919,
											"name": "PUSH",
											"source": 9,
											"value": "455243313135353A2063616C6C6572206973206E6F7420746F6B656E206F776E"
										},
										{
											"begin": 29881,
											"end": 29882,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 29873,
											"end": 29879,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 29869,
											"end": 29883,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 29862,
											"end": 29920,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 29954,
											"end": 29970,
											"name": "PUSH",
											"source": 9,
											"value": "6572206F7220617070726F766564000000000000000000000000000000000000"
										},
										{
											"begin": 29949,
											"end": 29951,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 29941,
											"end": 29947,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 29937,
											"end": 29952,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 29930,
											"end": 29971,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 29745,
											"end": 29978,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 29745,
											"end": 29978,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 29984,
											"end": 30208,
											"name": "tag",
											"source": 9,
											"value": "417"
										},
										{
											"begin": 29984,
											"end": 30208,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 30124,
											"end": 30158,
											"name": "PUSH",
											"source": 9,
											"value": "455243313135353A207472616E7366657220746F20746865207A65726F206164"
										},
										{
											"begin": 30120,
											"end": 30121,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 30112,
											"end": 30118,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 30108,
											"end": 30122,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 30101,
											"end": 30159,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 30193,
											"end": 30200,
											"name": "PUSH",
											"source": 9,
											"value": "6472657373000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 30188,
											"end": 30190,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 30180,
											"end": 30186,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 30176,
											"end": 30191,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 30169,
											"end": 30201,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 29984,
											"end": 30208,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 29984,
											"end": 30208,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 30214,
											"end": 30443,
											"name": "tag",
											"source": 9,
											"value": "422"
										},
										{
											"begin": 30214,
											"end": 30443,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 30354,
											"end": 30388,
											"name": "PUSH",
											"source": 9,
											"value": "455243313135353A20696E73756666696369656E742062616C616E636520666F"
										},
										{
											"begin": 30350,
											"end": 30351,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 30342,
											"end": 30348,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 30338,
											"end": 30352,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 30331,
											"end": 30389,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 30423,
											"end": 30435,
											"name": "PUSH",
											"source": 9,
											"value": "72207472616E7366657200000000000000000000000000000000000000000000"
										},
										{
											"begin": 30418,
											"end": 30420,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 30410,
											"end": 30416,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 30406,
											"end": 30421,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 30399,
											"end": 30436,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 30214,
											"end": 30443,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 30214,
											"end": 30443,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 30449,
											"end": 30677,
											"name": "tag",
											"source": 9,
											"value": "427"
										},
										{
											"begin": 30449,
											"end": 30677,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 30589,
											"end": 30623,
											"name": "PUSH",
											"source": 9,
											"value": "455243313135353A2073657474696E6720617070726F76616C20737461747573"
										},
										{
											"begin": 30585,
											"end": 30586,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 30577,
											"end": 30583,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 30573,
											"end": 30587,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 30566,
											"end": 30624,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 30658,
											"end": 30669,
											"name": "PUSH",
											"source": 9,
											"value": "20666F722073656C660000000000000000000000000000000000000000000000"
										},
										{
											"begin": 30653,
											"end": 30655,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 30645,
											"end": 30651,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 30641,
											"end": 30656,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 30634,
											"end": 30670,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 30449,
											"end": 30677,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 30449,
											"end": 30677,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 30683,
											"end": 30911,
											"name": "tag",
											"source": 9,
											"value": "432"
										},
										{
											"begin": 30683,
											"end": 30911,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 30823,
											"end": 30857,
											"name": "PUSH",
											"source": 9,
											"value": "455243313135353A206163636F756E747320616E6420696473206C656E677468"
										},
										{
											"begin": 30819,
											"end": 30820,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 30811,
											"end": 30817,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 30807,
											"end": 30821,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 30800,
											"end": 30858,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 30892,
											"end": 30903,
											"name": "PUSH",
											"source": 9,
											"value": "206D69736D617463680000000000000000000000000000000000000000000000"
										},
										{
											"begin": 30887,
											"end": 30889,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 30879,
											"end": 30885,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 30875,
											"end": 30890,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 30868,
											"end": 30904,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 30683,
											"end": 30911,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 30683,
											"end": 30911,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 30917,
											"end": 31144,
											"name": "tag",
											"source": 9,
											"value": "437"
										},
										{
											"begin": 30917,
											"end": 31144,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 31057,
											"end": 31091,
											"name": "PUSH",
											"source": 9,
											"value": "455243313135353A2069647320616E6420616D6F756E7473206C656E67746820"
										},
										{
											"begin": 31053,
											"end": 31054,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 31045,
											"end": 31051,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 31041,
											"end": 31055,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 31034,
											"end": 31092,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 31126,
											"end": 31136,
											"name": "PUSH",
											"source": 9,
											"value": "6D69736D61746368000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 31121,
											"end": 31123,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 31113,
											"end": 31119,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 31109,
											"end": 31124,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 31102,
											"end": 31137,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 30917,
											"end": 31144,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 30917,
											"end": 31144,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 31150,
											"end": 31389,
											"name": "tag",
											"source": 9,
											"value": "442"
										},
										{
											"begin": 31150,
											"end": 31389,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 31290,
											"end": 31324,
											"name": "PUSH",
											"source": 9,
											"value": "455243313135353A207472616E7366657220746F206E6F6E2D45524331313535"
										},
										{
											"begin": 31286,
											"end": 31287,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 31278,
											"end": 31284,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 31274,
											"end": 31288,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 31267,
											"end": 31325,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 31359,
											"end": 31381,
											"name": "PUSH",
											"source": 9,
											"value": "526563656976657220696D706C656D656E746572000000000000000000000000"
										},
										{
											"begin": 31354,
											"end": 31356,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 31346,
											"end": 31352,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 31342,
											"end": 31357,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 31335,
											"end": 31382,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 31150,
											"end": 31389,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 31150,
											"end": 31389,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 31395,
											"end": 32106,
											"name": "tag",
											"source": 9,
											"value": "186"
										},
										{
											"begin": 31395,
											"end": 32106,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 31434,
											"end": 31437,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 31472,
											"end": 31476,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 31454,
											"end": 31470,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 31451,
											"end": 31477,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 31448,
											"end": 31487,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 31448,
											"end": 31487,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "575"
										},
										{
											"begin": 31448,
											"end": 31487,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 31480,
											"end": 31485,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "574"
										},
										{
											"begin": 31480,
											"end": 31485,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 31448,
											"end": 31487,
											"name": "tag",
											"source": 9,
											"value": "575"
										},
										{
											"begin": 31448,
											"end": 31487,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 31509,
											"end": 31529,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "576"
										},
										{
											"begin": 31509,
											"end": 31529,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "495"
										},
										{
											"begin": 31509,
											"end": 31529,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 31509,
											"end": 31529,
											"name": "tag",
											"source": 9,
											"value": "576"
										},
										{
											"begin": 31509,
											"end": 31529,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 31584,
											"end": 31585,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 31566,
											"end": 31582,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 31562,
											"end": 31586,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 31559,
											"end": 31560,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 31553,
											"end": 31557,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 31538,
											"end": 31587,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 31617,
											"end": 31621,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 31611,
											"end": 31622,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 31716,
											"end": 31732,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 31709,
											"end": 31713,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 31701,
											"end": 31707,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 31697,
											"end": 31714,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 31694,
											"end": 31733,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 31661,
											"end": 31679,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 31653,
											"end": 31659,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 31650,
											"end": 31680,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 31634,
											"end": 31747,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 31631,
											"end": 31777,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 31631,
											"end": 31777,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "577"
										},
										{
											"begin": 31631,
											"end": 31777,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 31762,
											"end": 31767,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 31762,
											"end": 31767,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 31762,
											"end": 31767,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "574"
										},
										{
											"begin": 31762,
											"end": 31767,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 31631,
											"end": 31777,
											"name": "tag",
											"source": 9,
											"value": "577"
										},
										{
											"begin": 31631,
											"end": 31777,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 31808,
											"end": 31814,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 31802,
											"end": 31806,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 31798,
											"end": 31815,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 31844,
											"end": 31847,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 31838,
											"end": 31848,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 31871,
											"end": 31889,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 31863,
											"end": 31869,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 31860,
											"end": 31890,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 31857,
											"end": 31900,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 31857,
											"end": 31900,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "578"
										},
										{
											"begin": 31857,
											"end": 31900,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 31893,
											"end": 31898,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 31893,
											"end": 31898,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 31893,
											"end": 31898,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 31893,
											"end": 31898,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 31893,
											"end": 31898,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "574"
										},
										{
											"begin": 31893,
											"end": 31898,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 31857,
											"end": 31900,
											"name": "tag",
											"source": 9,
											"value": "578"
										},
										{
											"begin": 31857,
											"end": 31900,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 31941,
											"end": 31947,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 31934,
											"end": 31938,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 31929,
											"end": 31932,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 31925,
											"end": 31939,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 31921,
											"end": 31948,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 32000,
											"end": 32001,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 31982,
											"end": 31998,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 31978,
											"end": 32002,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 31972,
											"end": 31976,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 31968,
											"end": 32003,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 31963,
											"end": 31966,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 31960,
											"end": 32004,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 31957,
											"end": 32014,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 31957,
											"end": 32014,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "579"
										},
										{
											"begin": 31957,
											"end": 32014,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 32007,
											"end": 32012,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 32007,
											"end": 32012,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 32007,
											"end": 32012,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 32007,
											"end": 32012,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 32007,
											"end": 32012,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 32007,
											"end": 32012,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "574"
										},
										{
											"begin": 32007,
											"end": 32012,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 31957,
											"end": 32014,
											"name": "tag",
											"source": 9,
											"value": "579"
										},
										{
											"begin": 31957,
											"end": 32014,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 32024,
											"end": 32081,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "580"
										},
										{
											"begin": 32072,
											"end": 32078,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 32066,
											"end": 32070,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 32062,
											"end": 32079,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 32054,
											"end": 32060,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 32050,
											"end": 32080,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 32044,
											"end": 32048,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 32024,
											"end": 32081,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "497"
										},
										{
											"begin": 32024,
											"end": 32081,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 32024,
											"end": 32081,
											"name": "tag",
											"source": 9,
											"value": "580"
										},
										{
											"begin": 32024,
											"end": 32081,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 32097,
											"end": 32100,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 32090,
											"end": 32100,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 32090,
											"end": 32100,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 31438,
											"end": 32106,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 31438,
											"end": 32106,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 31438,
											"end": 32106,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 31438,
											"end": 32106,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 31438,
											"end": 32106,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 31395,
											"end": 32106,
											"name": "tag",
											"source": 9,
											"value": "574"
										},
										{
											"begin": 31395,
											"end": 32106,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 31395,
											"end": 32106,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 31395,
											"end": 32106,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 32112,
											"end": 32234,
											"name": "tag",
											"source": 9,
											"value": "261"
										},
										{
											"begin": 32112,
											"end": 32234,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 32185,
											"end": 32209,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "582"
										},
										{
											"begin": 32203,
											"end": 32208,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 32185,
											"end": 32209,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "361"
										},
										{
											"begin": 32185,
											"end": 32209,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 32185,
											"end": 32209,
											"name": "tag",
											"source": 9,
											"value": "582"
										},
										{
											"begin": 32185,
											"end": 32209,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 32178,
											"end": 32183,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 32175,
											"end": 32210,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 32165,
											"end": 32228,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "583"
										},
										{
											"begin": 32165,
											"end": 32228,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 32224,
											"end": 32225,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 32221,
											"end": 32222,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 32214,
											"end": 32226,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 32165,
											"end": 32228,
											"name": "tag",
											"source": 9,
											"value": "583"
										},
										{
											"begin": 32165,
											"end": 32228,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 32112,
											"end": 32234,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 32112,
											"end": 32234,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 32240,
											"end": 32356,
											"name": "tag",
											"source": 9,
											"value": "276"
										},
										{
											"begin": 32240,
											"end": 32356,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 32310,
											"end": 32331,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "585"
										},
										{
											"begin": 32325,
											"end": 32330,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 32310,
											"end": 32331,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "379"
										},
										{
											"begin": 32310,
											"end": 32331,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 32310,
											"end": 32331,
											"name": "tag",
											"source": 9,
											"value": "585"
										},
										{
											"begin": 32310,
											"end": 32331,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 32303,
											"end": 32308,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 32300,
											"end": 32332,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 32290,
											"end": 32350,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "586"
										},
										{
											"begin": 32290,
											"end": 32350,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 32346,
											"end": 32347,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 32343,
											"end": 32344,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 32336,
											"end": 32348,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 32290,
											"end": 32350,
											"name": "tag",
											"source": 9,
											"value": "586"
										},
										{
											"begin": 32290,
											"end": 32350,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 32240,
											"end": 32356,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 32240,
											"end": 32356,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 32362,
											"end": 32482,
											"name": "tag",
											"source": 9,
											"value": "280"
										},
										{
											"begin": 32362,
											"end": 32482,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 32434,
											"end": 32457,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "588"
										},
										{
											"begin": 32451,
											"end": 32456,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 32434,
											"end": 32457,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "527"
										},
										{
											"begin": 32434,
											"end": 32457,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 32434,
											"end": 32457,
											"name": "tag",
											"source": 9,
											"value": "588"
										},
										{
											"begin": 32434,
											"end": 32457,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 32427,
											"end": 32432,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 32424,
											"end": 32458,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 32414,
											"end": 32476,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "589"
										},
										{
											"begin": 32414,
											"end": 32476,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 32472,
											"end": 32473,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 32469,
											"end": 32470,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 32462,
											"end": 32474,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 32414,
											"end": 32476,
											"name": "tag",
											"source": 9,
											"value": "589"
										},
										{
											"begin": 32414,
											"end": 32476,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 32362,
											"end": 32482,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 32362,
											"end": 32482,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 32488,
											"end": 32610,
											"name": "tag",
											"source": 9,
											"value": "291"
										},
										{
											"begin": 32488,
											"end": 32610,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 32561,
											"end": 32585,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "591"
										},
										{
											"begin": 32579,
											"end": 32584,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 32561,
											"end": 32585,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "445"
										},
										{
											"begin": 32561,
											"end": 32585,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 32561,
											"end": 32585,
											"name": "tag",
											"source": 9,
											"value": "591"
										},
										{
											"begin": 32561,
											"end": 32585,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 32554,
											"end": 32559,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 32551,
											"end": 32586,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 32541,
											"end": 32604,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "592"
										},
										{
											"begin": 32541,
											"end": 32604,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 32600,
											"end": 32601,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 32597,
											"end": 32598,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 32590,
											"end": 32602,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 32541,
											"end": 32604,
											"name": "tag",
											"source": 9,
											"value": "592"
										},
										{
											"begin": 32541,
											"end": 32604,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 32488,
											"end": 32610,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 32488,
											"end": 32610,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"uri(uint256)": "0e89341c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the basic standard multi-token. See https://eips.ethereum.org/EIPS/eip-1155 Originally based on code by Enjin: https://github.com/enjin/erc-1155 _Available since v3.1._\",\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC1155-isApprovedForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155-safeBatchTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC1155-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"uri(uint256)\":{\"details\":\"See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\\\{id\\\\}` substring with the actual token type ID.\"}},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":\"ERC1155Upgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xedc5eaa54866c6d0e8960d9fe8ea6f9052ba28686907f6886f83dfba41fa1549\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0b296244e62d13e87d8272c574fb58c22af02b262d74d7a8f642753522351bb0\",\"dweb:/ipfs/Qmcd3MfBWRE8EQt67AqgGGHviNum5aQ7JE7manH5nNtx4o\"]},\"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":{\"keccak256\":\"0x781168693f2016172924e327a142f7a87b037d63b6c613d02d3f62bcd96658a4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0af02441cd02c82483d909febd9f36af6104866c260a3a9046b263fe82bdf10\",\"dweb:/ipfs/QmbEWucxnEDmgWuPksGxMETufBVWYisXGFsZzGsU1MADV3\"]},\"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/IERC1155ReceiverUpgradeable.sol\":{\"keccak256\":\"0xffcb29612efb57efc8f0d4897deb5abaeac830022c59a3aa17446d698dbc856b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4a4da6e241d1d8c2ef214c311e02c749f45b5e0dd8168c667bc8ee6f67dcf4ce\",\"dweb:/ipfs/QmdsKj5frsNS7ZCfJBm4XNfy6MueV9udBF2FiBxVXwxybG\"]},\"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/IERC1155Upgradeable.sol\":{\"keccak256\":\"0x091a49ef99a2be002680781a10cc9dd74c0f348301ede5482c4ea625f79a8ffe\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e037192cadfd20ad0f1b0c54a0c770a1ba551e7d0fcb6d3708e5ba352f88ded2\",\"dweb:/ipfs/QmTXwY6odV1ToDZAYxbbLKThe9M5PUWTmWBjwT776hH4qm\"]},\"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/extensions/IERC1155MetadataURIUpgradeable.sol\":{\"keccak256\":\"0xa350df12a8c10e821af05e0863f44e8317a0efa44df27bfd5dc1d63fdfa3c448\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1870980d15f9003916faf2a9a0eac6dcd4f0e28e2af6f5a3cee0cd685d460ee9\",\"dweb:/ipfs/QmY8K1YZQmuL2WDTPC8QwCm3ztrUD7JKmnvoZkMyGZceiM\"]},\"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x0a3b4afc301241e2629ad192fa02e0f8626e3cf38ab6f45342bfd7afbde16ee0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b189423f1102ff4487e9c59a65ec400b98cc4aeef478dac8272b482e9f5ad7de\",\"dweb:/ipfs/QmdpYHrzD8wPe5DMuEiWkXiVLsTkqD7C4tbBjWwkBQwJi2\"]},\"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0x9a3b990bd56d139df3e454a9edf1c64668530b5a77fc32eb063bc206f958274a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0895399d170daab2d69b4c43a0202e5a07f2e67a93b26e3354dcbedb062232f7\",\"dweb:/ipfs/QmUM1VH3XDk559Dsgh4QPvupr3YVKjz87HrSyYzzVFZbxw\"]},\"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/IERC165Upgradeable.sol\":{\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758\",\"dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 6,
								"contract": "HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol:ERC1155Upgradeable",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_uint8"
							},
							{
								"astId": 9,
								"contract": "HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol:ERC1155Upgradeable",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 1916,
								"contract": "HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol:ERC1155Upgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)50_storage"
							},
							{
								"astId": 1960,
								"contract": "HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol:ERC1155Upgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "51",
								"type": "t_array(t_uint256)50_storage"
							},
							{
								"astId": 197,
								"contract": "HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol:ERC1155Upgradeable",
								"label": "_balances",
								"offset": 0,
								"slot": "101",
								"type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 203,
								"contract": "HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol:ERC1155Upgradeable",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "102",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 205,
								"contract": "HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol:ERC1155Upgradeable",
								"label": "_uri",
								"offset": 0,
								"slot": "103",
								"type": "t_string_storage"
							},
							{
								"astId": 1412,
								"contract": "HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol:ERC1155Upgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "104",
								"type": "t_array(t_uint256)47_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_uint256)47_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[47]",
								"numberOfBytes": "1504"
							},
							"t_array(t_uint256)50_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[50]",
								"numberOfBytes": "1600"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/IERC1155ReceiverUpgradeable.sol": {
				"IERC1155ReceiverUpgradeable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC1155BatchReceived",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC1155Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "_Available since v3.1._",
						"kind": "dev",
						"methods": {
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": {
								"details": "Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. NOTE: To accept the transfer(s), this must return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` (i.e. 0xbc197c81, or its own function selector).",
								"params": {
									"data": "Additional data with no specified format",
									"from": "The address which previously owned the token",
									"ids": "An array containing ids of each token being transferred (order and length must match values array)",
									"operator": "The address which initiated the batch transfer (i.e. msg.sender)",
									"values": "An array containing amounts of each token being transferred (order and length must match ids array)"
								},
								"returns": {
									"_0": "`bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"
								}
							},
							"onERC1155Received(address,address,uint256,uint256,bytes)": {
								"details": "Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. NOTE: To accept the transfer, this must return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` (i.e. 0xf23a6e61, or its own function selector).",
								"params": {
									"data": "Additional data with no specified format",
									"from": "The address which previously owned the token",
									"id": "The ID of the token being transferred",
									"operator": "The address which initiated the transfer (i.e. msg.sender)",
									"value": "The amount of tokens being transferred"
								},
								"returns": {
									"_0": "`bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"
								}
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": "bc197c81",
							"onERC1155Received(address,address,uint256,uint256,bytes)": "f23a6e61",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"_Available since v3.1._\",\"kind\":\"dev\",\"methods\":{\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\":{\"details\":\"Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. NOTE: To accept the transfer(s), this must return `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` (i.e. 0xbc197c81, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"ids\":\"An array containing ids of each token being transferred (order and length must match values array)\",\"operator\":\"The address which initiated the batch transfer (i.e. msg.sender)\",\"values\":\"An array containing amounts of each token being transferred (order and length must match ids array)\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` if transfer is allowed\"}},\"onERC1155Received(address,address,uint256,uint256,bytes)\":{\"details\":\"Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. NOTE: To accept the transfer, this must return `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` (i.e. 0xf23a6e61, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"id\":\"The ID of the token being transferred\",\"operator\":\"The address which initiated the transfer (i.e. msg.sender)\",\"value\":\"The amount of tokens being transferred\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` if transfer is allowed\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/IERC1155ReceiverUpgradeable.sol\":\"IERC1155ReceiverUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/IERC1155ReceiverUpgradeable.sol\":{\"keccak256\":\"0xffcb29612efb57efc8f0d4897deb5abaeac830022c59a3aa17446d698dbc856b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4a4da6e241d1d8c2ef214c311e02c749f45b5e0dd8168c667bc8ee6f67dcf4ce\",\"dweb:/ipfs/QmdsKj5frsNS7ZCfJBm4XNfy6MueV9udBF2FiBxVXwxybG\"]},\"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/IERC165Upgradeable.sol\":{\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758\",\"dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/IERC1155Upgradeable.sol": {
				"IERC1155Upgradeable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC1155 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1155[EIP]. _Available since v3.1._",
						"events": {
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`."
							},
							"TransferBatch(address,address,address,uint256[],uint256[])": {
								"details": "Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers."
							},
							"TransferSingle(address,address,address,uint256,uint256)": {
								"details": "Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`."
							},
							"URI(string,uint256)": {
								"details": "Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}."
							}
						},
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "Returns the amount of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. Emits a {TransferBatch} event. Requirements: - `ids` and `amounts` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "Transfers `amount` tokens of token type `id` from `from` to `to`. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `amount`. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC1155 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1155[EIP]. _Available since v3.1._\",\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the amount of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. Emits a {TransferBatch} event. Requirements: - `ids` and `amounts` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers `amount` tokens of token type `id` from `from` to `to`. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `amount`. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/IERC1155Upgradeable.sol\":\"IERC1155Upgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/IERC1155Upgradeable.sol\":{\"keccak256\":\"0x091a49ef99a2be002680781a10cc9dd74c0f348301ede5482c4ea625f79a8ffe\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e037192cadfd20ad0f1b0c54a0c770a1ba551e7d0fcb6d3708e5ba352f88ded2\",\"dweb:/ipfs/QmTXwY6odV1ToDZAYxbbLKThe9M5PUWTmWBjwT776hH4qm\"]},\"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/IERC165Upgradeable.sol\":{\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758\",\"dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/extensions/IERC1155MetadataURIUpgradeable.sol": {
				"IERC1155MetadataURIUpgradeable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "uri",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the optional ERC1155MetadataExtension interface, as defined in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP]. _Available since v3.1._",
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "Returns the amount of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. Emits a {TransferBatch} event. Requirements: - `ids` and `amounts` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "Transfers `amount` tokens of token type `id` from `from` to `to`. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `amount`. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"uri(uint256)": {
								"details": "Returns the URI for token type `id`. If the `\\{id\\}` substring is present in the URI, it must be replaced by clients with the actual token type ID."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"uri(uint256)": "0e89341c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the optional ERC1155MetadataExtension interface, as defined in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP]. _Available since v3.1._\",\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the amount of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. Emits a {TransferBatch} event. Requirements: - `ids` and `amounts` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers `amount` tokens of token type `id` from `from` to `to`. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `amount`. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"uri(uint256)\":{\"details\":\"Returns the URI for token type `id`. If the `\\\\{id\\\\}` substring is present in the URI, it must be replaced by clients with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/extensions/IERC1155MetadataURIUpgradeable.sol\":\"IERC1155MetadataURIUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/IERC1155Upgradeable.sol\":{\"keccak256\":\"0x091a49ef99a2be002680781a10cc9dd74c0f348301ede5482c4ea625f79a8ffe\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e037192cadfd20ad0f1b0c54a0c770a1ba551e7d0fcb6d3708e5ba352f88ded2\",\"dweb:/ipfs/QmTXwY6odV1ToDZAYxbbLKThe9M5PUWTmWBjwT776hH4qm\"]},\"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/extensions/IERC1155MetadataURIUpgradeable.sol\":{\"keccak256\":\"0xa350df12a8c10e821af05e0863f44e8317a0efa44df27bfd5dc1d63fdfa3c448\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1870980d15f9003916faf2a9a0eac6dcd4f0e28e2af6f5a3cee0cd685d460ee9\",\"dweb:/ipfs/QmY8K1YZQmuL2WDTPC8QwCm3ztrUD7JKmnvoZkMyGZceiM\"]},\"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/IERC165Upgradeable.sol\":{\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758\",\"dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol": {
				"AddressUpgradeable": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol\":194:8280  library AddressUpgradeable {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol\":194:8280  library AddressUpgradeable {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212206239d013100d5c94db90c78d83e5567c9e392c51fbf7eac71db6feb9d5b9eb1c64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212206239d013100d5c94db90c78d83e5567c9e392c51fbf7eac71db6feb9d5b9eb1c64736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH3 0x39D013 LT 0xD 0x5C SWAP5 0xDB SWAP1 0xC7 DUP14 DUP4 0xE5 JUMP PUSH29 0x9E392C51FBF7EAC71DB6FEB9D5B9EB1C64736F6C634300080700330000 ",
							"sourceMap": "194:8086:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212206239d013100d5c94db90c78d83e5567c9e392c51fbf7eac71db6feb9d5b9eb1c64736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH3 0x39D013 LT 0xD 0x5C SWAP5 0xDB SWAP1 0xC7 DUP14 DUP4 0xE5 JUMP PUSH29 0x9E392C51FBF7EAC71DB6FEB9D5B9EB1C64736F6C634300080700330000 ",
							"sourceMap": "194:8086:5:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_revert(bytes memory,string memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 194,
									"end": 8280,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 8280,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 8280,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 194,
									"end": 8280,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 194,
									"end": 8280,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 194,
									"end": 8280,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 194,
									"end": 8280,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 194,
									"end": 8280,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 194,
									"end": 8280,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 194,
									"end": 8280,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8280,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 194,
									"end": 8280,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 8280,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 194,
									"end": 8280,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 8280,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 194,
									"end": 8280,
									"name": "PUSH",
									"source": 5,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 8280,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8280,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 194,
									"end": 8280,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8280,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 194,
									"end": 8280,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 194,
									"end": 8280,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 194,
									"end": 8280,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8280,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 194,
									"end": 8280,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 8280,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 194,
									"end": 8280,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 194,
									"end": 8280,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8280,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 194,
									"end": 8280,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 8280,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 194,
									"end": 8280,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": 194,
									"end": 8280,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 194,
									"end": 8280,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 194,
									"end": 8280,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212206239d013100d5c94db90c78d83e5567c9e392c51fbf7eac71db6feb9d5b9eb1c64736f6c63430008070033",
									".code": [
										{
											"begin": 194,
											"end": 8280,
											"name": "PUSHDEPLOYADDRESS",
											"source": 5
										},
										{
											"begin": 194,
											"end": 8280,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 194,
											"end": 8280,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 194,
											"end": 8280,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 194,
											"end": 8280,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 194,
											"end": 8280,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 194,
											"end": 8280,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 8280,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 194,
											"end": 8280,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol\":\"AddressUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x0a3b4afc301241e2629ad192fa02e0f8626e3cf38ab6f45342bfd7afbde16ee0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b189423f1102ff4487e9c59a65ec400b98cc4aeef478dac8272b482e9f5ad7de\",\"dweb:/ipfs/QmdpYHrzD8wPe5DMuEiWkXiVLsTkqD7C4tbBjWwkBQwJi2\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol": {
				"ContextUpgradeable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "version",
									"type": "uint8"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"__gap": {
								"details": "This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol\":\"ContextUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xedc5eaa54866c6d0e8960d9fe8ea6f9052ba28686907f6886f83dfba41fa1549\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0b296244e62d13e87d8272c574fb58c22af02b262d74d7a8f642753522351bb0\",\"dweb:/ipfs/Qmcd3MfBWRE8EQt67AqgGGHviNum5aQ7JE7manH5nNtx4o\"]},\"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x0a3b4afc301241e2629ad192fa02e0f8626e3cf38ab6f45342bfd7afbde16ee0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b189423f1102ff4487e9c59a65ec400b98cc4aeef478dac8272b482e9f5ad7de\",\"dweb:/ipfs/QmdpYHrzD8wPe5DMuEiWkXiVLsTkqD7C4tbBjWwkBQwJi2\"]},\"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 6,
								"contract": "HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:ContextUpgradeable",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_uint8"
							},
							{
								"astId": 9,
								"contract": "HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:ContextUpgradeable",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 1916,
								"contract": "HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:ContextUpgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)50_storage"
							}
						],
						"types": {
							"t_array(t_uint256)50_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[50]",
								"numberOfBytes": "1600"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol": {
				"ERC165Upgradeable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "version",
									"type": "uint8"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"stateVariables": {
							"__gap": {
								"details": "This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol\":\"ERC165Upgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xedc5eaa54866c6d0e8960d9fe8ea6f9052ba28686907f6886f83dfba41fa1549\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0b296244e62d13e87d8272c574fb58c22af02b262d74d7a8f642753522351bb0\",\"dweb:/ipfs/Qmcd3MfBWRE8EQt67AqgGGHviNum5aQ7JE7manH5nNtx4o\"]},\"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x0a3b4afc301241e2629ad192fa02e0f8626e3cf38ab6f45342bfd7afbde16ee0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b189423f1102ff4487e9c59a65ec400b98cc4aeef478dac8272b482e9f5ad7de\",\"dweb:/ipfs/QmdpYHrzD8wPe5DMuEiWkXiVLsTkqD7C4tbBjWwkBQwJi2\"]},\"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0x9a3b990bd56d139df3e454a9edf1c64668530b5a77fc32eb063bc206f958274a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0895399d170daab2d69b4c43a0202e5a07f2e67a93b26e3354dcbedb062232f7\",\"dweb:/ipfs/QmUM1VH3XDk559Dsgh4QPvupr3YVKjz87HrSyYzzVFZbxw\"]},\"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/IERC165Upgradeable.sol\":{\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758\",\"dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 6,
								"contract": "HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_uint8"
							},
							{
								"astId": 9,
								"contract": "HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 1960,
								"contract": "HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)50_storage"
							}
						],
						"types": {
							"t_array(t_uint256)50_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[50]",
								"numberOfBytes": "1600"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/IERC165Upgradeable.sol": {
				"IERC165Upgradeable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/IERC165Upgradeable.sol\":\"IERC165Upgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/IERC165Upgradeable.sol\":{\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758\",\"dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol": {
				"ast": {
					"absolutePath": "HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol",
					"exportedSymbols": {
						"AddressUpgradeable": [
							1875
						],
						"Initializable": [
							168
						]
					},
					"id": 169,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "113:23:0"
						},
						{
							"absolutePath": "HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol",
							"file": "../../utils/AddressUpgradeable.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 169,
							"sourceUnit": 1876,
							"src": "138:44:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "184:2198:0",
								"text": " @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n case an upgrade adds a module that needs to be initialized.\n For example:\n [.hljs-theme-light.nopadding]\n ```\n contract MyToken is ERC20Upgradeable {\n     function initialize() initializer public {\n         __ERC20_init(\"MyToken\", \"MTK\");\n     }\n }\n contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n     function initializeV2() reinitializer(2) public {\n         __ERC20Permit_init(\"MyToken\");\n     }\n }\n ```\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() {\n     _disableInitializers();\n }\n ```\n ===="
							},
							"fullyImplemented": true,
							"id": 168,
							"linearizedBaseContracts": [
								168
							],
							"name": "Initializable",
							"nameLocation": "2401:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"documentation": {
										"id": 4,
										"nodeType": "StructuredDocumentation",
										"src": "2421:109:0",
										"text": " @dev Indicates that the contract has been initialized.\n @custom:oz-retyped-from bool"
									},
									"id": 6,
									"mutability": "mutable",
									"name": "_initialized",
									"nameLocation": "2549:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 168,
									"src": "2535:26:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 5,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "2535:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"documentation": {
										"id": 7,
										"nodeType": "StructuredDocumentation",
										"src": "2568:91:0",
										"text": " @dev Indicates that the contract is in the process of being initialized."
									},
									"id": 9,
									"mutability": "mutable",
									"name": "_initializing",
									"nameLocation": "2677:13:0",
									"nodeType": "VariableDeclaration",
									"scope": 168,
									"src": "2664:26:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 8,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "2664:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 10,
										"nodeType": "StructuredDocumentation",
										"src": "2697:90:0",
										"text": " @dev Triggered when the contract has been initialized or reinitialized."
									},
									"id": 14,
									"name": "Initialized",
									"nameLocation": "2798:11:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 12,
												"indexed": false,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "2816:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 14,
												"src": "2810:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 11,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2810:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2809:15:0"
									},
									"src": "2792:33:0"
								},
								{
									"body": {
										"id": 69,
										"nodeType": "Block",
										"src": "3258:483:0",
										"statements": [
											{
												"assignments": [
													18
												],
												"declarations": [
													{
														"constant": false,
														"id": 18,
														"mutability": "mutable",
														"name": "isTopLevelCall",
														"nameLocation": "3273:14:0",
														"nodeType": "VariableDeclaration",
														"scope": 69,
														"src": "3268:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 17,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3268:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 21,
												"initialValue": {
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3290:14:0",
													"subExpression": {
														"id": 19,
														"name": "_initializing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 9,
														"src": "3291:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3268:36:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 42,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 27,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 23,
																			"name": "isTopLevelCall",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 18,
																			"src": "3336:14:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			},
																			"id": 26,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 24,
																				"name": "_initialized",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 6,
																				"src": "3354:12:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 25,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3369:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "3354:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "3336:34:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 28,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3335:36:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 36,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "!",
																			"prefix": true,
																			"src": "3376:45:0",
																			"subExpression": {
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"id": 33,
																								"name": "this",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 4294967268,
																								"src": "3415:4:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_contract$_Initializable_$168",
																									"typeString": "contract Initializable"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_contract$_Initializable_$168",
																									"typeString": "contract Initializable"
																								}
																							],
																							"id": 32,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "3407:7:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_address_$",
																								"typeString": "type(address)"
																							},
																							"typeName": {
																								"id": 31,
																								"name": "address",
																								"nodeType": "ElementaryTypeName",
																								"src": "3407:7:0",
																								"typeDescriptions": {}
																							}
																						},
																						"id": 34,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "typeConversion",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "3407:13:0",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					],
																					"expression": {
																						"id": 29,
																						"name": "AddressUpgradeable",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1875,
																						"src": "3377:18:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_contract$_AddressUpgradeable_$1875_$",
																							"typeString": "type(library AddressUpgradeable)"
																						}
																					},
																					"id": 30,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "isContract",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1609,
																					"src": "3377:29:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																						"typeString": "function (address) view returns (bool)"
																					}
																				},
																				"id": 35,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "3377:44:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			},
																			"id": 39,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 37,
																				"name": "_initialized",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 6,
																				"src": "3425:12:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 38,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3441:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "3425:17:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "3376:66:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 41,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3375:68:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "3335:108:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564",
															"id": 43,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3457:48:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
																"typeString": "literal_string \"Initializable: contract is already initialized\""
															},
															"value": "Initializable: contract is already initialized"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
																"typeString": "literal_string \"Initializable: contract is already initialized\""
															}
														],
														"id": 22,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3314:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 44,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3314:201:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 45,
												"nodeType": "ExpressionStatement",
												"src": "3314:201:0"
											},
											{
												"expression": {
													"id": 48,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 46,
														"name": "_initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 6,
														"src": "3525:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 47,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3540:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "3525:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 49,
												"nodeType": "ExpressionStatement",
												"src": "3525:16:0"
											},
											{
												"condition": {
													"id": 50,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 18,
													"src": "3555:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 56,
												"nodeType": "IfStatement",
												"src": "3551:65:0",
												"trueBody": {
													"id": 55,
													"nodeType": "Block",
													"src": "3571:45:0",
													"statements": [
														{
															"expression": {
																"id": 53,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 51,
																	"name": "_initializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 9,
																	"src": "3585:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 52,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3601:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "3585:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 54,
															"nodeType": "ExpressionStatement",
															"src": "3585:20:0"
														}
													]
												}
											},
											{
												"id": 57,
												"nodeType": "PlaceholderStatement",
												"src": "3625:1:0"
											},
											{
												"condition": {
													"id": 58,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 18,
													"src": "3640:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 68,
												"nodeType": "IfStatement",
												"src": "3636:99:0",
												"trueBody": {
													"id": 67,
													"nodeType": "Block",
													"src": "3656:79:0",
													"statements": [
														{
															"expression": {
																"id": 61,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 59,
																	"name": "_initializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 9,
																	"src": "3670:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 60,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3686:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "3670:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 62,
															"nodeType": "ExpressionStatement",
															"src": "3670:21:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"hexValue": "31",
																		"id": 64,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3722:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		}
																	],
																	"id": 63,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 14,
																	"src": "3710:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint8_$returns$__$",
																		"typeString": "function (uint8)"
																	}
																},
																"id": 65,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3710:14:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 66,
															"nodeType": "EmitStatement",
															"src": "3705:19:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 15,
										"nodeType": "StructuredDocumentation",
										"src": "2831:399:0",
										"text": " @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n `onlyInitializing` functions can be used to initialize parent contracts.\n Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\n constructor.\n Emits an {Initialized} event."
									},
									"id": 70,
									"name": "initializer",
									"nameLocation": "3244:11:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3255:2:0"
									},
									"src": "3235:506:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 102,
										"nodeType": "Block",
										"src": "4852:255:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 81,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 77,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "4870:14:0",
																"subExpression": {
																	"id": 76,
																	"name": "_initializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 9,
																	"src": "4871:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																},
																"id": 80,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 78,
																	"name": "_initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 6,
																	"src": "4888:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 79,
																	"name": "version",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 73,
																	"src": "4903:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "4888:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "4870:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564",
															"id": 82,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4912:48:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
																"typeString": "literal_string \"Initializable: contract is already initialized\""
															},
															"value": "Initializable: contract is already initialized"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
																"typeString": "literal_string \"Initializable: contract is already initialized\""
															}
														],
														"id": 75,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4862:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 83,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4862:99:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 84,
												"nodeType": "ExpressionStatement",
												"src": "4862:99:0"
											},
											{
												"expression": {
													"id": 87,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 85,
														"name": "_initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 6,
														"src": "4971:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 86,
														"name": "version",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 73,
														"src": "4986:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "4971:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 88,
												"nodeType": "ExpressionStatement",
												"src": "4971:22:0"
											},
											{
												"expression": {
													"id": 91,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 89,
														"name": "_initializing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 9,
														"src": "5003:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 90,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5019:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "5003:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 92,
												"nodeType": "ExpressionStatement",
												"src": "5003:20:0"
											},
											{
												"id": 93,
												"nodeType": "PlaceholderStatement",
												"src": "5033:1:0"
											},
											{
												"expression": {
													"id": 96,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 94,
														"name": "_initializing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 9,
														"src": "5044:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 95,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5060:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "5044:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 97,
												"nodeType": "ExpressionStatement",
												"src": "5044:21:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 99,
															"name": "version",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 73,
															"src": "5092:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 98,
														"name": "Initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 14,
														"src": "5080:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint8_$returns$__$",
															"typeString": "function (uint8)"
														}
													},
													"id": 100,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5080:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 101,
												"nodeType": "EmitStatement",
												"src": "5075:25:0"
											}
										]
									},
									"documentation": {
										"id": 71,
										"nodeType": "StructuredDocumentation",
										"src": "3747:1062:0",
										"text": " @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n used to initialize parent contracts.\n A reinitializer may be used after the original initialization step. This is essential to configure modules that\n are added through upgrades and that require initialization.\n When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n cannot be nested. If one is invoked in the context of another, execution will revert.\n Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n a contract, executing them in the right order is up to the developer or operator.\n WARNING: setting the version to 255 will prevent any future reinitialization.\n Emits an {Initialized} event."
									},
									"id": 103,
									"name": "reinitializer",
									"nameLocation": "4823:13:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 74,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 73,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "4843:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 103,
												"src": "4837:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 72,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "4837:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4836:15:0"
									},
									"src": "4814:293:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 112,
										"nodeType": "Block",
										"src": "5345:97:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 107,
															"name": "_initializing",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 9,
															"src": "5363:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e697469616c697a61626c653a20636f6e7472616374206973206e6f7420696e697469616c697a696e67",
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5378:45:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b",
																"typeString": "literal_string \"Initializable: contract is not initializing\""
															},
															"value": "Initializable: contract is not initializing"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b",
																"typeString": "literal_string \"Initializable: contract is not initializing\""
															}
														],
														"id": 106,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5355:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 109,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5355:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 110,
												"nodeType": "ExpressionStatement",
												"src": "5355:69:0"
											},
											{
												"id": 111,
												"nodeType": "PlaceholderStatement",
												"src": "5434:1:0"
											}
										]
									},
									"documentation": {
										"id": 104,
										"nodeType": "StructuredDocumentation",
										"src": "5113:199:0",
										"text": " @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} and {reinitializer} modifiers, directly or indirectly."
									},
									"id": 113,
									"name": "onlyInitializing",
									"nameLocation": "5326:16:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5342:2:0"
									},
									"src": "5317:125:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 148,
										"nodeType": "Block",
										"src": "5977:231:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 119,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "5995:14:0",
															"subExpression": {
																"id": 118,
																"name": "_initializing",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 9,
																"src": "5996:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e697469616c697a61626c653a20636f6e747261637420697320696e697469616c697a696e67",
															"id": 120,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6011:41:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a",
																"typeString": "literal_string \"Initializable: contract is initializing\""
															},
															"value": "Initializable: contract is initializing"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a",
																"typeString": "literal_string \"Initializable: contract is initializing\""
															}
														],
														"id": 117,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5987:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 121,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5987:66:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 122,
												"nodeType": "ExpressionStatement",
												"src": "5987:66:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 129,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 123,
														"name": "_initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 6,
														"src": "6067:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 126,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6088:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint8_$",
																		"typeString": "type(uint8)"
																	},
																	"typeName": {
																		"id": 125,
																		"name": "uint8",
																		"nodeType": "ElementaryTypeName",
																		"src": "6088:5:0",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint8_$",
																		"typeString": "type(uint8)"
																	}
																],
																"id": 124,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "6083:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 127,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6083:11:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint8",
																"typeString": "type(uint8)"
															}
														},
														"id": 128,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "6083:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "6067:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 147,
												"nodeType": "IfStatement",
												"src": "6063:139:0",
												"trueBody": {
													"id": 146,
													"nodeType": "Block",
													"src": "6100:102:0",
													"statements": [
														{
															"expression": {
																"id": 136,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 130,
																	"name": "_initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 6,
																	"src": "6114:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 133,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6134:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint8_$",
																					"typeString": "type(uint8)"
																				},
																				"typeName": {
																					"id": 132,
																					"name": "uint8",
																					"nodeType": "ElementaryTypeName",
																					"src": "6134:5:0",
																					"typeDescriptions": {}
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_type$_t_uint8_$",
																					"typeString": "type(uint8)"
																				}
																			],
																			"id": 131,
																			"name": "type",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967269,
																			"src": "6129:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 134,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6129:11:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_meta_type_t_uint8",
																			"typeString": "type(uint8)"
																		}
																	},
																	"id": 135,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "max",
																	"nodeType": "MemberAccess",
																	"src": "6129:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "6114:30:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 137,
															"nodeType": "ExpressionStatement",
															"src": "6114:30:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 141,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "6180:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint8_$",
																						"typeString": "type(uint8)"
																					},
																					"typeName": {
																						"id": 140,
																						"name": "uint8",
																						"nodeType": "ElementaryTypeName",
																						"src": "6180:5:0",
																						"typeDescriptions": {}
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_type$_t_uint8_$",
																						"typeString": "type(uint8)"
																					}
																				],
																				"id": 139,
																				"name": "type",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967269,
																				"src": "6175:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 142,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6175:11:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_meta_type_t_uint8",
																				"typeString": "type(uint8)"
																			}
																		},
																		"id": 143,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberName": "max",
																		"nodeType": "MemberAccess",
																		"src": "6175:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	],
																	"id": 138,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 14,
																	"src": "6163:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint8_$returns$__$",
																		"typeString": "function (uint8)"
																	}
																},
																"id": 144,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6163:28:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 145,
															"nodeType": "EmitStatement",
															"src": "6158:33:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 114,
										"nodeType": "StructuredDocumentation",
										"src": "5448:475:0",
										"text": " @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n through proxies.\n Emits an {Initialized} event the first time it is successfully executed."
									},
									"id": 149,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_disableInitializers",
									"nameLocation": "5937:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5957:2:0"
									},
									"returnParameters": {
										"id": 116,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5977:0:0"
									},
									"scope": 168,
									"src": "5928:280:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 157,
										"nodeType": "Block",
										"src": "6385:36:0",
										"statements": [
											{
												"expression": {
													"id": 155,
													"name": "_initialized",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 6,
													"src": "6402:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 154,
												"id": 156,
												"nodeType": "Return",
												"src": "6395:19:0"
											}
										]
									},
									"documentation": {
										"id": 150,
										"nodeType": "StructuredDocumentation",
										"src": "6214:102:0",
										"text": " @dev Internal function that returns the initialized version. Returns `_initialized`"
									},
									"id": 158,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getInitializedVersion",
									"nameLocation": "6330:22:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 151,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6352:2:0"
									},
									"returnParameters": {
										"id": 154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 158,
												"src": "6378:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 152,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "6378:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6377:7:0"
									},
									"scope": 168,
									"src": "6321:100:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 166,
										"nodeType": "Block",
										"src": "6591:37:0",
										"statements": [
											{
												"expression": {
													"id": 164,
													"name": "_initializing",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 9,
													"src": "6608:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 163,
												"id": 165,
												"nodeType": "Return",
												"src": "6601:20:0"
											}
										]
									},
									"documentation": {
										"id": 159,
										"nodeType": "StructuredDocumentation",
										"src": "6427:103:0",
										"text": " @dev Internal function that returns the initialized version. Returns `_initializing`"
									},
									"id": 167,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isInitializing",
									"nameLocation": "6544:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 160,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6559:2:0"
									},
									"returnParameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "6585:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 161,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6585:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6584:6:0"
									},
									"scope": 168,
									"src": "6535:93:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 169,
							"src": "2383:4247:0",
							"usedErrors": []
						}
					],
					"src": "113:6518:0"
				},
				"id": 0
			},
			"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol": {
				"ast": {
					"absolutePath": "HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol",
					"exportedSymbols": {
						"AddressUpgradeable": [
							1875
						],
						"ContextUpgradeable": [
							1917
						],
						"ERC1155Upgradeable": [
							1413
						],
						"ERC165Upgradeable": [
							1961
						],
						"IERC1155MetadataURIUpgradeable": [
							1591
						],
						"IERC1155ReceiverUpgradeable": [
							1454
						],
						"IERC1155Upgradeable": [
							1576
						],
						"IERC165Upgradeable": [
							1973
						],
						"Initializable": [
							168
						]
					},
					"id": 1414,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 170,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "109:23:1"
						},
						{
							"absolutePath": "HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/IERC1155Upgradeable.sol",
							"file": "./IERC1155Upgradeable.sol",
							"id": 171,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1414,
							"sourceUnit": 1577,
							"src": "134:35:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/IERC1155ReceiverUpgradeable.sol",
							"file": "./IERC1155ReceiverUpgradeable.sol",
							"id": 172,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1414,
							"sourceUnit": 1455,
							"src": "170:43:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/extensions/IERC1155MetadataURIUpgradeable.sol",
							"file": "./extensions/IERC1155MetadataURIUpgradeable.sol",
							"id": 173,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1414,
							"sourceUnit": 1592,
							"src": "214:57:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol",
							"file": "../../utils/AddressUpgradeable.sol",
							"id": 174,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1414,
							"sourceUnit": 1876,
							"src": "272:44:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol",
							"file": "../../utils/ContextUpgradeable.sol",
							"id": 175,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1414,
							"sourceUnit": 1918,
							"src": "317:44:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol",
							"file": "../../utils/introspection/ERC165Upgradeable.sol",
							"id": 176,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1414,
							"sourceUnit": 1962,
							"src": "362:57:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol",
							"file": "../../proxy/utils/Initializable.sol",
							"id": 177,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1414,
							"sourceUnit": 169,
							"src": "420:45:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 179,
										"name": "Initializable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 168,
										"src": "713:13:1"
									},
									"id": 180,
									"nodeType": "InheritanceSpecifier",
									"src": "713:13:1"
								},
								{
									"baseName": {
										"id": 181,
										"name": "ContextUpgradeable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1917,
										"src": "728:18:1"
									},
									"id": 182,
									"nodeType": "InheritanceSpecifier",
									"src": "728:18:1"
								},
								{
									"baseName": {
										"id": 183,
										"name": "ERC165Upgradeable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1961,
										"src": "748:17:1"
									},
									"id": 184,
									"nodeType": "InheritanceSpecifier",
									"src": "748:17:1"
								},
								{
									"baseName": {
										"id": 185,
										"name": "IERC1155Upgradeable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1576,
										"src": "767:19:1"
									},
									"id": 186,
									"nodeType": "InheritanceSpecifier",
									"src": "767:19:1"
								},
								{
									"baseName": {
										"id": 187,
										"name": "IERC1155MetadataURIUpgradeable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1591,
										"src": "788:30:1"
									},
									"id": 188,
									"nodeType": "InheritanceSpecifier",
									"src": "788:30:1"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 178,
								"nodeType": "StructuredDocumentation",
								"src": "467:214:1",
								"text": " @dev Implementation of the basic standard multi-token.\n See https://eips.ethereum.org/EIPS/eip-1155\n Originally based on code by Enjin: https://github.com/enjin/erc-1155\n _Available since v3.1._"
							},
							"fullyImplemented": true,
							"id": 1413,
							"linearizedBaseContracts": [
								1413,
								1591,
								1576,
								1961,
								1973,
								1917,
								168
							],
							"name": "ERC1155Upgradeable",
							"nameLocation": "691:18:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 191,
									"libraryName": {
										"id": 189,
										"name": "AddressUpgradeable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1875,
										"src": "831:18:1"
									},
									"nodeType": "UsingForDirective",
									"src": "825:37:1",
									"typeName": {
										"id": 190,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "854:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"constant": false,
									"id": 197,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "973:9:1",
									"nodeType": "VariableDeclaration",
									"scope": 1413,
									"src": "917:65:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(uint256 => mapping(address => uint256))"
									},
									"typeName": {
										"id": 196,
										"keyType": {
											"id": 192,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "925:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "917:47:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(uint256 => mapping(address => uint256))"
										},
										"valueType": {
											"id": 195,
											"keyType": {
												"id": 193,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "944:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "936:27:1",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 194,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "955:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 203,
									"mutability": "mutable",
									"name": "_operatorApprovals",
									"nameLocation": "1092:18:1",
									"nodeType": "VariableDeclaration",
									"scope": 1413,
									"src": "1039:71:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(address => bool))"
									},
									"typeName": {
										"id": 202,
										"keyType": {
											"id": 198,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1047:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1039:44:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(address => bool))"
										},
										"valueType": {
											"id": 201,
											"keyType": {
												"id": 199,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1066:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1058:24:1",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueType": {
												"id": 200,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1077:4:1",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 205,
									"mutability": "mutable",
									"name": "_uri",
									"nameLocation": "1246:4:1",
									"nodeType": "VariableDeclaration",
									"scope": 1413,
									"src": "1231:19:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 204,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1231:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 217,
										"nodeType": "Block",
										"src": "1370:47:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 214,
															"name": "uri_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 208,
															"src": "1405:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 213,
														"name": "__ERC1155_init_unchained",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 230,
														"src": "1380:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory)"
														}
													},
													"id": 215,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1380:30:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 216,
												"nodeType": "ExpressionStatement",
												"src": "1380:30:1"
											}
										]
									},
									"documentation": {
										"id": 206,
										"nodeType": "StructuredDocumentation",
										"src": "1257:38:1",
										"text": " @dev See {_setURI}."
									},
									"id": 218,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 211,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 210,
												"name": "onlyInitializing",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 113,
												"src": "1353:16:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "1353:16:1"
										}
									],
									"name": "__ERC1155_init",
									"nameLocation": "1309:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 209,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 208,
												"mutability": "mutable",
												"name": "uri_",
												"nameLocation": "1338:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 218,
												"src": "1324:18:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 207,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1324:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1323:20:1"
									},
									"returnParameters": {
										"id": 212,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1370:0:1"
									},
									"scope": 1413,
									"src": "1300:117:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 229,
										"nodeType": "Block",
										"src": "1503:30:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 226,
															"name": "uri_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 220,
															"src": "1521:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 225,
														"name": "_setURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 741,
														"src": "1513:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory)"
														}
													},
													"id": 227,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1513:13:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 228,
												"nodeType": "ExpressionStatement",
												"src": "1513:13:1"
											}
										]
									},
									"id": 230,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 223,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 222,
												"name": "onlyInitializing",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 113,
												"src": "1486:16:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "1486:16:1"
										}
									],
									"name": "__ERC1155_init_unchained",
									"nameLocation": "1432:24:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 221,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 220,
												"mutability": "mutable",
												"name": "uri_",
												"nameLocation": "1471:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 230,
												"src": "1457:18:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 219,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1457:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1456:20:1"
									},
									"returnParameters": {
										"id": 224,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1503:0:1"
									},
									"scope": 1413,
									"src": "1423:110:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1955,
										1972
									],
									"body": {
										"id": 260,
										"nodeType": "Block",
										"src": "1730:219:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 258,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 253,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 246,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 241,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 233,
																"src": "1759:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 243,
																			"name": "IERC1155Upgradeable",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1576,
																			"src": "1779:19:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155Upgradeable_$1576_$",
																				"typeString": "type(contract IERC1155Upgradeable)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC1155Upgradeable_$1576_$",
																				"typeString": "type(contract IERC1155Upgradeable)"
																			}
																		],
																		"id": 242,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1774:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 244,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1774:25:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC1155Upgradeable_$1576",
																		"typeString": "type(contract IERC1155Upgradeable)"
																	}
																},
																"id": 245,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1774:37:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1759:52:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 252,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 247,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 233,
																"src": "1827:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 249,
																			"name": "IERC1155MetadataURIUpgradeable",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1591,
																			"src": "1847:30:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155MetadataURIUpgradeable_$1591_$",
																				"typeString": "type(contract IERC1155MetadataURIUpgradeable)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC1155MetadataURIUpgradeable_$1591_$",
																				"typeString": "type(contract IERC1155MetadataURIUpgradeable)"
																			}
																		],
																		"id": 248,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1842:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 250,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1842:36:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC1155MetadataURIUpgradeable_$1591",
																		"typeString": "type(contract IERC1155MetadataURIUpgradeable)"
																	}
																},
																"id": 251,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1842:48:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1827:63:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "1759:131:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 256,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 233,
																"src": "1930:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 254,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "1906:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC1155Upgradeable_$1413_$",
																	"typeString": "type(contract super ERC1155Upgradeable)"
																}
															},
															"id": 255,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1955,
															"src": "1906:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 257,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1906:36:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1759:183:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 240,
												"id": 259,
												"nodeType": "Return",
												"src": "1740:202:1"
											}
										]
									},
									"documentation": {
										"id": 231,
										"nodeType": "StructuredDocumentation",
										"src": "1539:56:1",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 261,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "1609:17:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 237,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 235,
												"name": "ERC165Upgradeable",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1961,
												"src": "1676:17:1"
											},
											{
												"id": 236,
												"name": "IERC165Upgradeable",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1973,
												"src": "1695:18:1"
											}
										],
										"src": "1667:47:1"
									},
									"parameters": {
										"id": 234,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 233,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "1634:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "1627:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 232,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1627:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1626:20:1"
									},
									"returnParameters": {
										"id": 240,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 239,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "1724:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 238,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1724:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1723:6:1"
									},
									"scope": 1413,
									"src": "1600:349:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1590
									],
									"body": {
										"id": 272,
										"nodeType": "Block",
										"src": "2423:28:1",
										"statements": [
											{
												"expression": {
													"id": 270,
													"name": "_uri",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 205,
													"src": "2440:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 269,
												"id": 271,
												"nodeType": "Return",
												"src": "2433:11:1"
											}
										]
									},
									"documentation": {
										"id": 262,
										"nodeType": "StructuredDocumentation",
										"src": "1955:388:1",
										"text": " @dev See {IERC1155MetadataURI-uri}.\n This implementation returns the same URI for *all* token types. It relies\n on the token type ID substitution mechanism\n https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n Clients calling this function must replace the `\\{id\\}` substring with the\n actual token type ID."
									},
									"functionSelector": "0e89341c",
									"id": 273,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "uri",
									"nameLocation": "2357:3:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 266,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2390:8:1"
									},
									"parameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 273,
												"src": "2361:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 263,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2361:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2360:9:1"
									},
									"returnParameters": {
										"id": 269,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 268,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 273,
												"src": "2408:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 267,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2408:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2407:15:1"
									},
									"scope": 1413,
									"src": "2348:103:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1514
									],
									"body": {
										"id": 300,
										"nodeType": "Block",
										"src": "2688:132:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 290,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 285,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 276,
																"src": "2706:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 288,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2725:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 287,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2717:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 286,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2717:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 289,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2717:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2706:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2061646472657373207a65726f206973206e6f7420612076616c6964206f776e6572",
															"id": 291,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2729:44:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_415a1b99e1fd4a18cf87c08995f5a9130182e8d76e9c17c497bfebaaef9265ad",
																"typeString": "literal_string \"ERC1155: address zero is not a valid owner\""
															},
															"value": "ERC1155: address zero is not a valid owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_415a1b99e1fd4a18cf87c08995f5a9130182e8d76e9c17c497bfebaaef9265ad",
																"typeString": "literal_string \"ERC1155: address zero is not a valid owner\""
															}
														],
														"id": 284,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2698:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 292,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2698:76:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 293,
												"nodeType": "ExpressionStatement",
												"src": "2698:76:1"
											},
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 294,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 197,
															"src": "2791:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(uint256 => mapping(address => uint256))"
															}
														},
														"id": 296,
														"indexExpression": {
															"id": 295,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 278,
															"src": "2801:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "2791:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 298,
													"indexExpression": {
														"id": 297,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 276,
														"src": "2805:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2791:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 283,
												"id": 299,
												"nodeType": "Return",
												"src": "2784:29:1"
											}
										]
									},
									"documentation": {
										"id": 274,
										"nodeType": "StructuredDocumentation",
										"src": "2457:131:1",
										"text": " @dev See {IERC1155-balanceOf}.\n Requirements:\n - `account` cannot be the zero address."
									},
									"functionSelector": "00fdd58e",
									"id": 301,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "2602:9:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 280,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2661:8:1"
									},
									"parameters": {
										"id": 279,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 276,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2620:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 301,
												"src": "2612:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 275,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2612:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 278,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "2637:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 301,
												"src": "2629:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 277,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2629:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2611:29:1"
									},
									"returnParameters": {
										"id": 283,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 282,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 301,
												"src": "2679:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 281,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2679:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2678:9:1"
									},
									"scope": 1413,
									"src": "2593:227:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1527
									],
									"body": {
										"id": 364,
										"nodeType": "Block",
										"src": "3150:335:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 320,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 316,
																	"name": "accounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 305,
																	"src": "3168:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																		"typeString": "address[] memory"
																	}
																},
																"id": 317,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "3168:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 318,
																	"name": "ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 308,
																	"src": "3187:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 319,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "3187:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3168:29:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a206163636f756e747320616e6420696473206c656e677468206d69736d61746368",
															"id": 321,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3199:43:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5",
																"typeString": "literal_string \"ERC1155: accounts and ids length mismatch\""
															},
															"value": "ERC1155: accounts and ids length mismatch"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5",
																"typeString": "literal_string \"ERC1155: accounts and ids length mismatch\""
															}
														],
														"id": 315,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3160:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 322,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3160:83:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 323,
												"nodeType": "ExpressionStatement",
												"src": "3160:83:1"
											},
											{
												"assignments": [
													328
												],
												"declarations": [
													{
														"constant": false,
														"id": 328,
														"mutability": "mutable",
														"name": "batchBalances",
														"nameLocation": "3271:13:1",
														"nodeType": "VariableDeclaration",
														"scope": 364,
														"src": "3254:30:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 326,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "3254:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 327,
															"nodeType": "ArrayTypeName",
															"src": "3254:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 335,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 332,
																"name": "accounts",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 305,
																"src": "3301:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																	"typeString": "address[] memory"
																}
															},
															"id": 333,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3301:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 331,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "3287:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 329,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "3291:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 330,
															"nodeType": "ArrayTypeName",
															"src": "3291:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														}
													},
													"id": 334,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3287:30:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3254:63:1"
											},
											{
												"body": {
													"id": 360,
													"nodeType": "Block",
													"src": "3374:74:1",
													"statements": [
														{
															"expression": {
																"id": 358,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 347,
																		"name": "batchBalances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 328,
																		"src": "3388:13:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 349,
																	"indexExpression": {
																		"id": 348,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 337,
																		"src": "3402:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "3388:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"baseExpression": {
																				"id": 351,
																				"name": "accounts",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 305,
																				"src": "3417:8:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																					"typeString": "address[] memory"
																				}
																			},
																			"id": 353,
																			"indexExpression": {
																				"id": 352,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 337,
																				"src": "3426:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "3417:11:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"baseExpression": {
																				"id": 354,
																				"name": "ids",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 308,
																				"src": "3430:3:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																					"typeString": "uint256[] memory"
																				}
																			},
																			"id": 356,
																			"indexExpression": {
																				"id": 355,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 337,
																				"src": "3434:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "3430:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 350,
																		"name": "balanceOf",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 301,
																		"src": "3407:9:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (address,uint256) view returns (uint256)"
																		}
																	},
																	"id": 357,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3407:30:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3388:49:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 359,
															"nodeType": "ExpressionStatement",
															"src": "3388:49:1"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 343,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 340,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 337,
														"src": "3348:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 341,
															"name": "accounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "3352:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 342,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "3352:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3348:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 361,
												"initializationExpression": {
													"assignments": [
														337
													],
													"declarations": [
														{
															"constant": false,
															"id": 337,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "3341:1:1",
															"nodeType": "VariableDeclaration",
															"scope": 361,
															"src": "3333:9:1",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 336,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "3333:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 339,
													"initialValue": {
														"hexValue": "30",
														"id": 338,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3345:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "3333:13:1"
												},
												"loopExpression": {
													"expression": {
														"id": 345,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "3369:3:1",
														"subExpression": {
															"id": 344,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 337,
															"src": "3371:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 346,
													"nodeType": "ExpressionStatement",
													"src": "3369:3:1"
												},
												"nodeType": "ForStatement",
												"src": "3328:120:1"
											},
											{
												"expression": {
													"id": 362,
													"name": "batchBalances",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 328,
													"src": "3465:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"functionReturnParameters": 314,
												"id": 363,
												"nodeType": "Return",
												"src": "3458:20:1"
											}
										]
									},
									"documentation": {
										"id": 302,
										"nodeType": "StructuredDocumentation",
										"src": "2826:146:1",
										"text": " @dev See {IERC1155-balanceOfBatch}.\n Requirements:\n - `accounts` and `ids` must have the same length."
									},
									"functionSelector": "4e1273f4",
									"id": 365,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOfBatch",
									"nameLocation": "2986:14:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 310,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3102:8:1"
									},
									"parameters": {
										"id": 309,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "accounts",
												"nameLocation": "3018:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 365,
												"src": "3001:25:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 303,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "3001:7:1",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 304,
													"nodeType": "ArrayTypeName",
													"src": "3001:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 308,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "3045:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 365,
												"src": "3028:20:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 306,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "3028:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 307,
													"nodeType": "ArrayTypeName",
													"src": "3028:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3000:49:1"
									},
									"returnParameters": {
										"id": 314,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 313,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 365,
												"src": "3128:16:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 311,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "3128:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 312,
													"nodeType": "ArrayTypeName",
													"src": "3128:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3127:18:1"
									},
									"scope": 1413,
									"src": "2977:508:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1535
									],
									"body": {
										"id": 381,
										"nodeType": "Block",
										"src": "3637:69:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 375,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1902,
																"src": "3666:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 376,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3666:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 377,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 368,
															"src": "3680:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 378,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 370,
															"src": "3690:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 374,
														"name": "_setApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1213,
														"src": "3647:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 379,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3647:52:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 380,
												"nodeType": "ExpressionStatement",
												"src": "3647:52:1"
											}
										]
									},
									"documentation": {
										"id": 366,
										"nodeType": "StructuredDocumentation",
										"src": "3491:57:1",
										"text": " @dev See {IERC1155-setApprovalForAll}."
									},
									"functionSelector": "a22cb465",
									"id": 382,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "3562:17:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 372,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3628:8:1"
									},
									"parameters": {
										"id": 371,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 368,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3588:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 382,
												"src": "3580:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 367,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3580:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 370,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "3603:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 382,
												"src": "3598:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 369,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3598:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3579:33:1"
									},
									"returnParameters": {
										"id": 373,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3637:0:1"
									},
									"scope": 1413,
									"src": "3553:153:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1545
									],
									"body": {
										"id": 399,
										"nodeType": "Block",
										"src": "3878:61:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 393,
															"name": "_operatorApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 203,
															"src": "3895:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																"typeString": "mapping(address => mapping(address => bool))"
															}
														},
														"id": 395,
														"indexExpression": {
															"id": 394,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 385,
															"src": "3914:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3895:27:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 397,
													"indexExpression": {
														"id": 396,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 387,
														"src": "3923:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3895:37:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 392,
												"id": 398,
												"nodeType": "Return",
												"src": "3888:44:1"
											}
										]
									},
									"documentation": {
										"id": 383,
										"nodeType": "StructuredDocumentation",
										"src": "3712:56:1",
										"text": " @dev See {IERC1155-isApprovedForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 400,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "3782:16:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 389,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3854:8:1"
									},
									"parameters": {
										"id": 388,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 385,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3807:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 400,
												"src": "3799:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 384,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3799:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 387,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3824:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 400,
												"src": "3816:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 386,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3816:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3798:35:1"
									},
									"returnParameters": {
										"id": 392,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 391,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 400,
												"src": "3872:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 390,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3872:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3871:6:1"
									},
									"scope": 1413,
									"src": "3773:166:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1559
									],
									"body": {
										"id": 437,
										"nodeType": "Block",
										"src": "4175:225:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 425,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 419,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 416,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 403,
																	"src": "4206:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 417,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1902,
																		"src": "4214:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 418,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4214:12:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "4206:20:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 421,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 403,
																		"src": "4247:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 422,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1902,
																			"src": "4253:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 423,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4253:12:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 420,
																	"name": "isApprovedForAll",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 400,
																	"src": "4230:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																		"typeString": "function (address,address) view returns (bool)"
																	}
																},
																"id": 424,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4230:36:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "4206:60:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2063616c6c6572206973206e6f7420746f6b656e206f776e6572206f7220617070726f766564",
															"id": 426,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4280:48:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47c72b42072ed6c647dec3a0a5c88bec44d3e901c64659bff94ecce0a0323156",
																"typeString": "literal_string \"ERC1155: caller is not token owner or approved\""
															},
															"value": "ERC1155: caller is not token owner or approved"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_47c72b42072ed6c647dec3a0a5c88bec44d3e901c64659bff94ecce0a0323156",
																"typeString": "literal_string \"ERC1155: caller is not token owner or approved\""
															}
														],
														"id": 415,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4185:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 427,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4185:153:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 428,
												"nodeType": "ExpressionStatement",
												"src": "4185:153:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 430,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 403,
															"src": "4366:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 431,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 405,
															"src": "4372:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 432,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 407,
															"src": "4376:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 433,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 409,
															"src": "4380:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 434,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 411,
															"src": "4388:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 429,
														"name": "_safeTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 595,
														"src": "4348:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,uint256,bytes memory)"
														}
													},
													"id": 435,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4348:45:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 436,
												"nodeType": "ExpressionStatement",
												"src": "4348:45:1"
											}
										]
									},
									"documentation": {
										"id": 401,
										"nodeType": "StructuredDocumentation",
										"src": "3945:56:1",
										"text": " @dev See {IERC1155-safeTransferFrom}."
									},
									"functionSelector": "f242432a",
									"id": 438,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "4015:16:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 413,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4166:8:1"
									},
									"parameters": {
										"id": 412,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 403,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4049:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 438,
												"src": "4041:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 402,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4041:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 405,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4071:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 438,
												"src": "4063:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 404,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4063:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 407,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "4091:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 438,
												"src": "4083:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 406,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4083:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 409,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4111:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 438,
												"src": "4103:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 408,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4103:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 411,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4140:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 438,
												"src": "4127:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 410,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4127:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4031:119:1"
									},
									"returnParameters": {
										"id": 414,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4175:0:1"
									},
									"scope": 1413,
									"src": "4006:394:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1575
									],
									"body": {
										"id": 477,
										"nodeType": "Block",
										"src": "4666:232:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 465,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 459,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 456,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 441,
																	"src": "4697:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 457,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1902,
																		"src": "4705:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 458,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4705:12:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "4697:20:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 461,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 441,
																		"src": "4738:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 462,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1902,
																			"src": "4744:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 463,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4744:12:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 460,
																	"name": "isApprovedForAll",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 400,
																	"src": "4721:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																		"typeString": "function (address,address) view returns (bool)"
																	}
																},
																"id": 464,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4721:36:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "4697:60:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2063616c6c6572206973206e6f7420746f6b656e206f776e6572206f7220617070726f766564",
															"id": 466,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4771:48:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47c72b42072ed6c647dec3a0a5c88bec44d3e901c64659bff94ecce0a0323156",
																"typeString": "literal_string \"ERC1155: caller is not token owner or approved\""
															},
															"value": "ERC1155: caller is not token owner or approved"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_47c72b42072ed6c647dec3a0a5c88bec44d3e901c64659bff94ecce0a0323156",
																"typeString": "literal_string \"ERC1155: caller is not token owner or approved\""
															}
														],
														"id": 455,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4676:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 467,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4676:153:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 468,
												"nodeType": "ExpressionStatement",
												"src": "4676:153:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 470,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 441,
															"src": "4862:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 471,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 443,
															"src": "4868:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 472,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 446,
															"src": "4872:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 473,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 449,
															"src": "4877:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 474,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 451,
															"src": "4886:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 469,
														"name": "_safeBatchTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 730,
														"src": "4839:22:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 475,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4839:52:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 476,
												"nodeType": "ExpressionStatement",
												"src": "4839:52:1"
											}
										]
									},
									"documentation": {
										"id": 439,
										"nodeType": "StructuredDocumentation",
										"src": "4406:61:1",
										"text": " @dev See {IERC1155-safeBatchTransferFrom}."
									},
									"functionSelector": "2eb2c2d6",
									"id": 478,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeBatchTransferFrom",
									"nameLocation": "4481:21:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 453,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4657:8:1"
									},
									"parameters": {
										"id": 452,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 441,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4520:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 478,
												"src": "4512:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 440,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4512:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 443,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4542:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 478,
												"src": "4534:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 442,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4534:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 446,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "4571:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 478,
												"src": "4554:20:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 444,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4554:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 445,
													"nodeType": "ArrayTypeName",
													"src": "4554:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 449,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "4601:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 478,
												"src": "4584:24:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 447,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4584:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 448,
													"nodeType": "ArrayTypeName",
													"src": "4584:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 451,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4631:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 478,
												"src": "4618:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 450,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4618:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4502:139:1"
									},
									"returnParameters": {
										"id": 454,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4666:0:1"
									},
									"scope": 1413,
									"src": "4472:426:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 594,
										"nodeType": "Block",
										"src": "5511:784:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 498,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 493,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 483,
																"src": "5529:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 496,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5543:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 495,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5535:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 494,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "5535:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 497,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5535:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "5529:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 499,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5547:39:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d",
																"typeString": "literal_string \"ERC1155: transfer to the zero address\""
															},
															"value": "ERC1155: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d",
																"typeString": "literal_string \"ERC1155: transfer to the zero address\""
															}
														],
														"id": 492,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5521:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 500,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5521:66:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 501,
												"nodeType": "ExpressionStatement",
												"src": "5521:66:1"
											},
											{
												"assignments": [
													503
												],
												"declarations": [
													{
														"constant": false,
														"id": 503,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "5606:8:1",
														"nodeType": "VariableDeclaration",
														"scope": 594,
														"src": "5598:16:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 502,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5598:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 506,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 504,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1902,
														"src": "5617:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 505,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5617:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5598:31:1"
											},
											{
												"assignments": [
													511
												],
												"declarations": [
													{
														"constant": false,
														"id": 511,
														"mutability": "mutable",
														"name": "ids",
														"nameLocation": "5656:3:1",
														"nodeType": "VariableDeclaration",
														"scope": 594,
														"src": "5639:20:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 509,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "5639:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 510,
															"nodeType": "ArrayTypeName",
															"src": "5639:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 515,
												"initialValue": {
													"arguments": [
														{
															"id": 513,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 485,
															"src": "5680:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 512,
														"name": "_asSingletonArray",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1407,
														"src": "5662:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														}
													},
													"id": 514,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5662:21:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5639:44:1"
											},
											{
												"assignments": [
													520
												],
												"declarations": [
													{
														"constant": false,
														"id": 520,
														"mutability": "mutable",
														"name": "amounts",
														"nameLocation": "5710:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 594,
														"src": "5693:24:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 518,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "5693:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 519,
															"nodeType": "ArrayTypeName",
															"src": "5693:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 524,
												"initialValue": {
													"arguments": [
														{
															"id": 522,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 487,
															"src": "5738:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 521,
														"name": "_asSingletonArray",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1407,
														"src": "5720:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														}
													},
													"id": 523,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5720:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5693:52:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 526,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 503,
															"src": "5777:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 527,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 481,
															"src": "5787:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 528,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 483,
															"src": "5793:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 529,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 511,
															"src": "5797:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 530,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 520,
															"src": "5802:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 531,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 489,
															"src": "5811:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 525,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1232,
														"src": "5756:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 532,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5756:60:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 533,
												"nodeType": "ExpressionStatement",
												"src": "5756:60:1"
											},
											{
												"assignments": [
													535
												],
												"declarations": [
													{
														"constant": false,
														"id": 535,
														"mutability": "mutable",
														"name": "fromBalance",
														"nameLocation": "5835:11:1",
														"nodeType": "VariableDeclaration",
														"scope": 594,
														"src": "5827:19:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 534,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5827:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 541,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 536,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 197,
															"src": "5849:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(uint256 => mapping(address => uint256))"
															}
														},
														"id": 538,
														"indexExpression": {
															"id": 537,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 485,
															"src": "5859:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "5849:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 540,
													"indexExpression": {
														"id": 539,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 481,
														"src": "5863:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5849:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5827:41:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 545,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 543,
																"name": "fromBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 535,
																"src": "5886:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 544,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 487,
																"src": "5901:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5886:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a20696e73756666696369656e742062616c616e636520666f72207472616e73666572",
															"id": 546,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5909:44:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf",
																"typeString": "literal_string \"ERC1155: insufficient balance for transfer\""
															},
															"value": "ERC1155: insufficient balance for transfer"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf",
																"typeString": "literal_string \"ERC1155: insufficient balance for transfer\""
															}
														],
														"id": 542,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5878:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 547,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5878:76:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 548,
												"nodeType": "ExpressionStatement",
												"src": "5878:76:1"
											},
											{
												"id": 559,
												"nodeType": "UncheckedBlock",
												"src": "5964:77:1",
												"statements": [
													{
														"expression": {
															"id": 557,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 549,
																		"name": "_balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 197,
																		"src": "5988:9:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(uint256 => mapping(address => uint256))"
																		}
																	},
																	"id": 552,
																	"indexExpression": {
																		"id": 550,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 485,
																		"src": "5998:2:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5988:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 553,
																"indexExpression": {
																	"id": 551,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 481,
																	"src": "6002:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "5988:19:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 556,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 554,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 535,
																	"src": "6010:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 555,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 487,
																	"src": "6024:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6010:20:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5988:42:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 558,
														"nodeType": "ExpressionStatement",
														"src": "5988:42:1"
													}
												]
											},
											{
												"expression": {
													"id": 566,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 560,
																"name": "_balances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 197,
																"src": "6050:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(uint256 => mapping(address => uint256))"
																}
															},
															"id": 563,
															"indexExpression": {
																"id": 561,
																"name": "id",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 485,
																"src": "6060:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "6050:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 564,
														"indexExpression": {
															"id": 562,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 483,
															"src": "6064:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6050:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 565,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 487,
														"src": "6071:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6050:27:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 567,
												"nodeType": "ExpressionStatement",
												"src": "6050:27:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 569,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 503,
															"src": "6108:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 570,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 481,
															"src": "6118:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 571,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 483,
															"src": "6124:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 572,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 485,
															"src": "6128:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 573,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 487,
															"src": "6132:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 568,
														"name": "TransferSingle",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1473,
														"src": "6093:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256)"
														}
													},
													"id": 574,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6093:46:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 575,
												"nodeType": "EmitStatement",
												"src": "6088:51:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 577,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 503,
															"src": "6170:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 578,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 481,
															"src": "6180:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 579,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 483,
															"src": "6186:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 580,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 511,
															"src": "6190:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 581,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 520,
															"src": "6195:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 582,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 489,
															"src": "6204:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 576,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1251,
														"src": "6150:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 583,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6150:59:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 584,
												"nodeType": "ExpressionStatement",
												"src": "6150:59:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 586,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 503,
															"src": "6251:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 587,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 481,
															"src": "6261:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 588,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 483,
															"src": "6267:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 589,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 485,
															"src": "6271:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 590,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 487,
															"src": "6275:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 591,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 489,
															"src": "6283:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 585,
														"name": "_doSafeTransferAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1314,
														"src": "6220:30:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256,bytes memory)"
														}
													},
													"id": 592,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6220:68:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 593,
												"nodeType": "ExpressionStatement",
												"src": "6220:68:1"
											}
										]
									},
									"documentation": {
										"id": 479,
										"nodeType": "StructuredDocumentation",
										"src": "4904:439:1",
										"text": " @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - `from` must have a balance of tokens of type `id` of at least `amount`.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."
									},
									"id": 595,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransferFrom",
									"nameLocation": "5357:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 481,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5392:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 595,
												"src": "5384:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 480,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5384:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 483,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5414:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 595,
												"src": "5406:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 482,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5406:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 485,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "5434:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 595,
												"src": "5426:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 484,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5426:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5454:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 595,
												"src": "5446:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 486,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5446:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 489,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5483:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 595,
												"src": "5470:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 488,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5470:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5374:119:1"
									},
									"returnParameters": {
										"id": 491,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5511:0:1"
									},
									"scope": 1413,
									"src": "5348:947:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 729,
										"nodeType": "Block",
										"src": "6829:927:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 616,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 612,
																	"name": "ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 603,
																	"src": "6847:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 613,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "6847:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 614,
																	"name": "amounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 606,
																	"src": "6861:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 615,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "6861:14:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6847:28:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2069647320616e6420616d6f756e7473206c656e677468206d69736d61746368",
															"id": 617,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6877:42:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																"typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
															},
															"value": "ERC1155: ids and amounts length mismatch"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																"typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
															}
														],
														"id": 611,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6839:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 618,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6839:81:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 619,
												"nodeType": "ExpressionStatement",
												"src": "6839:81:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 626,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 621,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 600,
																"src": "6938:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 624,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6952:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 623,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6944:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 622,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "6944:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 625,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6944:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "6938:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 627,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6956:39:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d",
																"typeString": "literal_string \"ERC1155: transfer to the zero address\""
															},
															"value": "ERC1155: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d",
																"typeString": "literal_string \"ERC1155: transfer to the zero address\""
															}
														],
														"id": 620,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6930:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 628,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6930:66:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 629,
												"nodeType": "ExpressionStatement",
												"src": "6930:66:1"
											},
											{
												"assignments": [
													631
												],
												"declarations": [
													{
														"constant": false,
														"id": 631,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "7015:8:1",
														"nodeType": "VariableDeclaration",
														"scope": 729,
														"src": "7007:16:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 630,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "7007:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 634,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 632,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1902,
														"src": "7026:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 633,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7026:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7007:31:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 636,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 631,
															"src": "7070:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 637,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 598,
															"src": "7080:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 638,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 600,
															"src": "7086:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 639,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 603,
															"src": "7090:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 640,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 606,
															"src": "7095:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 641,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 608,
															"src": "7104:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 635,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1232,
														"src": "7049:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 642,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7049:60:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 643,
												"nodeType": "ExpressionStatement",
												"src": "7049:60:1"
											},
											{
												"body": {
													"id": 701,
													"nodeType": "Block",
													"src": "7161:370:1",
													"statements": [
														{
															"assignments": [
																656
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 656,
																	"mutability": "mutable",
																	"name": "id",
																	"nameLocation": "7183:2:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 701,
																	"src": "7175:10:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 655,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "7175:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 660,
															"initialValue": {
																"baseExpression": {
																	"id": 657,
																	"name": "ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 603,
																	"src": "7188:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 659,
																"indexExpression": {
																	"id": 658,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 645,
																	"src": "7192:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7188:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "7175:19:1"
														},
														{
															"assignments": [
																662
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 662,
																	"mutability": "mutable",
																	"name": "amount",
																	"nameLocation": "7216:6:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 701,
																	"src": "7208:14:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 661,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "7208:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 666,
															"initialValue": {
																"baseExpression": {
																	"id": 663,
																	"name": "amounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 606,
																	"src": "7225:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 665,
																"indexExpression": {
																	"id": 664,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 645,
																	"src": "7233:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7225:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "7208:27:1"
														},
														{
															"assignments": [
																668
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 668,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "7258:11:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 701,
																	"src": "7250:19:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 667,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "7250:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 674,
															"initialValue": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 669,
																		"name": "_balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 197,
																		"src": "7272:9:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(uint256 => mapping(address => uint256))"
																		}
																	},
																	"id": 671,
																	"indexExpression": {
																		"id": 670,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 656,
																		"src": "7282:2:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "7272:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 673,
																"indexExpression": {
																	"id": 672,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 598,
																	"src": "7286:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7272:19:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "7250:41:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 678,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 676,
																			"name": "fromBalance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 668,
																			"src": "7313:11:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"id": 677,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 662,
																			"src": "7328:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7313:21:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "455243313135353a20696e73756666696369656e742062616c616e636520666f72207472616e73666572",
																		"id": 679,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7336:44:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf",
																			"typeString": "literal_string \"ERC1155: insufficient balance for transfer\""
																		},
																		"value": "ERC1155: insufficient balance for transfer"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf",
																			"typeString": "literal_string \"ERC1155: insufficient balance for transfer\""
																		}
																	],
																	"id": 675,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "7305:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 680,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7305:76:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 681,
															"nodeType": "ExpressionStatement",
															"src": "7305:76:1"
														},
														{
															"id": 692,
															"nodeType": "UncheckedBlock",
															"src": "7395:85:1",
															"statements": [
																{
																	"expression": {
																		"id": 690,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"baseExpression": {
																					"id": 682,
																					"name": "_balances",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 197,
																					"src": "7423:9:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																						"typeString": "mapping(uint256 => mapping(address => uint256))"
																					}
																				},
																				"id": 685,
																				"indexExpression": {
																					"id": 683,
																					"name": "id",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 656,
																					"src": "7433:2:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "7423:13:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 686,
																			"indexExpression": {
																				"id": 684,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 598,
																				"src": "7437:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7423:19:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 689,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 687,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 668,
																				"src": "7445:11:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 688,
																				"name": "amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 662,
																				"src": "7459:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7445:20:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7423:42:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 691,
																	"nodeType": "ExpressionStatement",
																	"src": "7423:42:1"
																}
															]
														},
														{
															"expression": {
																"id": 699,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 693,
																			"name": "_balances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 197,
																			"src": "7493:9:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(uint256 => mapping(address => uint256))"
																			}
																		},
																		"id": 696,
																		"indexExpression": {
																			"id": 694,
																			"name": "id",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 656,
																			"src": "7503:2:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "7493:13:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 697,
																	"indexExpression": {
																		"id": 695,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 600,
																		"src": "7507:2:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "7493:17:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 698,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 662,
																	"src": "7514:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7493:27:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 700,
															"nodeType": "ExpressionStatement",
															"src": "7493:27:1"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 651,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 648,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 645,
														"src": "7140:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 649,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 603,
															"src": "7144:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 650,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "7144:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7140:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 702,
												"initializationExpression": {
													"assignments": [
														645
													],
													"declarations": [
														{
															"constant": false,
															"id": 645,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "7133:1:1",
															"nodeType": "VariableDeclaration",
															"scope": 702,
															"src": "7125:9:1",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 644,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "7125:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 647,
													"initialValue": {
														"hexValue": "30",
														"id": 646,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7137:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "7125:13:1"
												},
												"loopExpression": {
													"expression": {
														"id": 653,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "7156:3:1",
														"subExpression": {
															"id": 652,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 645,
															"src": "7158:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 654,
													"nodeType": "ExpressionStatement",
													"src": "7156:3:1"
												},
												"nodeType": "ForStatement",
												"src": "7120:411:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 704,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 631,
															"src": "7560:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 705,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 598,
															"src": "7570:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 706,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 600,
															"src": "7576:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 707,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 603,
															"src": "7580:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 708,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 606,
															"src": "7585:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														],
														"id": 703,
														"name": "TransferBatch",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1488,
														"src": "7546:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory)"
														}
													},
													"id": 709,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7546:47:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 710,
												"nodeType": "EmitStatement",
												"src": "7541:52:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 712,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 631,
															"src": "7624:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 713,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 598,
															"src": "7634:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 714,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 600,
															"src": "7640:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 715,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 603,
															"src": "7644:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 716,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 606,
															"src": "7649:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 717,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 608,
															"src": "7658:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 711,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1251,
														"src": "7604:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 718,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7604:59:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 719,
												"nodeType": "ExpressionStatement",
												"src": "7604:59:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 721,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 631,
															"src": "7710:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 722,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 598,
															"src": "7720:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 723,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 600,
															"src": "7726:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 724,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 603,
															"src": "7730:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 725,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 606,
															"src": "7735:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 726,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 608,
															"src": "7744:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 720,
														"name": "_doSafeBatchTransferAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1379,
														"src": "7674:35:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 727,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7674:75:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 728,
												"nodeType": "ExpressionStatement",
												"src": "7674:75:1"
											}
										]
									},
									"documentation": {
										"id": 596,
										"nodeType": "StructuredDocumentation",
										"src": "6301:335:1",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_safeTransferFrom}.\n Emits a {TransferBatch} event.\n Requirements:\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."
									},
									"id": 730,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeBatchTransferFrom",
									"nameLocation": "6650:22:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 609,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 598,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6690:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 730,
												"src": "6682:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 597,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6682:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 600,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6712:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 730,
												"src": "6704:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 599,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6704:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 603,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "6741:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 730,
												"src": "6724:20:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 601,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "6724:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 602,
													"nodeType": "ArrayTypeName",
													"src": "6724:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 606,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "6771:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 730,
												"src": "6754:24:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 604,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "6754:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 605,
													"nodeType": "ArrayTypeName",
													"src": "6754:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 608,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6801:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 730,
												"src": "6788:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 607,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6788:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6672:139:1"
									},
									"returnParameters": {
										"id": 610,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6829:0:1"
									},
									"scope": 1413,
									"src": "6641:1115:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 740,
										"nodeType": "Block",
										"src": "8635:30:1",
										"statements": [
											{
												"expression": {
													"id": 738,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 736,
														"name": "_uri",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 205,
														"src": "8645:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 737,
														"name": "newuri",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 733,
														"src": "8652:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "8645:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 739,
												"nodeType": "ExpressionStatement",
												"src": "8645:13:1"
											}
										]
									},
									"documentation": {
										"id": 731,
										"nodeType": "StructuredDocumentation",
										"src": "7762:812:1",
										"text": " @dev Sets a new URI for all token types, by relying on the token type ID\n substitution mechanism\n https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n By this mechanism, any occurrence of the `\\{id\\}` substring in either the\n URI or any of the amounts in the JSON file at said URI will be replaced by\n clients with the token type ID.\n For example, the `https://token-cdn-domain/\\{id\\}.json` URI would be\n interpreted by clients as\n `https://token-cdn-domain/000000000000000000000000000000000000000000000000000000000004cce0.json`\n for token type ID 0x4cce0.\n See {uri}.\n Because these URIs cannot be meaningfully represented by the {URI} event,\n this function emits no events."
									},
									"id": 741,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setURI",
									"nameLocation": "8588:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 734,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 733,
												"mutability": "mutable",
												"name": "newuri",
												"nameLocation": "8610:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 741,
												"src": "8596:20:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 732,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8596:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8595:22:1"
									},
									"returnParameters": {
										"id": 735,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8635:0:1"
									},
									"scope": 1413,
									"src": "8579:86:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 841,
										"nodeType": "Block",
										"src": "9167:580:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 759,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 754,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 744,
																"src": "9185:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 757,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9199:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 756,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9191:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 755,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9191:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 758,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9191:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "9185:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 760,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9203:35:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2",
																"typeString": "literal_string \"ERC1155: mint to the zero address\""
															},
															"value": "ERC1155: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2",
																"typeString": "literal_string \"ERC1155: mint to the zero address\""
															}
														],
														"id": 753,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9177:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 761,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9177:62:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 762,
												"nodeType": "ExpressionStatement",
												"src": "9177:62:1"
											},
											{
												"assignments": [
													764
												],
												"declarations": [
													{
														"constant": false,
														"id": 764,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "9258:8:1",
														"nodeType": "VariableDeclaration",
														"scope": 841,
														"src": "9250:16:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 763,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "9250:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 767,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 765,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1902,
														"src": "9269:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 766,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9269:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9250:31:1"
											},
											{
												"assignments": [
													772
												],
												"declarations": [
													{
														"constant": false,
														"id": 772,
														"mutability": "mutable",
														"name": "ids",
														"nameLocation": "9308:3:1",
														"nodeType": "VariableDeclaration",
														"scope": 841,
														"src": "9291:20:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 770,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "9291:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 771,
															"nodeType": "ArrayTypeName",
															"src": "9291:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 776,
												"initialValue": {
													"arguments": [
														{
															"id": 774,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 746,
															"src": "9332:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 773,
														"name": "_asSingletonArray",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1407,
														"src": "9314:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														}
													},
													"id": 775,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9314:21:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9291:44:1"
											},
											{
												"assignments": [
													781
												],
												"declarations": [
													{
														"constant": false,
														"id": 781,
														"mutability": "mutable",
														"name": "amounts",
														"nameLocation": "9362:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 841,
														"src": "9345:24:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 779,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "9345:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 780,
															"nodeType": "ArrayTypeName",
															"src": "9345:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 785,
												"initialValue": {
													"arguments": [
														{
															"id": 783,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 748,
															"src": "9390:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 782,
														"name": "_asSingletonArray",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1407,
														"src": "9372:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														}
													},
													"id": 784,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9372:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9345:52:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 787,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 764,
															"src": "9429:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 790,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9447:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 789,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9439:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 788,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9439:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 791,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9439:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 792,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 744,
															"src": "9451:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 793,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 772,
															"src": "9455:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 794,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 781,
															"src": "9460:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 795,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 750,
															"src": "9469:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 786,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1232,
														"src": "9408:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 796,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9408:66:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 797,
												"nodeType": "ExpressionStatement",
												"src": "9408:66:1"
											},
											{
												"expression": {
													"id": 804,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 798,
																"name": "_balances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 197,
																"src": "9485:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(uint256 => mapping(address => uint256))"
																}
															},
															"id": 801,
															"indexExpression": {
																"id": 799,
																"name": "id",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 746,
																"src": "9495:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9485:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 802,
														"indexExpression": {
															"id": 800,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 744,
															"src": "9499:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9485:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 803,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 748,
														"src": "9506:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9485:27:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 805,
												"nodeType": "ExpressionStatement",
												"src": "9485:27:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 807,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 764,
															"src": "9542:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 810,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9560:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 809,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9552:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 808,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9552:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 811,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9552:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 812,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 744,
															"src": "9564:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 813,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 746,
															"src": "9568:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 814,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 748,
															"src": "9572:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 806,
														"name": "TransferSingle",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1473,
														"src": "9527:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256)"
														}
													},
													"id": 815,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9527:52:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 816,
												"nodeType": "EmitStatement",
												"src": "9522:57:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 818,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 764,
															"src": "9610:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 821,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9628:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 820,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9620:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 819,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9620:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 822,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9620:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 823,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 744,
															"src": "9632:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 824,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 772,
															"src": "9636:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 825,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 781,
															"src": "9641:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 826,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 750,
															"src": "9650:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 817,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1251,
														"src": "9590:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 827,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9590:65:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 828,
												"nodeType": "ExpressionStatement",
												"src": "9590:65:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 830,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 764,
															"src": "9697:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 833,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9715:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 832,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9707:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 831,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9707:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 834,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9707:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 835,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 744,
															"src": "9719:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 836,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 746,
															"src": "9723:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 837,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 748,
															"src": "9727:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 838,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 750,
															"src": "9735:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 829,
														"name": "_doSafeTransferAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1314,
														"src": "9666:30:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256,bytes memory)"
														}
													},
													"id": 839,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9666:74:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 840,
												"nodeType": "ExpressionStatement",
												"src": "9666:74:1"
											}
										]
									},
									"documentation": {
										"id": 742,
										"nodeType": "StructuredDocumentation",
										"src": "8671:362:1",
										"text": " @dev Creates `amount` tokens of token type `id`, and assigns them to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."
									},
									"id": 842,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "9047:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 751,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 744,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "9070:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 842,
												"src": "9062:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 743,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9062:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 746,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "9090:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 842,
												"src": "9082:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 745,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9082:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 748,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "9110:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 842,
												"src": "9102:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 747,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9102:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 750,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "9139:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 842,
												"src": "9126:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 749,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9126:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9052:97:1"
									},
									"returnParameters": {
										"id": 752,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9167:0:1"
									},
									"scope": 1413,
									"src": "9038:709:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 952,
										"nodeType": "Block",
										"src": "10291:637:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 862,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 857,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 845,
																"src": "10309:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 860,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10323:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 859,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10315:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 858,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10315:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 861,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10315:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10309:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 863,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10327:35:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2",
																"typeString": "literal_string \"ERC1155: mint to the zero address\""
															},
															"value": "ERC1155: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2",
																"typeString": "literal_string \"ERC1155: mint to the zero address\""
															}
														],
														"id": 856,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10301:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 864,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10301:62:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 865,
												"nodeType": "ExpressionStatement",
												"src": "10301:62:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 871,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 867,
																	"name": "ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 848,
																	"src": "10381:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 868,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "10381:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 869,
																	"name": "amounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 851,
																	"src": "10395:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 870,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "10395:14:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10381:28:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2069647320616e6420616d6f756e7473206c656e677468206d69736d61746368",
															"id": 872,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10411:42:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																"typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
															},
															"value": "ERC1155: ids and amounts length mismatch"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																"typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
															}
														],
														"id": 866,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10373:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 873,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10373:81:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 874,
												"nodeType": "ExpressionStatement",
												"src": "10373:81:1"
											},
											{
												"assignments": [
													876
												],
												"declarations": [
													{
														"constant": false,
														"id": 876,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "10473:8:1",
														"nodeType": "VariableDeclaration",
														"scope": 952,
														"src": "10465:16:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 875,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "10465:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 879,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 877,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1902,
														"src": "10484:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 878,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10484:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10465:31:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 881,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 876,
															"src": "10528:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 884,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10546:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 883,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10538:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 882,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10538:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 885,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10538:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 886,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 845,
															"src": "10550:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 887,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 848,
															"src": "10554:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 888,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 851,
															"src": "10559:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 889,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 853,
															"src": "10568:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 880,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1232,
														"src": "10507:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 890,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10507:66:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 891,
												"nodeType": "ExpressionStatement",
												"src": "10507:66:1"
											},
											{
												"body": {
													"id": 915,
													"nodeType": "Block",
													"src": "10625:60:1",
													"statements": [
														{
															"expression": {
																"id": 913,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 903,
																			"name": "_balances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 197,
																			"src": "10639:9:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(uint256 => mapping(address => uint256))"
																			}
																		},
																		"id": 908,
																		"indexExpression": {
																			"baseExpression": {
																				"id": 904,
																				"name": "ids",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 848,
																				"src": "10649:3:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																					"typeString": "uint256[] memory"
																				}
																			},
																			"id": 906,
																			"indexExpression": {
																				"id": 905,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 893,
																				"src": "10653:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "10649:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "10639:17:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 909,
																	"indexExpression": {
																		"id": 907,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 845,
																		"src": "10657:2:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "10639:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 910,
																		"name": "amounts",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 851,
																		"src": "10664:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 912,
																	"indexExpression": {
																		"id": 911,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 893,
																		"src": "10672:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "10664:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10639:35:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 914,
															"nodeType": "ExpressionStatement",
															"src": "10639:35:1"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 899,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 896,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 893,
														"src": "10604:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 897,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 848,
															"src": "10608:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 898,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "10608:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10604:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 916,
												"initializationExpression": {
													"assignments": [
														893
													],
													"declarations": [
														{
															"constant": false,
															"id": 893,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "10597:1:1",
															"nodeType": "VariableDeclaration",
															"scope": 916,
															"src": "10589:9:1",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 892,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "10589:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 895,
													"initialValue": {
														"hexValue": "30",
														"id": 894,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10601:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "10589:13:1"
												},
												"loopExpression": {
													"expression": {
														"id": 901,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "10620:3:1",
														"subExpression": {
															"id": 900,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 893,
															"src": "10620:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 902,
													"nodeType": "ExpressionStatement",
													"src": "10620:3:1"
												},
												"nodeType": "ForStatement",
												"src": "10584:101:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 918,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 876,
															"src": "10714:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 921,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10732:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 920,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10724:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 919,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10724:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 922,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10724:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 923,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 845,
															"src": "10736:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 924,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 848,
															"src": "10740:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 925,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 851,
															"src": "10745:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														],
														"id": 917,
														"name": "TransferBatch",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1488,
														"src": "10700:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory)"
														}
													},
													"id": 926,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10700:53:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 927,
												"nodeType": "EmitStatement",
												"src": "10695:58:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 929,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 876,
															"src": "10784:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 932,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10802:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 931,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10794:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 930,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10794:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 933,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10794:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 934,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 845,
															"src": "10806:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 935,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 848,
															"src": "10810:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 936,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 851,
															"src": "10815:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 937,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 853,
															"src": "10824:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 928,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1251,
														"src": "10764:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 938,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10764:65:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 939,
												"nodeType": "ExpressionStatement",
												"src": "10764:65:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 941,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 876,
															"src": "10876:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 944,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10894:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 943,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10886:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 942,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10886:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 945,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10886:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 946,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 845,
															"src": "10898:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 947,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 848,
															"src": "10902:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 948,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 851,
															"src": "10907:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 949,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 853,
															"src": "10916:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 940,
														"name": "_doSafeBatchTransferAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1379,
														"src": "10840:35:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 950,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10840:81:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 951,
												"nodeType": "ExpressionStatement",
												"src": "10840:81:1"
											}
										]
									},
									"documentation": {
										"id": 843,
										"nodeType": "StructuredDocumentation",
										"src": "9753:379:1",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_mint}.\n Emits a {TransferBatch} event.\n Requirements:\n - `ids` and `amounts` must have the same length.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."
									},
									"id": 953,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mintBatch",
									"nameLocation": "10146:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 854,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 845,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "10174:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 953,
												"src": "10166:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 844,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10166:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 848,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "10203:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 953,
												"src": "10186:20:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 846,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "10186:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 847,
													"nodeType": "ArrayTypeName",
													"src": "10186:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 851,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "10233:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 953,
												"src": "10216:24:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 849,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "10216:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 850,
													"nodeType": "ArrayTypeName",
													"src": "10216:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 853,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "10263:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 953,
												"src": "10250:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 852,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "10250:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10156:117:1"
									},
									"returnParameters": {
										"id": 855,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10291:0:1"
									},
									"scope": 1413,
									"src": "10137:791:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1057,
										"nodeType": "Block",
										"src": "11318:682:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 969,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 964,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 956,
																"src": "11336:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 967,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11352:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 966,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11344:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 965,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "11344:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 968,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11344:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "11336:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 970,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11356:37:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a",
																"typeString": "literal_string \"ERC1155: burn from the zero address\""
															},
															"value": "ERC1155: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a",
																"typeString": "literal_string \"ERC1155: burn from the zero address\""
															}
														],
														"id": 963,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11328:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 971,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11328:66:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 972,
												"nodeType": "ExpressionStatement",
												"src": "11328:66:1"
											},
											{
												"assignments": [
													974
												],
												"declarations": [
													{
														"constant": false,
														"id": 974,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "11413:8:1",
														"nodeType": "VariableDeclaration",
														"scope": 1057,
														"src": "11405:16:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 973,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "11405:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 977,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 975,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1902,
														"src": "11424:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 976,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11424:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11405:31:1"
											},
											{
												"assignments": [
													982
												],
												"declarations": [
													{
														"constant": false,
														"id": 982,
														"mutability": "mutable",
														"name": "ids",
														"nameLocation": "11463:3:1",
														"nodeType": "VariableDeclaration",
														"scope": 1057,
														"src": "11446:20:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 980,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "11446:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 981,
															"nodeType": "ArrayTypeName",
															"src": "11446:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 986,
												"initialValue": {
													"arguments": [
														{
															"id": 984,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 958,
															"src": "11487:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 983,
														"name": "_asSingletonArray",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1407,
														"src": "11469:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														}
													},
													"id": 985,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11469:21:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11446:44:1"
											},
											{
												"assignments": [
													991
												],
												"declarations": [
													{
														"constant": false,
														"id": 991,
														"mutability": "mutable",
														"name": "amounts",
														"nameLocation": "11517:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 1057,
														"src": "11500:24:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 989,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "11500:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 990,
															"nodeType": "ArrayTypeName",
															"src": "11500:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 995,
												"initialValue": {
													"arguments": [
														{
															"id": 993,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 960,
															"src": "11545:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 992,
														"name": "_asSingletonArray",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1407,
														"src": "11527:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														}
													},
													"id": 994,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11527:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11500:52:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 997,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 974,
															"src": "11584:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 998,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 956,
															"src": "11594:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1001,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11608:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1000,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11600:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 999,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11600:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 1002,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11600:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1003,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 982,
															"src": "11612:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1004,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 991,
															"src": "11617:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"hexValue": "",
															"id": 1005,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11626:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 996,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1232,
														"src": "11563:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 1006,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11563:66:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1007,
												"nodeType": "ExpressionStatement",
												"src": "11563:66:1"
											},
											{
												"assignments": [
													1009
												],
												"declarations": [
													{
														"constant": false,
														"id": 1009,
														"mutability": "mutable",
														"name": "fromBalance",
														"nameLocation": "11648:11:1",
														"nodeType": "VariableDeclaration",
														"scope": 1057,
														"src": "11640:19:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1008,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11640:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1015,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 1010,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 197,
															"src": "11662:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(uint256 => mapping(address => uint256))"
															}
														},
														"id": 1012,
														"indexExpression": {
															"id": 1011,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 958,
															"src": "11672:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "11662:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1014,
													"indexExpression": {
														"id": 1013,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 956,
														"src": "11676:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "11662:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11640:41:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1019,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1017,
																"name": "fromBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1009,
																"src": "11699:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1018,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 960,
																"src": "11714:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "11699:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a206275726e20616d6f756e7420657863656564732062616c616e6365",
															"id": 1020,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11722:38:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685",
																"typeString": "literal_string \"ERC1155: burn amount exceeds balance\""
															},
															"value": "ERC1155: burn amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685",
																"typeString": "literal_string \"ERC1155: burn amount exceeds balance\""
															}
														],
														"id": 1016,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11691:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1021,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11691:70:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1022,
												"nodeType": "ExpressionStatement",
												"src": "11691:70:1"
											},
											{
												"id": 1033,
												"nodeType": "UncheckedBlock",
												"src": "11771:77:1",
												"statements": [
													{
														"expression": {
															"id": 1031,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 1023,
																		"name": "_balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 197,
																		"src": "11795:9:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(uint256 => mapping(address => uint256))"
																		}
																	},
																	"id": 1026,
																	"indexExpression": {
																		"id": 1024,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 958,
																		"src": "11805:2:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "11795:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1027,
																"indexExpression": {
																	"id": 1025,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 956,
																	"src": "11809:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "11795:19:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1030,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1028,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1009,
																	"src": "11817:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 1029,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 960,
																	"src": "11831:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "11817:20:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "11795:42:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1032,
														"nodeType": "ExpressionStatement",
														"src": "11795:42:1"
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1035,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 974,
															"src": "11878:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1036,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 956,
															"src": "11888:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1039,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11902:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1038,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11894:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1037,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11894:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 1040,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11894:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1041,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 958,
															"src": "11906:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1042,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 960,
															"src": "11910:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1034,
														"name": "TransferSingle",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1473,
														"src": "11863:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256)"
														}
													},
													"id": 1043,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11863:54:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1044,
												"nodeType": "EmitStatement",
												"src": "11858:59:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1046,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 974,
															"src": "11948:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1047,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 956,
															"src": "11958:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1050,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11972:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1049,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11964:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1048,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11964:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 1051,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11964:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1052,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 982,
															"src": "11976:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1053,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 991,
															"src": "11981:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"hexValue": "",
															"id": 1054,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11990:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 1045,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1251,
														"src": "11928:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 1055,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11928:65:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1056,
												"nodeType": "ExpressionStatement",
												"src": "11928:65:1"
											}
										]
									},
									"documentation": {
										"id": 954,
										"nodeType": "StructuredDocumentation",
										"src": "10934:275:1",
										"text": " @dev Destroys `amount` tokens of token type `id` from `from`\n Emits a {TransferSingle} event.\n Requirements:\n - `from` cannot be the zero address.\n - `from` must have at least `amount` tokens of token type `id`."
									},
									"id": 1058,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "11223:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 961,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 956,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "11246:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1058,
												"src": "11238:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 955,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11238:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 958,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "11268:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1058,
												"src": "11260:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 957,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11260:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 960,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "11288:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 1058,
												"src": "11280:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 959,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11280:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11228:72:1"
									},
									"returnParameters": {
										"id": 962,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11318:0:1"
									},
									"scope": 1413,
									"src": "11214:786:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1180,
										"nodeType": "Block",
										"src": "12368:814:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1076,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1071,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1061,
																"src": "12386:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1074,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "12402:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1073,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "12394:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1072,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "12394:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 1075,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12394:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "12386:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 1077,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12406:37:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a",
																"typeString": "literal_string \"ERC1155: burn from the zero address\""
															},
															"value": "ERC1155: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a",
																"typeString": "literal_string \"ERC1155: burn from the zero address\""
															}
														],
														"id": 1070,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "12378:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1078,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12378:66:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1079,
												"nodeType": "ExpressionStatement",
												"src": "12378:66:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1085,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1081,
																	"name": "ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1064,
																	"src": "12462:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 1082,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "12462:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 1083,
																	"name": "amounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1067,
																	"src": "12476:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 1084,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "12476:14:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "12462:28:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2069647320616e6420616d6f756e7473206c656e677468206d69736d61746368",
															"id": 1086,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12492:42:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																"typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
															},
															"value": "ERC1155: ids and amounts length mismatch"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																"typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
															}
														],
														"id": 1080,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "12454:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1087,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12454:81:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1088,
												"nodeType": "ExpressionStatement",
												"src": "12454:81:1"
											},
											{
												"assignments": [
													1090
												],
												"declarations": [
													{
														"constant": false,
														"id": 1090,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "12554:8:1",
														"nodeType": "VariableDeclaration",
														"scope": 1180,
														"src": "12546:16:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1089,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "12546:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1093,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1091,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1902,
														"src": "12565:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 1092,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12565:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12546:31:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1095,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1090,
															"src": "12609:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1096,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1061,
															"src": "12619:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1099,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12633:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1098,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12625:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1097,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "12625:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 1100,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12625:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1101,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1064,
															"src": "12637:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1102,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1067,
															"src": "12642:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"hexValue": "",
															"id": 1103,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12651:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 1094,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1232,
														"src": "12588:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 1104,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12588:66:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1105,
												"nodeType": "ExpressionStatement",
												"src": "12588:66:1"
											},
											{
												"body": {
													"id": 1155,
													"nodeType": "Block",
													"src": "12706:323:1",
													"statements": [
														{
															"assignments": [
																1118
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1118,
																	"mutability": "mutable",
																	"name": "id",
																	"nameLocation": "12728:2:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 1155,
																	"src": "12720:10:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1117,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "12720:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1122,
															"initialValue": {
																"baseExpression": {
																	"id": 1119,
																	"name": "ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1064,
																	"src": "12733:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 1121,
																"indexExpression": {
																	"id": 1120,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1107,
																	"src": "12737:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "12733:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "12720:19:1"
														},
														{
															"assignments": [
																1124
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1124,
																	"mutability": "mutable",
																	"name": "amount",
																	"nameLocation": "12761:6:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 1155,
																	"src": "12753:14:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1123,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "12753:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1128,
															"initialValue": {
																"baseExpression": {
																	"id": 1125,
																	"name": "amounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1067,
																	"src": "12770:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 1127,
																"indexExpression": {
																	"id": 1126,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1107,
																	"src": "12778:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "12770:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "12753:27:1"
														},
														{
															"assignments": [
																1130
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1130,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "12803:11:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 1155,
																	"src": "12795:19:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1129,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "12795:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1136,
															"initialValue": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 1131,
																		"name": "_balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 197,
																		"src": "12817:9:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(uint256 => mapping(address => uint256))"
																		}
																	},
																	"id": 1133,
																	"indexExpression": {
																		"id": 1132,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1118,
																		"src": "12827:2:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "12817:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1135,
																"indexExpression": {
																	"id": 1134,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1061,
																	"src": "12831:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "12817:19:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "12795:41:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1140,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1138,
																			"name": "fromBalance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1130,
																			"src": "12858:11:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"id": 1139,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1124,
																			"src": "12873:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "12858:21:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "455243313135353a206275726e20616d6f756e7420657863656564732062616c616e6365",
																		"id": 1141,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "12881:38:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685",
																			"typeString": "literal_string \"ERC1155: burn amount exceeds balance\""
																		},
																		"value": "ERC1155: burn amount exceeds balance"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685",
																			"typeString": "literal_string \"ERC1155: burn amount exceeds balance\""
																		}
																	],
																	"id": 1137,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "12850:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1142,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12850:70:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1143,
															"nodeType": "ExpressionStatement",
															"src": "12850:70:1"
														},
														{
															"id": 1154,
															"nodeType": "UncheckedBlock",
															"src": "12934:85:1",
															"statements": [
																{
																	"expression": {
																		"id": 1152,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"baseExpression": {
																					"id": 1144,
																					"name": "_balances",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 197,
																					"src": "12962:9:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																						"typeString": "mapping(uint256 => mapping(address => uint256))"
																					}
																				},
																				"id": 1147,
																				"indexExpression": {
																					"id": 1145,
																					"name": "id",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1118,
																					"src": "12972:2:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "12962:13:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 1148,
																			"indexExpression": {
																				"id": 1146,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1061,
																				"src": "12976:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "12962:19:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1151,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1149,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1130,
																				"src": "12984:11:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 1150,
																				"name": "amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1124,
																				"src": "12998:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "12984:20:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "12962:42:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1153,
																	"nodeType": "ExpressionStatement",
																	"src": "12962:42:1"
																}
															]
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1113,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1110,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1107,
														"src": "12685:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1111,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1064,
															"src": "12689:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 1112,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "12689:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12685:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1156,
												"initializationExpression": {
													"assignments": [
														1107
													],
													"declarations": [
														{
															"constant": false,
															"id": 1107,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "12678:1:1",
															"nodeType": "VariableDeclaration",
															"scope": 1156,
															"src": "12670:9:1",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1106,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "12670:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1109,
													"initialValue": {
														"hexValue": "30",
														"id": 1108,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12682:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "12670:13:1"
												},
												"loopExpression": {
													"expression": {
														"id": 1115,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "12701:3:1",
														"subExpression": {
															"id": 1114,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1107,
															"src": "12701:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1116,
													"nodeType": "ExpressionStatement",
													"src": "12701:3:1"
												},
												"nodeType": "ForStatement",
												"src": "12665:364:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1158,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1090,
															"src": "13058:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1159,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1061,
															"src": "13068:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1162,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13082:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1161,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "13074:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1160,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "13074:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 1163,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13074:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1164,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1064,
															"src": "13086:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1165,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1067,
															"src": "13091:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														],
														"id": 1157,
														"name": "TransferBatch",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1488,
														"src": "13044:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory)"
														}
													},
													"id": 1166,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13044:55:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1167,
												"nodeType": "EmitStatement",
												"src": "13039:60:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1169,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1090,
															"src": "13130:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1170,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1061,
															"src": "13140:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1173,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13154:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1172,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "13146:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1171,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "13146:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 1174,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13146:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1175,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1064,
															"src": "13158:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1176,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1067,
															"src": "13163:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"hexValue": "",
															"id": 1177,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13172:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 1168,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1251,
														"src": "13110:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 1178,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13110:65:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1179,
												"nodeType": "ExpressionStatement",
												"src": "13110:65:1"
											}
										]
									},
									"documentation": {
										"id": 1059,
										"nodeType": "StructuredDocumentation",
										"src": "12006:228:1",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_burn}.\n Emits a {TransferBatch} event.\n Requirements:\n - `ids` and `amounts` must have the same length."
									},
									"id": 1181,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burnBatch",
									"nameLocation": "12248:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1068,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1061,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "12276:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1181,
												"src": "12268:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1060,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12268:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1064,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "12307:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 1181,
												"src": "12290:20:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1062,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "12290:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1063,
													"nodeType": "ArrayTypeName",
													"src": "12290:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1067,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "12337:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1181,
												"src": "12320:24:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1065,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "12320:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1066,
													"nodeType": "ArrayTypeName",
													"src": "12320:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12258:92:1"
									},
									"returnParameters": {
										"id": 1069,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12368:0:1"
									},
									"scope": 1413,
									"src": "12239:943:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1212,
										"nodeType": "Block",
										"src": "13441:200:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1194,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1192,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1184,
																"src": "13459:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 1193,
																"name": "operator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1186,
																"src": "13468:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "13459:17:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2073657474696e6720617070726f76616c2073746174757320666f722073656c66",
															"id": 1195,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13478:43:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2",
																"typeString": "literal_string \"ERC1155: setting approval status for self\""
															},
															"value": "ERC1155: setting approval status for self"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2",
																"typeString": "literal_string \"ERC1155: setting approval status for self\""
															}
														],
														"id": 1191,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "13451:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1196,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13451:71:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1197,
												"nodeType": "ExpressionStatement",
												"src": "13451:71:1"
											},
											{
												"expression": {
													"id": 1204,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1198,
																"name": "_operatorApprovals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 203,
																"src": "13532:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(address => bool))"
																}
															},
															"id": 1201,
															"indexExpression": {
																"id": 1199,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1184,
																"src": "13551:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "13532:25:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1202,
														"indexExpression": {
															"id": 1200,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1186,
															"src": "13558:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "13532:35:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1203,
														"name": "approved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1188,
														"src": "13570:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "13532:46:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1205,
												"nodeType": "ExpressionStatement",
												"src": "13532:46:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1207,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1184,
															"src": "13608:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1208,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1186,
															"src": "13615:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1209,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1188,
															"src": "13625:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1206,
														"name": "ApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1497,
														"src": "13593:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 1210,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13593:41:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1211,
												"nodeType": "EmitStatement",
												"src": "13588:46:1"
											}
										]
									},
									"documentation": {
										"id": 1182,
										"nodeType": "StructuredDocumentation",
										"src": "13188:125:1",
										"text": " @dev Approve `operator` to operate on all of `owner` tokens\n Emits an {ApprovalForAll} event."
									},
									"id": 1213,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setApprovalForAll",
									"nameLocation": "13327:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1189,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1184,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "13363:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 1213,
												"src": "13355:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1183,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13355:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1186,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "13386:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1213,
												"src": "13378:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13378:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1188,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "13409:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1213,
												"src": "13404:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1187,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "13404:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13345:78:1"
									},
									"returnParameters": {
										"id": 1190,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13441:0:1"
									},
									"scope": 1413,
									"src": "13318:323:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1231,
										"nodeType": "Block",
										"src": "14789:2:1",
										"statements": []
									},
									"documentation": {
										"id": 1214,
										"nodeType": "StructuredDocumentation",
										"src": "13647:925:1",
										"text": " @dev Hook that is called before any token transfer. This includes minting\n and burning, as well as batched variants.\n The same hook is called on both single and batched variants. For single\n transfers, the length of the `ids` and `amounts` arrays will be 1.\n Calling conditions (for each `id` and `amount` pair):\n - When `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n of token type `id` will be  transferred to `to`.\n - When `from` is zero, `amount` tokens of token type `id` will be minted\n for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens of token type `id`\n will be burned.\n - `from` and `to` are never both zero.\n - `ids` and `amounts` have the same, non-zero length.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 1232,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nameLocation": "14586:20:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1216,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "14624:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1232,
												"src": "14616:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1215,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14616:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1218,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "14650:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1232,
												"src": "14642:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1217,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14642:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1220,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14672:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1232,
												"src": "14664:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1219,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14664:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1223,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "14701:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 1232,
												"src": "14684:20:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1221,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "14684:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1222,
													"nodeType": "ArrayTypeName",
													"src": "14684:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1226,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "14731:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1232,
												"src": "14714:24:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1224,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "14714:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1225,
													"nodeType": "ArrayTypeName",
													"src": "14714:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1228,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "14761:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1232,
												"src": "14748:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1227,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "14748:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14606:165:1"
									},
									"returnParameters": {
										"id": 1230,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14789:0:1"
									},
									"scope": 1413,
									"src": "14577:214:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1250,
										"nodeType": "Block",
										"src": "15935:2:1",
										"statements": []
									},
									"documentation": {
										"id": 1233,
										"nodeType": "StructuredDocumentation",
										"src": "14797:922:1",
										"text": " @dev Hook that is called after any token transfer. This includes minting\n and burning, as well as batched variants.\n The same hook is called on both single and batched variants. For single\n transfers, the length of the `id` and `amount` arrays will be 1.\n Calling conditions (for each `id` and `amount` pair):\n - When `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n of token type `id` will be  transferred to `to`.\n - When `from` is zero, `amount` tokens of token type `id` will be minted\n for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens of token type `id`\n will be burned.\n - `from` and `to` are never both zero.\n - `ids` and `amounts` have the same, non-zero length.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 1251,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_afterTokenTransfer",
									"nameLocation": "15733:19:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1235,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "15770:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1251,
												"src": "15762:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1234,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15762:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1237,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "15796:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1251,
												"src": "15788:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1236,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15788:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1239,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "15818:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1251,
												"src": "15810:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1238,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15810:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1242,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "15847:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 1251,
												"src": "15830:20:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1240,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "15830:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1241,
													"nodeType": "ArrayTypeName",
													"src": "15830:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1245,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "15877:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1251,
												"src": "15860:24:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1243,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "15860:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1244,
													"nodeType": "ArrayTypeName",
													"src": "15860:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1247,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "15907:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1251,
												"src": "15894:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1246,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "15894:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15752:165:1"
									},
									"returnParameters": {
										"id": 1249,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15935:0:1"
									},
									"scope": 1413,
									"src": "15724:213:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1313,
										"nodeType": "Block",
										"src": "16136:554:1",
										"statements": [
											{
												"condition": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1266,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1257,
															"src": "16150:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1267,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "isContract",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1609,
														"src": "16150:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$",
															"typeString": "function (address) view returns (bool)"
														}
													},
													"id": 1268,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16150:15:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1312,
												"nodeType": "IfStatement",
												"src": "16146:538:1",
												"trueBody": {
													"id": 1311,
													"nodeType": "Block",
													"src": "16167:517:1",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 1293,
																		"nodeType": "Block",
																		"src": "16295:195:1",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 1286,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1282,
																						"name": "response",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1280,
																						"src": "16317:8:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"expression": {
																							"expression": {
																								"id": 1283,
																								"name": "IERC1155ReceiverUpgradeable",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1454,
																								"src": "16329:27:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_IERC1155ReceiverUpgradeable_$1454_$",
																									"typeString": "type(contract IERC1155ReceiverUpgradeable)"
																								}
																							},
																							"id": 1284,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberName": "onERC1155Received",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1435,
																							"src": "16329:45:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
																								"typeString": "function IERC1155ReceiverUpgradeable.onERC1155Received(address,address,uint256,uint256,bytes calldata) returns (bytes4)"
																							}
																						},
																						"id": 1285,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "16329:54:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "16317:66:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1292,
																				"nodeType": "IfStatement",
																				"src": "16313:163:1",
																				"trueBody": {
																					"id": 1291,
																					"nodeType": "Block",
																					"src": "16385:91:1",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"hexValue": "455243313135353a204552433131353552656365697665722072656a656374656420746f6b656e73",
																										"id": 1288,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "string",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "16414:42:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
																											"typeString": "literal_string \"ERC1155: ERC1155Receiver rejected tokens\""
																										},
																										"value": "ERC1155: ERC1155Receiver rejected tokens"
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
																											"typeString": "literal_string \"ERC1155: ERC1155Receiver rejected tokens\""
																										}
																									],
																									"id": 1287,
																									"name": "revert",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [
																										4294967277,
																										4294967277
																									],
																									"referencedDeclaration": 4294967277,
																									"src": "16407:6:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																										"typeString": "function (string memory) pure"
																									}
																								},
																								"id": 1289,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "16407:50:1",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1290,
																							"nodeType": "ExpressionStatement",
																							"src": "16407:50:1"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1294,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1281,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1280,
																				"mutability": "mutable",
																				"name": "response",
																				"nameLocation": "16285:8:1",
																				"nodeType": "VariableDeclaration",
																				"scope": 1294,
																				"src": "16278:15:1",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 1279,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "16278:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "16277:17:1"
																	},
																	"src": "16269:221:1"
																},
																{
																	"block": {
																		"id": 1302,
																		"nodeType": "Block",
																		"src": "16525:47:1",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"id": 1299,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1296,
																							"src": "16550:6:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_string_memory_ptr",
																								"typeString": "string memory"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_string_memory_ptr",
																								"typeString": "string memory"
																							}
																						],
																						"id": 1298,
																						"name": "revert",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [
																							4294967277,
																							4294967277
																						],
																						"referencedDeclaration": 4294967277,
																						"src": "16543:6:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																							"typeString": "function (string memory) pure"
																						}
																					},
																					"id": 1300,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "16543:14:1",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 1301,
																				"nodeType": "ExpressionStatement",
																				"src": "16543:14:1"
																			}
																		]
																	},
																	"errorName": "Error",
																	"id": 1303,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1297,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1296,
																				"mutability": "mutable",
																				"name": "reason",
																				"nameLocation": "16517:6:1",
																				"nodeType": "VariableDeclaration",
																				"scope": 1303,
																				"src": "16503:20:1",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_string_memory_ptr",
																					"typeString": "string"
																				},
																				"typeName": {
																					"id": 1295,
																					"name": "string",
																					"nodeType": "ElementaryTypeName",
																					"src": "16503:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_storage_ptr",
																						"typeString": "string"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "16502:22:1"
																	},
																	"src": "16491:81:1"
																},
																{
																	"block": {
																		"id": 1308,
																		"nodeType": "Block",
																		"src": "16579:95:1",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"hexValue": "455243313135353a207472616e7366657220746f206e6f6e2d45524331313535526563656976657220696d706c656d656e746572",
																							"id": 1305,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "string",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "16604:54:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_stringliteral_f591f7b75ffc499e05f8b34c3364b2eceff651378d9549db1d5d67c0d8255c5d",
																								"typeString": "literal_string \"ERC1155: transfer to non-ERC1155Receiver implementer\""
																							},
																							"value": "ERC1155: transfer to non-ERC1155Receiver implementer"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_stringliteral_f591f7b75ffc499e05f8b34c3364b2eceff651378d9549db1d5d67c0d8255c5d",
																								"typeString": "literal_string \"ERC1155: transfer to non-ERC1155Receiver implementer\""
																							}
																						],
																						"id": 1304,
																						"name": "revert",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [
																							4294967277,
																							4294967277
																						],
																						"referencedDeclaration": 4294967277,
																						"src": "16597:6:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																							"typeString": "function (string memory) pure"
																						}
																					},
																					"id": 1306,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "16597:62:1",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 1307,
																				"nodeType": "ExpressionStatement",
																				"src": "16597:62:1"
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1309,
																	"nodeType": "TryCatchClause",
																	"src": "16573:101:1"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"id": 1273,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1253,
																		"src": "16235:8:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1274,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1255,
																		"src": "16245:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1275,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1259,
																		"src": "16251:2:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1276,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1261,
																		"src": "16255:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1277,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1263,
																		"src": "16263:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1270,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1257,
																				"src": "16213:2:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1269,
																			"name": "IERC1155ReceiverUpgradeable",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1454,
																			"src": "16185:27:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155ReceiverUpgradeable_$1454_$",
																				"typeString": "type(contract IERC1155ReceiverUpgradeable)"
																			}
																		},
																		"id": 1271,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "16185:31:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1155ReceiverUpgradeable_$1454",
																			"typeString": "contract IERC1155ReceiverUpgradeable"
																		}
																	},
																	"id": 1272,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "onERC1155Received",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1435,
																	"src": "16185:49:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256,uint256,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 1278,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16185:83:1",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 1310,
															"nodeType": "TryStatement",
															"src": "16181:493:1"
														}
													]
												}
											}
										]
									},
									"id": 1314,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_doSafeTransferAcceptanceCheck",
									"nameLocation": "15952:30:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1264,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1253,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "16000:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1314,
												"src": "15992:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1252,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15992:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1255,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "16026:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1314,
												"src": "16018:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1254,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16018:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1257,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "16048:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1314,
												"src": "16040:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16040:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1259,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "16068:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1314,
												"src": "16060:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1258,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16060:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1261,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "16088:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 1314,
												"src": "16080:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1260,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16080:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1263,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "16117:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1314,
												"src": "16104:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1262,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16104:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15982:145:1"
									},
									"returnParameters": {
										"id": 1265,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16136:0:1"
									},
									"scope": 1413,
									"src": "15943:747:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1378,
										"nodeType": "Block",
										"src": "16914:596:1",
										"statements": [
											{
												"condition": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1331,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1320,
															"src": "16928:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1332,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "isContract",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1609,
														"src": "16928:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$",
															"typeString": "function (address) view returns (bool)"
														}
													},
													"id": 1333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16928:15:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1377,
												"nodeType": "IfStatement",
												"src": "16924:580:1",
												"trueBody": {
													"id": 1376,
													"nodeType": "Block",
													"src": "16945:559:1",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 1358,
																		"nodeType": "Block",
																		"src": "17110:200:1",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 1351,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1347,
																						"name": "response",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1345,
																						"src": "17132:8:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"expression": {
																							"expression": {
																								"id": 1348,
																								"name": "IERC1155ReceiverUpgradeable",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1454,
																								"src": "17144:27:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_IERC1155ReceiverUpgradeable_$1454_$",
																									"typeString": "type(contract IERC1155ReceiverUpgradeable)"
																								}
																							},
																							"id": 1349,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberName": "onERC1155BatchReceived",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1453,
																							"src": "17144:50:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
																								"typeString": "function IERC1155ReceiverUpgradeable.onERC1155BatchReceived(address,address,uint256[] calldata,uint256[] calldata,bytes calldata) returns (bytes4)"
																							}
																						},
																						"id": 1350,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "17144:59:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "17132:71:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1357,
																				"nodeType": "IfStatement",
																				"src": "17128:168:1",
																				"trueBody": {
																					"id": 1356,
																					"nodeType": "Block",
																					"src": "17205:91:1",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"hexValue": "455243313135353a204552433131353552656365697665722072656a656374656420746f6b656e73",
																										"id": 1353,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "string",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "17234:42:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
																											"typeString": "literal_string \"ERC1155: ERC1155Receiver rejected tokens\""
																										},
																										"value": "ERC1155: ERC1155Receiver rejected tokens"
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
																											"typeString": "literal_string \"ERC1155: ERC1155Receiver rejected tokens\""
																										}
																									],
																									"id": 1352,
																									"name": "revert",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [
																										4294967277,
																										4294967277
																									],
																									"referencedDeclaration": 4294967277,
																									"src": "17227:6:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																										"typeString": "function (string memory) pure"
																									}
																								},
																								"id": 1354,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "17227:50:1",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1355,
																							"nodeType": "ExpressionStatement",
																							"src": "17227:50:1"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1359,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1346,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1345,
																				"mutability": "mutable",
																				"name": "response",
																				"nameLocation": "17087:8:1",
																				"nodeType": "VariableDeclaration",
																				"scope": 1359,
																				"src": "17080:15:1",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 1344,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "17080:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "17062:47:1"
																	},
																	"src": "17054:256:1"
																},
																{
																	"block": {
																		"id": 1367,
																		"nodeType": "Block",
																		"src": "17345:47:1",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"id": 1364,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1361,
																							"src": "17370:6:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_string_memory_ptr",
																								"typeString": "string memory"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_string_memory_ptr",
																								"typeString": "string memory"
																							}
																						],
																						"id": 1363,
																						"name": "revert",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [
																							4294967277,
																							4294967277
																						],
																						"referencedDeclaration": 4294967277,
																						"src": "17363:6:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																							"typeString": "function (string memory) pure"
																						}
																					},
																					"id": 1365,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "17363:14:1",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 1366,
																				"nodeType": "ExpressionStatement",
																				"src": "17363:14:1"
																			}
																		]
																	},
																	"errorName": "Error",
																	"id": 1368,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1362,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1361,
																				"mutability": "mutable",
																				"name": "reason",
																				"nameLocation": "17337:6:1",
																				"nodeType": "VariableDeclaration",
																				"scope": 1368,
																				"src": "17323:20:1",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_string_memory_ptr",
																					"typeString": "string"
																				},
																				"typeName": {
																					"id": 1360,
																					"name": "string",
																					"nodeType": "ElementaryTypeName",
																					"src": "17323:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_storage_ptr",
																						"typeString": "string"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "17322:22:1"
																	},
																	"src": "17311:81:1"
																},
																{
																	"block": {
																		"id": 1373,
																		"nodeType": "Block",
																		"src": "17399:95:1",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"hexValue": "455243313135353a207472616e7366657220746f206e6f6e2d45524331313535526563656976657220696d706c656d656e746572",
																							"id": 1370,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "string",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "17424:54:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_stringliteral_f591f7b75ffc499e05f8b34c3364b2eceff651378d9549db1d5d67c0d8255c5d",
																								"typeString": "literal_string \"ERC1155: transfer to non-ERC1155Receiver implementer\""
																							},
																							"value": "ERC1155: transfer to non-ERC1155Receiver implementer"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_stringliteral_f591f7b75ffc499e05f8b34c3364b2eceff651378d9549db1d5d67c0d8255c5d",
																								"typeString": "literal_string \"ERC1155: transfer to non-ERC1155Receiver implementer\""
																							}
																						],
																						"id": 1369,
																						"name": "revert",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [
																							4294967277,
																							4294967277
																						],
																						"referencedDeclaration": 4294967277,
																						"src": "17417:6:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																							"typeString": "function (string memory) pure"
																						}
																					},
																					"id": 1371,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "17417:62:1",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 1372,
																				"nodeType": "ExpressionStatement",
																				"src": "17417:62:1"
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1374,
																	"nodeType": "TryCatchClause",
																	"src": "17393:101:1"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"id": 1338,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1316,
																		"src": "17018:8:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1339,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1318,
																		"src": "17028:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1340,
																		"name": "ids",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1323,
																		"src": "17034:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	{
																		"id": 1341,
																		"name": "amounts",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1326,
																		"src": "17039:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	{
																		"id": 1342,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1328,
																		"src": "17048:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		},
																		{
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1335,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1320,
																				"src": "16991:2:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1334,
																			"name": "IERC1155ReceiverUpgradeable",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1454,
																			"src": "16963:27:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155ReceiverUpgradeable_$1454_$",
																				"typeString": "type(contract IERC1155ReceiverUpgradeable)"
																			}
																		},
																		"id": 1336,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "16963:31:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1155ReceiverUpgradeable_$1454",
																			"typeString": "contract IERC1155ReceiverUpgradeable"
																		}
																	},
																	"id": 1337,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "onERC1155BatchReceived",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1453,
																	"src": "16963:54:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 1343,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16963:90:1",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 1375,
															"nodeType": "TryStatement",
															"src": "16959:535:1"
														}
													]
												}
											}
										]
									},
									"id": 1379,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_doSafeBatchTransferAcceptanceCheck",
									"nameLocation": "16705:35:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1329,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1316,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "16758:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1379,
												"src": "16750:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1315,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16750:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1318,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "16784:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1379,
												"src": "16776:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1317,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16776:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1320,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "16806:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1379,
												"src": "16798:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1319,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16798:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1323,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "16835:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 1379,
												"src": "16818:20:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1321,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "16818:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1322,
													"nodeType": "ArrayTypeName",
													"src": "16818:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1326,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "16865:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1379,
												"src": "16848:24:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1324,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "16848:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1325,
													"nodeType": "ArrayTypeName",
													"src": "16848:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1328,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "16895:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1379,
												"src": "16882:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1327,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16882:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16740:165:1"
									},
									"returnParameters": {
										"id": 1330,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16914:0:1"
									},
									"scope": 1413,
									"src": "16696:814:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1406,
										"nodeType": "Block",
										"src": "17600:109:1",
										"statements": [
											{
												"assignments": [
													1391
												],
												"declarations": [
													{
														"constant": false,
														"id": 1391,
														"mutability": "mutable",
														"name": "array",
														"nameLocation": "17627:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 1406,
														"src": "17610:22:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 1389,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "17610:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1390,
															"nodeType": "ArrayTypeName",
															"src": "17610:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1397,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "31",
															"id": 1395,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "17649:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 1394,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "17635:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 1392,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "17639:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1393,
															"nodeType": "ArrayTypeName",
															"src": "17639:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														}
													},
													"id": 1396,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17635:16:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "17610:41:1"
											},
											{
												"expression": {
													"id": 1402,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1398,
															"name": "array",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1391,
															"src": "17661:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 1400,
														"indexExpression": {
															"hexValue": "30",
															"id": 1399,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "17667:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "17661:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1401,
														"name": "element",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1381,
														"src": "17672:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "17661:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1403,
												"nodeType": "ExpressionStatement",
												"src": "17661:18:1"
											},
											{
												"expression": {
													"id": 1404,
													"name": "array",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1391,
													"src": "17697:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"functionReturnParameters": 1386,
												"id": 1405,
												"nodeType": "Return",
												"src": "17690:12:1"
											}
										]
									},
									"id": 1407,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_asSingletonArray",
									"nameLocation": "17525:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1382,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1381,
												"mutability": "mutable",
												"name": "element",
												"nameLocation": "17551:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1407,
												"src": "17543:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1380,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17543:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17542:17:1"
									},
									"returnParameters": {
										"id": 1386,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1385,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1407,
												"src": "17582:16:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1383,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "17582:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1384,
													"nodeType": "ArrayTypeName",
													"src": "17582:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17581:18:1"
									},
									"scope": 1413,
									"src": "17516:193:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"constant": false,
									"documentation": {
										"id": 1408,
										"nodeType": "StructuredDocumentation",
										"src": "17715:254:1",
										"text": " @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
									},
									"id": 1412,
									"mutability": "mutable",
									"name": "__gap",
									"nameLocation": "17994:5:1",
									"nodeType": "VariableDeclaration",
									"scope": 1413,
									"src": "17974:25:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$47_storage",
										"typeString": "uint256[47]"
									},
									"typeName": {
										"baseType": {
											"id": 1409,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "17974:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 1411,
										"length": {
											"hexValue": "3437",
											"id": 1410,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "17982:2:1",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_47_by_1",
												"typeString": "int_const 47"
											},
											"value": "47"
										},
										"nodeType": "ArrayTypeName",
										"src": "17974:11:1",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$47_storage_ptr",
											"typeString": "uint256[47]"
										}
									},
									"visibility": "private"
								}
							],
							"scope": 1414,
							"src": "682:17320:1",
							"usedErrors": []
						}
					],
					"src": "109:17894:1"
				},
				"id": 1
			},
			"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/IERC1155ReceiverUpgradeable.sol": {
				"ast": {
					"absolutePath": "HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/IERC1155ReceiverUpgradeable.sol",
					"exportedSymbols": {
						"IERC1155ReceiverUpgradeable": [
							1454
						],
						"IERC165Upgradeable": [
							1973
						]
					},
					"id": 1455,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1415,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "118:23:2"
						},
						{
							"absolutePath": "HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/IERC165Upgradeable.sol",
							"file": "../../utils/introspection/IERC165Upgradeable.sol",
							"id": 1416,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1455,
							"sourceUnit": 1974,
							"src": "143:58:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1418,
										"name": "IERC165Upgradeable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1973,
										"src": "284:18:2"
									},
									"id": 1419,
									"nodeType": "InheritanceSpecifier",
									"src": "284:18:2"
								}
							],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1417,
								"nodeType": "StructuredDocumentation",
								"src": "203:39:2",
								"text": " @dev _Available since v3.1._"
							},
							"fullyImplemented": false,
							"id": 1454,
							"linearizedBaseContracts": [
								1454,
								1973
							],
							"name": "IERC1155ReceiverUpgradeable",
							"nameLocation": "253:27:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1420,
										"nodeType": "StructuredDocumentation",
										"src": "309:826:2",
										"text": " @dev Handles the receipt of a single ERC1155 token type. This function is\n called at the end of a `safeTransferFrom` after the balance has been updated.\n NOTE: To accept the transfer, this must return\n `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n (i.e. 0xf23a6e61, or its own function selector).\n @param operator The address which initiated the transfer (i.e. msg.sender)\n @param from The address which previously owned the token\n @param id The ID of the token being transferred\n @param value The amount of tokens being transferred\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"
									},
									"functionSelector": "f23a6e61",
									"id": 1435,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC1155Received",
									"nameLocation": "1149:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1431,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1422,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1184:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1435,
												"src": "1176:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1421,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1176:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1424,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1210:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1435,
												"src": "1202:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1423,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1202:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1426,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1232:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1435,
												"src": "1224:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1425,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1224:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1428,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1252:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1435,
												"src": "1244:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1427,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1244:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1430,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1282:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1435,
												"src": "1267:19:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1429,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1267:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1166:126:2"
									},
									"returnParameters": {
										"id": 1434,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1433,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1435,
												"src": "1311:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1432,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1311:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1310:8:2"
									},
									"scope": 1454,
									"src": "1140:179:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1436,
										"nodeType": "StructuredDocumentation",
										"src": "1325:994:2",
										"text": " @dev Handles the receipt of a multiple ERC1155 token types. This function\n is called at the end of a `safeBatchTransferFrom` after the balances have\n been updated.\n NOTE: To accept the transfer(s), this must return\n `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n (i.e. 0xbc197c81, or its own function selector).\n @param operator The address which initiated the batch transfer (i.e. msg.sender)\n @param from The address which previously owned the token\n @param ids An array containing ids of each token being transferred (order and length must match values array)\n @param values An array containing amounts of each token being transferred (order and length must match ids array)\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"
									},
									"functionSelector": "bc197c81",
									"id": 1453,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC1155BatchReceived",
									"nameLocation": "2333:22:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1449,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1438,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2373:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1453,
												"src": "2365:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1437,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2365:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1440,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2399:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1453,
												"src": "2391:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1439,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2391:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1443,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "2432:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 1453,
												"src": "2413:22:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1441,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2413:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1442,
													"nodeType": "ArrayTypeName",
													"src": "2413:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1446,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "2464:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 1453,
												"src": "2445:25:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1444,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2445:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1445,
													"nodeType": "ArrayTypeName",
													"src": "2445:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1448,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2495:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1453,
												"src": "2480:19:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1447,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2480:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2355:150:2"
									},
									"returnParameters": {
										"id": 1452,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1451,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1453,
												"src": "2524:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1450,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2524:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2523:8:2"
									},
									"scope": 1454,
									"src": "2324:208:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1455,
							"src": "243:2291:2",
							"usedErrors": []
						}
					],
					"src": "118:2417:2"
				},
				"id": 2
			},
			"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/IERC1155Upgradeable.sol": {
				"ast": {
					"absolutePath": "HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/IERC1155Upgradeable.sol",
					"exportedSymbols": {
						"IERC1155Upgradeable": [
							1576
						],
						"IERC165Upgradeable": [
							1973
						]
					},
					"id": 1577,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1456,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "110:23:3"
						},
						{
							"absolutePath": "HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/IERC165Upgradeable.sol",
							"file": "../../utils/introspection/IERC165Upgradeable.sol",
							"id": 1457,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1577,
							"sourceUnit": 1974,
							"src": "135:58:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1459,
										"name": "IERC165Upgradeable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1973,
										"src": "394:18:3"
									},
									"id": 1460,
									"nodeType": "InheritanceSpecifier",
									"src": "394:18:3"
								}
							],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1458,
								"nodeType": "StructuredDocumentation",
								"src": "195:165:3",
								"text": " @dev Required interface of an ERC1155 compliant contract, as defined in the\n https://eips.ethereum.org/EIPS/eip-1155[EIP].\n _Available since v3.1._"
							},
							"fullyImplemented": false,
							"id": 1576,
							"linearizedBaseContracts": [
								1576,
								1973
							],
							"name": "IERC1155Upgradeable",
							"nameLocation": "371:19:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1461,
										"nodeType": "StructuredDocumentation",
										"src": "419:121:3",
										"text": " @dev Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`."
									},
									"id": 1473,
									"name": "TransferSingle",
									"nameLocation": "551:14:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1472,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1463,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "582:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1473,
												"src": "566:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1462,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "566:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1465,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "608:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1473,
												"src": "592:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1464,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "592:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1467,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "630:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1473,
												"src": "614:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1466,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "614:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1469,
												"indexed": false,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "642:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1473,
												"src": "634:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1468,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1471,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "654:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1473,
												"src": "646:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1470,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "646:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "565:95:3"
									},
									"src": "545:116:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1474,
										"nodeType": "StructuredDocumentation",
										"src": "667:144:3",
										"text": " @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n transfers."
									},
									"id": 1488,
									"name": "TransferBatch",
									"nameLocation": "822:13:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1487,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1476,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "861:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1488,
												"src": "845:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1475,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "845:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1478,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "895:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1488,
												"src": "879:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1477,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "879:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1480,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "925:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1488,
												"src": "909:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1479,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "909:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1483,
												"indexed": false,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "947:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 1488,
												"src": "937:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1481,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "937:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1482,
													"nodeType": "ArrayTypeName",
													"src": "937:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1486,
												"indexed": false,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "970:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 1488,
												"src": "960:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1484,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "960:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1485,
													"nodeType": "ArrayTypeName",
													"src": "960:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "835:147:3"
									},
									"src": "816:167:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1489,
										"nodeType": "StructuredDocumentation",
										"src": "989:147:3",
										"text": " @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n `approved`."
									},
									"id": 1497,
									"name": "ApprovalForAll",
									"nameLocation": "1147:14:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1496,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1491,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1178:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1497,
												"src": "1162:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1490,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1162:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1493,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1203:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1497,
												"src": "1187:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1492,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1187:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1495,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "1218:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1497,
												"src": "1213:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1494,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1213:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1161:66:3"
									},
									"src": "1141:87:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1498,
										"nodeType": "StructuredDocumentation",
										"src": "1234:343:3",
										"text": " @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n If an {URI} event was emitted for `id`, the standard\n https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n returned by {IERC1155MetadataURI-uri}."
									},
									"id": 1504,
									"name": "URI",
									"nameLocation": "1588:3:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1503,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1500,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1599:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1504,
												"src": "1592:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1499,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1592:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1502,
												"indexed": true,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1622:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1504,
												"src": "1606:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1501,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1606:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1591:34:3"
									},
									"src": "1582:44:3"
								},
								{
									"documentation": {
										"id": 1505,
										"nodeType": "StructuredDocumentation",
										"src": "1632:173:3",
										"text": " @dev Returns the amount of tokens of token type `id` owned by `account`.\n Requirements:\n - `account` cannot be the zero address."
									},
									"functionSelector": "00fdd58e",
									"id": 1514,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1819:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1510,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1507,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1837:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1514,
												"src": "1829:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1506,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1829:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1509,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1854:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1514,
												"src": "1846:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1508,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1846:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1828:29:3"
									},
									"returnParameters": {
										"id": 1513,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1512,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1514,
												"src": "1881:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1511,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1881:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1880:9:3"
									},
									"scope": 1576,
									"src": "1810:80:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1515,
										"nodeType": "StructuredDocumentation",
										"src": "1896:188:3",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n Requirements:\n - `accounts` and `ids` must have the same length."
									},
									"functionSelector": "4e1273f4",
									"id": 1527,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOfBatch",
									"nameLocation": "2098:14:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1522,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1518,
												"mutability": "mutable",
												"name": "accounts",
												"nameLocation": "2132:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1527,
												"src": "2113:27:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1516,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2113:7:3",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1517,
													"nodeType": "ArrayTypeName",
													"src": "2113:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1521,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "2161:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 1527,
												"src": "2142:22:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1519,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2142:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1520,
													"nodeType": "ArrayTypeName",
													"src": "2142:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2112:53:3"
									},
									"returnParameters": {
										"id": 1526,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1525,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1527,
												"src": "2213:16:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1523,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2213:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1524,
													"nodeType": "ArrayTypeName",
													"src": "2213:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2212:18:3"
									},
									"scope": 1576,
									"src": "2089:142:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1528,
										"nodeType": "StructuredDocumentation",
										"src": "2237:248:3",
										"text": " @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n Emits an {ApprovalForAll} event.\n Requirements:\n - `operator` cannot be the caller."
									},
									"functionSelector": "a22cb465",
									"id": 1535,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "2499:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1533,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1530,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2525:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1535,
												"src": "2517:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1529,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2517:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1532,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "2540:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1535,
												"src": "2535:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1531,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2535:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2516:33:3"
									},
									"returnParameters": {
										"id": 1534,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2558:0:3"
									},
									"scope": 1576,
									"src": "2490:69:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1536,
										"nodeType": "StructuredDocumentation",
										"src": "2565:135:3",
										"text": " @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n See {setApprovalForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 1545,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "2714:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1541,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1538,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2739:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1545,
												"src": "2731:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1537,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2731:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1540,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2756:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1545,
												"src": "2748:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1539,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2748:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2730:35:3"
									},
									"returnParameters": {
										"id": 1544,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1543,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1545,
												"src": "2789:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1542,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2789:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2788:6:3"
									},
									"scope": 1576,
									"src": "2705:90:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1546,
										"nodeType": "StructuredDocumentation",
										"src": "2801:556:3",
										"text": " @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n - `from` must have a balance of tokens of type `id` of at least `amount`.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."
									},
									"functionSelector": "f242432a",
									"id": 1559,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "3371:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1557,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1548,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3405:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1559,
												"src": "3397:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1547,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3397:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1550,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3427:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1559,
												"src": "3419:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1549,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3419:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1552,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "3447:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1559,
												"src": "3439:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1551,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3439:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1554,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3467:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 1559,
												"src": "3459:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1553,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3459:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1556,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3498:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1559,
												"src": "3483:19:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1555,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3483:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3387:121:3"
									},
									"returnParameters": {
										"id": 1558,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3517:0:3"
									},
									"scope": 1576,
									"src": "3362:156:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1560,
										"nodeType": "StructuredDocumentation",
										"src": "3524:390:3",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n Emits a {TransferBatch} event.\n Requirements:\n - `ids` and `amounts` must have the same length.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."
									},
									"functionSelector": "2eb2c2d6",
									"id": 1575,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeBatchTransferFrom",
									"nameLocation": "3928:21:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1573,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1562,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3967:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1575,
												"src": "3959:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1561,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3959:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1564,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3989:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1575,
												"src": "3981:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1563,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3981:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1567,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "4020:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 1575,
												"src": "4001:22:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1565,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4001:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1566,
													"nodeType": "ArrayTypeName",
													"src": "4001:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1570,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "4052:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1575,
												"src": "4033:26:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1568,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4033:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1569,
													"nodeType": "ArrayTypeName",
													"src": "4033:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1572,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4084:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1575,
												"src": "4069:19:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1571,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4069:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3949:145:3"
									},
									"returnParameters": {
										"id": 1574,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4103:0:3"
									},
									"scope": 1576,
									"src": "3919:185:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1577,
							"src": "361:3745:3",
							"usedErrors": []
						}
					],
					"src": "110:3997:3"
				},
				"id": 3
			},
			"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/extensions/IERC1155MetadataURIUpgradeable.sol": {
				"ast": {
					"absolutePath": "HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/extensions/IERC1155MetadataURIUpgradeable.sol",
					"exportedSymbols": {
						"IERC1155MetadataURIUpgradeable": [
							1591
						],
						"IERC1155Upgradeable": [
							1576
						],
						"IERC165Upgradeable": [
							1973
						]
					},
					"id": 1592,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1578,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "117:23:4"
						},
						{
							"absolutePath": "HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/IERC1155Upgradeable.sol",
							"file": "../IERC1155Upgradeable.sol",
							"id": 1579,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1592,
							"sourceUnit": 1577,
							"src": "142:36:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1581,
										"name": "IERC1155Upgradeable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1576,
										"src": "419:19:4"
									},
									"id": 1582,
									"nodeType": "InheritanceSpecifier",
									"src": "419:19:4"
								}
							],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1580,
								"nodeType": "StructuredDocumentation",
								"src": "180:194:4",
								"text": " @dev Interface of the optional ERC1155MetadataExtension interface, as defined\n in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP].\n _Available since v3.1._"
							},
							"fullyImplemented": false,
							"id": 1591,
							"linearizedBaseContracts": [
								1591,
								1576,
								1973
							],
							"name": "IERC1155MetadataURIUpgradeable",
							"nameLocation": "385:30:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1583,
										"nodeType": "StructuredDocumentation",
										"src": "445:192:4",
										"text": " @dev Returns the URI for token type `id`.\n If the `\\{id\\}` substring is present in the URI, it must be replaced by\n clients with the actual token type ID."
									},
									"functionSelector": "0e89341c",
									"id": 1590,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "uri",
									"nameLocation": "651:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1586,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1585,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "663:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1590,
												"src": "655:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1584,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "655:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "654:12:4"
									},
									"returnParameters": {
										"id": 1589,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1588,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1590,
												"src": "690:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1587,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "690:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "689:15:4"
									},
									"scope": 1591,
									"src": "642:63:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1592,
							"src": "375:332:4",
							"usedErrors": []
						}
					],
					"src": "117:591:4"
				},
				"id": 4
			},
			"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol": {
				"ast": {
					"absolutePath": "HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol",
					"exportedSymbols": {
						"AddressUpgradeable": [
							1875
						]
					},
					"id": 1876,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1593,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1594,
								"nodeType": "StructuredDocumentation",
								"src": "126:67:5",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 1875,
							"linearizedBaseContracts": [
								1875
							],
							"name": "AddressUpgradeable",
							"nameLocation": "202:18:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1608,
										"nodeType": "Block",
										"src": "1252:254:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1606,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1602,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1597,
																"src": "1476:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1603,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1476:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1604,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1476:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1605,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1498:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1476:23:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1601,
												"id": 1607,
												"nodeType": "Return",
												"src": "1469:30:5"
											}
										]
									},
									"documentation": {
										"id": 1595,
										"nodeType": "StructuredDocumentation",
										"src": "227:954:5",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 1609,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "1195:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1598,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1597,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1214:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1609,
												"src": "1206:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1596,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1206:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1205:17:5"
									},
									"returnParameters": {
										"id": 1601,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1600,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1609,
												"src": "1246:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1599,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1246:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1245:6:5"
									},
									"scope": 1875,
									"src": "1186:320:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1642,
										"nodeType": "Block",
										"src": "2493:241:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1624,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1620,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2519:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_AddressUpgradeable_$1875",
																				"typeString": "library AddressUpgradeable"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_AddressUpgradeable_$1875",
																				"typeString": "library AddressUpgradeable"
																			}
																		],
																		"id": 1619,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2511:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1618,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2511:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1621,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2511:13:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1622,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2511:21:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1623,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1614,
																"src": "2536:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2511:31:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 1625,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2544:31:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 1617,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2503:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1626,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2503:73:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1627,
												"nodeType": "ExpressionStatement",
												"src": "2503:73:5"
											},
											{
												"assignments": [
													1629,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1629,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2593:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 1642,
														"src": "2588:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1628,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2588:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1636,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 1634,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2636:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 1630,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1612,
																"src": "2606:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 1631,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2606:14:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1633,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1632,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1614,
																"src": "2628:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2606:29:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1635,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2606:33:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2587:52:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1638,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1629,
															"src": "2657:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 1639,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2666:60:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 1637,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2649:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1640,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2649:78:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1641,
												"nodeType": "ExpressionStatement",
												"src": "2649:78:5"
											}
										]
									},
									"documentation": {
										"id": 1610,
										"nodeType": "StructuredDocumentation",
										"src": "1512:905:5",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 1643,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2431:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1615,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1612,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2457:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 1643,
												"src": "2441:25:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1611,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2441:15:5",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1614,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2476:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1643,
												"src": "2468:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1613,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2468:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2440:43:5"
									},
									"returnParameters": {
										"id": 1616,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2493:0:5"
									},
									"scope": 1875,
									"src": "2422:312:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1660,
										"nodeType": "Block",
										"src": "3565:96:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1654,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1646,
															"src": "3604:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1655,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1648,
															"src": "3612:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 1656,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3618:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 1657,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3621:32:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 1653,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1701,
															1745
														],
														"referencedDeclaration": 1745,
														"src": "3582:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1658,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3582:72:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1652,
												"id": 1659,
												"nodeType": "Return",
												"src": "3575:79:5"
											}
										]
									},
									"documentation": {
										"id": 1644,
										"nodeType": "StructuredDocumentation",
										"src": "2740:731:5",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 1661,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3485:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1649,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1646,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3506:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1661,
												"src": "3498:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1645,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3498:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1648,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3527:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1661,
												"src": "3514:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1647,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3514:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3497:35:5"
									},
									"returnParameters": {
										"id": 1652,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1651,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1661,
												"src": "3551:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1650,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3551:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3550:14:5"
									},
									"scope": 1875,
									"src": "3476:185:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1680,
										"nodeType": "Block",
										"src": "4030:76:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1674,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1664,
															"src": "4069:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1675,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1666,
															"src": "4077:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 1676,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4083:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 1677,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1668,
															"src": "4086:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1673,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1701,
															1745
														],
														"referencedDeclaration": 1745,
														"src": "4047:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1678,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4047:52:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1672,
												"id": 1679,
												"nodeType": "Return",
												"src": "4040:59:5"
											}
										]
									},
									"documentation": {
										"id": 1662,
										"nodeType": "StructuredDocumentation",
										"src": "3667:211:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 1681,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3892:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1669,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1664,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3922:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1681,
												"src": "3914:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1663,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3914:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1666,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3951:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1681,
												"src": "3938:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1665,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3938:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1668,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "3979:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 1681,
												"src": "3965:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1667,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3965:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3904:93:5"
									},
									"returnParameters": {
										"id": 1672,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1671,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1681,
												"src": "4016:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1670,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4016:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4015:14:5"
									},
									"scope": 1875,
									"src": "3883:223:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1700,
										"nodeType": "Block",
										"src": "4611:111:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1694,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1684,
															"src": "4650:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1695,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1686,
															"src": "4658:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1696,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1688,
															"src": "4664:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 1697,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4671:43:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 1693,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1701,
															1745
														],
														"referencedDeclaration": 1745,
														"src": "4628:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1698,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4628:87:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1692,
												"id": 1699,
												"nodeType": "Return",
												"src": "4621:94:5"
											}
										]
									},
									"documentation": {
										"id": 1682,
										"nodeType": "StructuredDocumentation",
										"src": "4112:351:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 1701,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4477:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1689,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1684,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4516:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1701,
												"src": "4508:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1683,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4508:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1686,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4545:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1701,
												"src": "4532:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1685,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4532:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1688,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4567:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1701,
												"src": "4559:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1687,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4559:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4498:80:5"
									},
									"returnParameters": {
										"id": 1692,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1691,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1701,
												"src": "4597:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1690,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4597:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4596:14:5"
									},
									"scope": 1875,
									"src": "4468:254:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1744,
										"nodeType": "Block",
										"src": "5149:267:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1722,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1718,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5175:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_AddressUpgradeable_$1875",
																				"typeString": "library AddressUpgradeable"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_AddressUpgradeable_$1875",
																				"typeString": "library AddressUpgradeable"
																			}
																		],
																		"id": 1717,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5167:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1716,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5167:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1719,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5167:13:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1720,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5167:21:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1721,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1708,
																"src": "5192:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5167:30:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 1723,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5199:40:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 1715,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5159:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1724,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5159:81:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1725,
												"nodeType": "ExpressionStatement",
												"src": "5159:81:5"
											},
											{
												"assignments": [
													1727,
													1729
												],
												"declarations": [
													{
														"constant": false,
														"id": 1727,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5256:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 1744,
														"src": "5251:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1726,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5251:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1729,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5278:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 1744,
														"src": "5265:23:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1728,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5265:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1736,
												"initialValue": {
													"arguments": [
														{
															"id": 1734,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1706,
															"src": "5318:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 1730,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1704,
																"src": "5292:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1731,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5292:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1733,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1732,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1708,
																"src": "5311:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5292:25:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1735,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5292:31:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5250:73:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1738,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1704,
															"src": "5367:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1739,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1727,
															"src": "5375:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1740,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1729,
															"src": "5384:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1741,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1710,
															"src": "5396:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1737,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1830,
														"src": "5340:26:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1742,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5340:69:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1714,
												"id": 1743,
												"nodeType": "Return",
												"src": "5333:76:5"
											}
										]
									},
									"documentation": {
										"id": 1702,
										"nodeType": "StructuredDocumentation",
										"src": "4728:237:5",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 1745,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4979:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1711,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1704,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5018:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1745,
												"src": "5010:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1703,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5010:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1706,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5047:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1745,
												"src": "5034:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1705,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5034:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1708,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5069:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1745,
												"src": "5061:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1707,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5061:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1710,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5098:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 1745,
												"src": "5084:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1709,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5084:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5000:116:5"
									},
									"returnParameters": {
										"id": 1714,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1713,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1745,
												"src": "5135:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1712,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5135:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5134:14:5"
									},
									"scope": 1875,
									"src": "4970:446:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1761,
										"nodeType": "Block",
										"src": "5693:97:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1756,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1748,
															"src": "5729:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1757,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1750,
															"src": "5737:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 1758,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5743:39:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 1755,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1762,
															1791
														],
														"referencedDeclaration": 1791,
														"src": "5710:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1759,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5710:73:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1754,
												"id": 1760,
												"nodeType": "Return",
												"src": "5703:80:5"
											}
										]
									},
									"documentation": {
										"id": 1746,
										"nodeType": "StructuredDocumentation",
										"src": "5422:166:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 1762,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5602:18:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1751,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1748,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5629:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1762,
												"src": "5621:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1747,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5621:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1750,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5650:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1762,
												"src": "5637:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1749,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5637:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5620:35:5"
									},
									"returnParameters": {
										"id": 1754,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1753,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1762,
												"src": "5679:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1752,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5679:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5678:14:5"
									},
									"scope": 1875,
									"src": "5593:197:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1790,
										"nodeType": "Block",
										"src": "6132:168:5",
										"statements": [
											{
												"assignments": [
													1775,
													1777
												],
												"declarations": [
													{
														"constant": false,
														"id": 1775,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6148:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 1790,
														"src": "6143:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1774,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6143:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1777,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6170:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 1790,
														"src": "6157:23:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1776,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6157:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1782,
												"initialValue": {
													"arguments": [
														{
															"id": 1780,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1767,
															"src": "6202:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1778,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1765,
															"src": "6184:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1779,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "6184:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 1781,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6184:23:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6142:65:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1784,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1765,
															"src": "6251:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1785,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1775,
															"src": "6259:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1786,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1777,
															"src": "6268:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1787,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1769,
															"src": "6280:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1783,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1830,
														"src": "6224:26:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1788,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6224:69:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1773,
												"id": 1789,
												"nodeType": "Return",
												"src": "6217:76:5"
											}
										]
									},
									"documentation": {
										"id": 1763,
										"nodeType": "StructuredDocumentation",
										"src": "5796:173:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 1791,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5983:18:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1770,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1765,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6019:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1791,
												"src": "6011:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1764,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6011:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1767,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6048:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1791,
												"src": "6035:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1766,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6035:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1769,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6076:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 1791,
												"src": "6062:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1768,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6062:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6001:93:5"
									},
									"returnParameters": {
										"id": 1773,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1772,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1791,
												"src": "6118:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1771,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6118:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6117:14:5"
									},
									"scope": 1875,
									"src": "5974:326:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1829,
										"nodeType": "Block",
										"src": "6782:434:5",
										"statements": [
											{
												"condition": {
													"id": 1805,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1796,
													"src": "6796:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1827,
													"nodeType": "Block",
													"src": "7152:58:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1823,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1798,
																		"src": "7174:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 1824,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1800,
																		"src": "7186:12:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1822,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1874,
																	"src": "7166:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 1825,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7166:33:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1826,
															"nodeType": "ExpressionStatement",
															"src": "7166:33:5"
														}
													]
												},
												"id": 1828,
												"nodeType": "IfStatement",
												"src": "6792:418:5",
												"trueBody": {
													"id": 1821,
													"nodeType": "Block",
													"src": "6805:341:5",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1809,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1806,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1798,
																		"src": "6823:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1807,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "6823:17:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1808,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6844:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "6823:22:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1818,
															"nodeType": "IfStatement",
															"src": "6819:286:5",
															"trueBody": {
																"id": 1817,
																"nodeType": "Block",
																"src": "6847:258:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 1812,
																							"name": "target",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1794,
																							"src": "7049:6:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 1811,
																						"name": "isContract",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1609,
																						"src": "7038:10:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																							"typeString": "function (address) view returns (bool)"
																						}
																					},
																					"id": 1813,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "7038:18:5",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				{
																					"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
																					"id": 1814,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "7058:31:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					},
																					"value": "Address: call to non-contract"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					}
																				],
																				"id": 1810,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967278,
																					4294967278
																				],
																				"referencedDeclaration": 4294967278,
																				"src": "7030:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (bool,string memory) pure"
																				}
																			},
																			"id": 1815,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7030:60:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1816,
																		"nodeType": "ExpressionStatement",
																		"src": "7030:60:5"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 1819,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1798,
																"src": "7125:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1804,
															"id": 1820,
															"nodeType": "Return",
															"src": "7118:17:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1792,
										"nodeType": "StructuredDocumentation",
										"src": "6306:277:5",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"
									},
									"id": 1830,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "6597:26:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1801,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1794,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6641:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1830,
												"src": "6633:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1793,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6633:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1796,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "6662:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1830,
												"src": "6657:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1795,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6657:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1798,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "6692:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 1830,
												"src": "6679:23:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1797,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6679:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1800,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6726:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 1830,
												"src": "6712:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1799,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6712:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6623:121:5"
									},
									"returnParameters": {
										"id": 1804,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1803,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1830,
												"src": "6768:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1802,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6768:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6767:14:5"
									},
									"scope": 1875,
									"src": "6588:628:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1853,
										"nodeType": "Block",
										"src": "7597:135:5",
										"statements": [
											{
												"condition": {
													"id": 1842,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1833,
													"src": "7611:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1851,
													"nodeType": "Block",
													"src": "7668:58:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1847,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1835,
																		"src": "7690:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 1848,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1837,
																		"src": "7702:12:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1846,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1874,
																	"src": "7682:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 1849,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7682:33:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1850,
															"nodeType": "ExpressionStatement",
															"src": "7682:33:5"
														}
													]
												},
												"id": 1852,
												"nodeType": "IfStatement",
												"src": "7607:119:5",
												"trueBody": {
													"id": 1845,
													"nodeType": "Block",
													"src": "7620:42:5",
													"statements": [
														{
															"expression": {
																"id": 1843,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1835,
																"src": "7641:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1841,
															"id": 1844,
															"nodeType": "Return",
															"src": "7634:17:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1831,
										"nodeType": "StructuredDocumentation",
										"src": "7222:210:5",
										"text": " @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"
									},
									"id": 1854,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "7446:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1838,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1833,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7477:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1854,
												"src": "7472:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1832,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7472:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1835,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7507:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 1854,
												"src": "7494:23:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1834,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7494:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1837,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7541:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 1854,
												"src": "7527:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1836,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7527:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7462:97:5"
									},
									"returnParameters": {
										"id": 1841,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1840,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1854,
												"src": "7583:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1839,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7583:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7582:14:5"
									},
									"scope": 1875,
									"src": "7437:295:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1873,
										"nodeType": "Block",
										"src": "7821:457:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1864,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1861,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1856,
															"src": "7897:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1862,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "7897:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1863,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7917:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7897:21:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1871,
													"nodeType": "Block",
													"src": "8227:45:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1868,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1858,
																		"src": "8248:12:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1867,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "8241:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (string memory) pure"
																	}
																},
																"id": 1869,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8241:20:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1870,
															"nodeType": "ExpressionStatement",
															"src": "8241:20:5"
														}
													]
												},
												"id": 1872,
												"nodeType": "IfStatement",
												"src": "7893:379:5",
												"trueBody": {
													"id": 1866,
													"nodeType": "Block",
													"src": "7920:301:5",
													"statements": [
														{
															"AST": {
																"nodeType": "YulBlock",
																"src": "8078:133:5",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "8096:40:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nodeType": "YulIdentifier",
																					"src": "8125:10:5"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "8119:5:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8119:17:5"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nodeType": "YulTypedName",
																				"src": "8100:15:5",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "8164:2:5",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nodeType": "YulIdentifier",
																							"src": "8168:10:5"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "8160:3:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8160:19:5"
																				},
																				{
																					"name": "returndata_size",
																					"nodeType": "YulIdentifier",
																					"src": "8181:15:5"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "8153:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8153:44:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8153:44:5"
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "london",
															"externalReferences": [
																{
																	"declaration": 1856,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "8125:10:5",
																	"valueSize": 1
																},
																{
																	"declaration": 1856,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "8168:10:5",
																	"valueSize": 1
																}
															],
															"id": 1865,
															"nodeType": "InlineAssembly",
															"src": "8069:142:5"
														}
													]
												}
											}
										]
									},
									"id": 1874,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "7747:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1859,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1856,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7768:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 1874,
												"src": "7755:23:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1855,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7755:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1858,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7794:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 1874,
												"src": "7780:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1857,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7780:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7754:53:5"
									},
									"returnParameters": {
										"id": 1860,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7821:0:5"
									},
									"scope": 1875,
									"src": "7738:540:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1876,
							"src": "194:8086:5",
							"usedErrors": []
						}
					],
					"src": "101:8180:5"
				},
				"id": 5
			},
			"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol": {
				"ast": {
					"absolutePath": "HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol",
					"exportedSymbols": {
						"AddressUpgradeable": [
							1875
						],
						"ContextUpgradeable": [
							1917
						],
						"Initializable": [
							168
						]
					},
					"id": 1918,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1877,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:6"
						},
						{
							"absolutePath": "HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 1878,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1918,
							"sourceUnit": 169,
							"src": "110:42:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1880,
										"name": "Initializable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 168,
										"src": "691:13:6"
									},
									"id": 1881,
									"nodeType": "InheritanceSpecifier",
									"src": "691:13:6"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1879,
								"nodeType": "StructuredDocumentation",
								"src": "154:496:6",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1917,
							"linearizedBaseContracts": [
								1917,
								168
							],
							"name": "ContextUpgradeable",
							"nameLocation": "669:18:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1886,
										"nodeType": "Block",
										"src": "763:7:6",
										"statements": []
									},
									"id": 1887,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1884,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1883,
												"name": "onlyInitializing",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 113,
												"src": "746:16:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "746:16:6"
										}
									],
									"name": "__Context_init",
									"nameLocation": "720:14:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1882,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "734:2:6"
									},
									"returnParameters": {
										"id": 1885,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "763:0:6"
									},
									"scope": 1917,
									"src": "711:59:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1892,
										"nodeType": "Block",
										"src": "838:7:6",
										"statements": []
									},
									"id": 1893,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1890,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1889,
												"name": "onlyInitializing",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 113,
												"src": "821:16:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "821:16:6"
										}
									],
									"name": "__Context_init_unchained",
									"nameLocation": "785:24:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1888,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "809:2:6"
									},
									"returnParameters": {
										"id": 1891,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "838:0:6"
									},
									"scope": 1917,
									"src": "776:69:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1901,
										"nodeType": "Block",
										"src": "912:34:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1898,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "929:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1899,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "929:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1897,
												"id": 1900,
												"nodeType": "Return",
												"src": "922:17:6"
											}
										]
									},
									"id": 1902,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "859:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1894,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "869:2:6"
									},
									"returnParameters": {
										"id": 1897,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1896,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1902,
												"src": "903:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1895,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "903:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "902:9:6"
									},
									"scope": 1917,
									"src": "850:96:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1910,
										"nodeType": "Block",
										"src": "1019:32:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1907,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1036:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1908,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "1036:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1906,
												"id": 1909,
												"nodeType": "Return",
												"src": "1029:15:6"
											}
										]
									},
									"id": 1911,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "961:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1903,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "969:2:6"
									},
									"returnParameters": {
										"id": 1906,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1905,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1911,
												"src": "1003:14:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1904,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1003:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1002:16:6"
									},
									"scope": 1917,
									"src": "952:99:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"constant": false,
									"documentation": {
										"id": 1912,
										"nodeType": "StructuredDocumentation",
										"src": "1057:254:6",
										"text": " @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
									},
									"id": 1916,
									"mutability": "mutable",
									"name": "__gap",
									"nameLocation": "1336:5:6",
									"nodeType": "VariableDeclaration",
									"scope": 1917,
									"src": "1316:25:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$50_storage",
										"typeString": "uint256[50]"
									},
									"typeName": {
										"baseType": {
											"id": 1913,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1316:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 1915,
										"length": {
											"hexValue": "3530",
											"id": 1914,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1324:2:6",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_50_by_1",
												"typeString": "int_const 50"
											},
											"value": "50"
										},
										"nodeType": "ArrayTypeName",
										"src": "1316:11:6",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$50_storage_ptr",
											"typeString": "uint256[50]"
										}
									},
									"visibility": "private"
								}
							],
							"scope": 1918,
							"src": "651:693:6",
							"usedErrors": []
						}
					],
					"src": "86:1259:6"
				},
				"id": 6
			},
			"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol": {
				"ast": {
					"absolutePath": "HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol",
					"exportedSymbols": {
						"AddressUpgradeable": [
							1875
						],
						"ERC165Upgradeable": [
							1961
						],
						"IERC165Upgradeable": [
							1973
						],
						"Initializable": [
							168
						]
					},
					"id": 1962,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1919,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "99:23:7"
						},
						{
							"absolutePath": "HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/IERC165Upgradeable.sol",
							"file": "./IERC165Upgradeable.sol",
							"id": 1920,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1962,
							"sourceUnit": 1974,
							"src": "124:34:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol",
							"file": "../../proxy/utils/Initializable.sol",
							"id": 1921,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1962,
							"sourceUnit": 169,
							"src": "159:45:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1923,
										"name": "Initializable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 168,
										"src": "822:13:7"
									},
									"id": 1924,
									"nodeType": "InheritanceSpecifier",
									"src": "822:13:7"
								},
								{
									"baseName": {
										"id": 1925,
										"name": "IERC165Upgradeable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1973,
										"src": "837:18:7"
									},
									"id": 1926,
									"nodeType": "InheritanceSpecifier",
									"src": "837:18:7"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1922,
								"nodeType": "StructuredDocumentation",
								"src": "206:576:7",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."
							},
							"fullyImplemented": true,
							"id": 1961,
							"linearizedBaseContracts": [
								1961,
								1973,
								168
							],
							"name": "ERC165Upgradeable",
							"nameLocation": "801:17:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1931,
										"nodeType": "Block",
										"src": "913:7:7",
										"statements": []
									},
									"id": 1932,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1929,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1928,
												"name": "onlyInitializing",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 113,
												"src": "896:16:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "896:16:7"
										}
									],
									"name": "__ERC165_init",
									"nameLocation": "871:13:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1927,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "884:2:7"
									},
									"returnParameters": {
										"id": 1930,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "913:0:7"
									},
									"scope": 1961,
									"src": "862:58:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1937,
										"nodeType": "Block",
										"src": "987:7:7",
										"statements": []
									},
									"id": 1938,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1935,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1934,
												"name": "onlyInitializing",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 113,
												"src": "970:16:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "970:16:7"
										}
									],
									"name": "__ERC165_init_unchained",
									"nameLocation": "935:23:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1933,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "958:2:7"
									},
									"returnParameters": {
										"id": 1936,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "987:0:7"
									},
									"scope": 1961,
									"src": "926:68:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1972
									],
									"body": {
										"id": 1954,
										"nodeType": "Block",
										"src": "1151:75:7",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 1952,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1947,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1941,
														"src": "1168:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1949,
																	"name": "IERC165Upgradeable",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1973,
																	"src": "1188:18:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165Upgradeable_$1973_$",
																		"typeString": "type(contract IERC165Upgradeable)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165Upgradeable_$1973_$",
																		"typeString": "type(contract IERC165Upgradeable)"
																	}
																],
																"id": 1948,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "1183:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1950,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1183:24:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165Upgradeable_$1973",
																"typeString": "type(contract IERC165Upgradeable)"
															}
														},
														"id": 1951,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "1183:36:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "1168:51:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1946,
												"id": 1953,
												"nodeType": "Return",
												"src": "1161:58:7"
											}
										]
									},
									"documentation": {
										"id": 1939,
										"nodeType": "StructuredDocumentation",
										"src": "999:56:7",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 1955,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "1069:17:7",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1943,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1127:8:7"
									},
									"parameters": {
										"id": 1942,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1941,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "1094:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 1955,
												"src": "1087:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1940,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1087:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1086:20:7"
									},
									"returnParameters": {
										"id": 1946,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1945,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1955,
												"src": "1145:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1944,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1145:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1144:6:7"
									},
									"scope": 1961,
									"src": "1060:166:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 1956,
										"nodeType": "StructuredDocumentation",
										"src": "1232:254:7",
										"text": " @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
									},
									"id": 1960,
									"mutability": "mutable",
									"name": "__gap",
									"nameLocation": "1511:5:7",
									"nodeType": "VariableDeclaration",
									"scope": 1961,
									"src": "1491:25:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$50_storage",
										"typeString": "uint256[50]"
									},
									"typeName": {
										"baseType": {
											"id": 1957,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1491:7:7",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 1959,
										"length": {
											"hexValue": "3530",
											"id": 1958,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1499:2:7",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_50_by_1",
												"typeString": "int_const 50"
											},
											"value": "50"
										},
										"nodeType": "ArrayTypeName",
										"src": "1491:11:7",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$50_storage_ptr",
											"typeString": "uint256[50]"
										}
									},
									"visibility": "private"
								}
							],
							"scope": 1962,
							"src": "783:736:7",
							"usedErrors": []
						}
					],
					"src": "99:1421:7"
				},
				"id": 7
			},
			"HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/IERC165Upgradeable.sol": {
				"ast": {
					"absolutePath": "HypercertMinter/lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/IERC165Upgradeable.sol",
					"exportedSymbols": {
						"IERC165Upgradeable": [
							1973
						]
					},
					"id": 1974,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1963,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "100:23:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1964,
								"nodeType": "StructuredDocumentation",
								"src": "125:279:8",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 1973,
							"linearizedBaseContracts": [
								1973
							],
							"name": "IERC165Upgradeable",
							"nameLocation": "415:18:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1965,
										"nodeType": "StructuredDocumentation",
										"src": "440:340:8",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1972,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "794:17:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1968,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1967,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "819:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 1972,
												"src": "812:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1966,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "812:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "811:20:8"
									},
									"returnParameters": {
										"id": 1971,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1970,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1972,
												"src": "855:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1969,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "855:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "854:6:8"
									},
									"scope": 1973,
									"src": "785:76:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1974,
							"src": "405:458:8",
							"usedErrors": []
						}
					],
					"src": "100:764:8"
				},
				"id": 8
			}
		}
	}
}